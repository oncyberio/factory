{
  "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamondCut.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct IDiamondCut.FacetCut[]",
          "name": "_diamondCut",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "internalType": "struct Diamond.DiamondArgs",
          "name": "_args",
          "type": "tuple"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamondCut.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IDiamondCut.FacetCut[]",
          "name": "_diamondCut",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_init",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "DiamondCut",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamondCut.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct IDiamondCut.FacetCut[]",
          "name": "_diamondCut",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "_init",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "diamondCut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_functionSelector",
          "type": "bytes4"
        }
      ],
      "name": "facetAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "facetAddress_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "facetAddresses",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "facetAddresses_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_facet",
          "type": "address"
        }
      ],
      "name": "facetFunctionSelectors",
      "outputs": [
        {
          "internalType": "bytes4[]",
          "name": "facetFunctionSelectors_",
          "type": "bytes4[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "facets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct IDiamondLoupe.Facet[]",
          "name": "facets_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "DropCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "accountsByToken",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "batchMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_timeStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_priceStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_priceEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stepDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_shareCyber",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "createDrop",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "dropMintCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getDrop",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timeStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stepDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareCyber",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minted",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getMintPriceForToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_trustedForwarder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_opensea",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oncyber",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "minterNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oncyber",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "tokensByAccount",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "totalHolders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8d812a6636fee41f8e74a60f8ae3c5f576a687ab78a442aa1e86d85ae3d5907b",
  "receipt": {
    "to": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
    "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
    "contractAddress": null,
    "transactionIndex": 0,
    "gasUsed": "404527",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000800000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x3607db154034a17c2689aa6d95e159012e280692f7d21b30331f7f6c4bd4b9ad",
    "transactionHash": "0x8d812a6636fee41f8e74a60f8ae3c5f576a687ab78a442aa1e86d85ae3d5907b",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 9875275,
        "transactionHash": "0x8d812a6636fee41f8e74a60f8ae3c5f576a687ab78a442aa1e86d85ae3d5907b",
        "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
        "topics": [
          "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000ef9f6e60240ddeb14671aa83423a87687f06d7660000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000176dcfd8410000000000000000000000000000000000000000000000000000000000fdd58e000000000000000000000000000000000000000000000000000000004e1273f400000000000000000000000000000000000000000000000000000000f44192b400000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000005c5ed16d000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000db7fd408000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df0000000000000000000000000000000000000000000000000000000018160ddd00000000000000000000000000000000000000000000000000000000bd85b039000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 0,
        "blockHash": "0x3607db154034a17c2689aa6d95e159012e280692f7d21b30331f7f6c4bd4b9ad"
      }
    ],
    "events": [
      {
        "transactionIndex": 0,
        "blockNumber": 9875275,
        "transactionHash": "0x8d812a6636fee41f8e74a60f8ae3c5f576a687ab78a442aa1e86d85ae3d5907b",
        "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
        "topics": [
          "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000ef9f6e60240ddeb14671aa83423a87687f06d7660000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000176dcfd8410000000000000000000000000000000000000000000000000000000000fdd58e000000000000000000000000000000000000000000000000000000004e1273f400000000000000000000000000000000000000000000000000000000f44192b400000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000005c5ed16d000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000db7fd408000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df0000000000000000000000000000000000000000000000000000000018160ddd00000000000000000000000000000000000000000000000000000000bd85b039000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 0,
        "blockHash": "0x3607db154034a17c2689aa6d95e159012e280692f7d21b30331f7f6c4bd4b9ad",
        "args": [
          [
            [
              "0xeF9F6e60240ddeB14671Aa83423A87687F06D766",
              1,
              [
                "0x6dcfd841",
                "0x00fdd58e",
                "0x4e1273f4",
                "0xf44192b4",
                "0x081cdf12",
                "0xb3a721d1",
                "0x6787d449",
                "0x5c5ed16d",
                "0x0b885ac3",
                "0xe985e9c5",
                "0x572b6c05",
                "0x481c6a75",
                "0xdb7fd408",
                "0x1b023947",
                "0xbc01188e",
                "0x2eb2c2d6",
                "0xf242432a",
                "0xa22cb465",
                "0x85bff2e7",
                "0x13ba55df",
                "0x18160ddd",
                "0xbd85b039",
                "0x0e89341c"
              ]
            ]
          ],
          "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
          "0x0b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f00000000000000000000000000000000000000000000000000"
        ],
        "event": "DiamondCut",
        "eventSignature": "DiamondCut((address,uint8,bytes4[])[],address,bytes)"
      }
    ],
    "blockNumber": 9875275,
    "cumulativeGasUsed": "404527",
    "status": 1,
    "byzantium": true
  },
  "facets": [
    [
      "0x35D80A53F7be635f75152221d4D71CD4DCB07e5C",
      [
        "0x1f931c1c"
      ]
    ],
    [
      "0xC1bbdF9f8c0b6aE0B4d35E9A778080B691A72a3E",
      [
        "0xadfca15e",
        "0x7a0ed627",
        "0xcdffacc6",
        "0x52ef6b2c",
        "0x01ffc9a7"
      ]
    ],
    [
      "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
      [
        "0xf2fde38b",
        "0x8da5cb5b"
      ]
    ],
    {
      "facetAddress": "0xeF9F6e60240ddeB14671Aa83423A87687F06D766",
      "functionSelectors": [
        "0x6dcfd841",
        "0x00fdd58e",
        "0x4e1273f4",
        "0xf44192b4",
        "0x081cdf12",
        "0xb3a721d1",
        "0x6787d449",
        "0x5c5ed16d",
        "0x0b885ac3",
        "0xe985e9c5",
        "0x572b6c05",
        "0x481c6a75",
        "0xdb7fd408",
        "0x1b023947",
        "0xbc01188e",
        "0x2eb2c2d6",
        "0xf242432a",
        "0xa22cb465",
        "0x01ffc9a7",
        "0x85bff2e7",
        "0x13ba55df",
        "0x18160ddd",
        "0xbd85b039",
        "0x0e89341c"
      ]
    }
  ],
  "diamondCut": [
    {
      "facetAddress": "0xeF9F6e60240ddeB14671Aa83423A87687F06D766",
      "functionSelectors": [
        "0x6dcfd841",
        "0x00fdd58e",
        "0x4e1273f4",
        "0xf44192b4",
        "0x081cdf12",
        "0xb3a721d1",
        "0x6787d449",
        "0x5c5ed16d",
        "0x0b885ac3",
        "0xe985e9c5",
        "0x572b6c05",
        "0x481c6a75",
        "0xdb7fd408",
        "0x1b023947",
        "0xbc01188e",
        "0x2eb2c2d6",
        "0xf242432a",
        "0xa22cb465",
        "0x85bff2e7",
        "0x13ba55df",
        "0x18160ddd",
        "0xbd85b039",
        "0x0e89341c"
      ],
      "action": 1
    }
  ],
  "execute": {
    "methodName": "initialize",
    "args": [
      "ipfs://",
      "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
      "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
      "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
      "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d"
    ]
  },
  "history": [
    {
      "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
      "abi": [
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "internalType": "struct Diamond.DiamondArgs",
              "name": "_args",
              "type": "tuple"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "indexed": false,
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "name": "DiamondCut",
          "type": "event"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "name": "diamondCut",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_functionSelector",
              "type": "bytes4"
            }
          ],
          "name": "facetAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "facetAddress_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "facetAddresses",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "facetAddresses_",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_facet",
              "type": "address"
            }
          ],
          "name": "facetFunctionSelectors",
          "outputs": [
            {
              "internalType": "bytes4[]",
              "name": "facetFunctionSelectors_",
              "type": "bytes4[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "facets",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondLoupe.Facet[]",
              "name": "facets_",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            }
          ],
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "DestinationMinted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Minted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "getDrop",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "timeStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shareCyber",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minted",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "creator",
                  "type": "address"
                }
              ],
              "internalType": "struct LibUtilityStorage.Drop",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_manager",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_trustedForwarder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_opensea",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_oncyber",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "manager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_timeStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_timeEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amountCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_shareCyber",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "mintEdition",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "name": "minterNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "oncyber",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeBatchTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
      "receipt": {
        "to": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
        "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
        "contractAddress": null,
        "transactionIndex": 84,
        "gasUsed": "2591193",
        "logsBloom": "0x
        "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
        "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
        "logs": [
          {
            "transactionIndex": 84,
            "blockNumber": 9284533,
            "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
            "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "topics": [
              "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
            ],
            "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "logIndex": 97,
            "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
          },
          {
            "transactionIndex": 84,
            "blockNumber": 9284533,
            "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
            "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
            ],
            "data": "0x",
            "logIndex": 98,
            "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
          },
          {
            "transactionIndex": 84,
            "blockNumber": 9284533,
            "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
            "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
            "topics": [
              "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
            ],
            "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
            "logIndex": 99,
            "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
          },
          {
            "transactionIndex": 84,
            "blockNumber": 9284533,
            "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
            "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "topics": [
              "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "logIndex": 100,
            "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
          },
          {
            "transactionIndex": 84,
            "blockNumber": 9284533,
            "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
            "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
              "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
            ],
            "data": "0x",
            "logIndex": 101,
            "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
          }
        ],
        "events": [
          {
            "transactionIndex": 84,
            "blockNumber": 9284533,
            "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
            "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "topics": [
              "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
            ],
            "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "logIndex": 97,
            "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
          },
          {
            "transactionIndex": 84,
            "blockNumber": 9284533,
            "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
            "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
            ],
            "data": "0x",
            "logIndex": 98,
            "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
          },
          {
            "transactionIndex": 84,
            "blockNumber": 9284533,
            "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
            "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
            "topics": [
              "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
            ],
            "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
            "logIndex": 99,
            "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
            "args": [
              [
                {
                  "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                  "action": 0,
                  "functionSelectors": [
                    "0x1f931c1c"
                  ]
                },
                {
                  "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                  "action": 0,
                  "functionSelectors": [
                    "0xcdffacc6",
                    "0x52ef6b2c",
                    "0xadfca15e",
                    "0x7a0ed627",
                    "0x01ffc9a7"
                  ]
                },
                {
                  "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                  "action": 0,
                  "functionSelectors": [
                    "0xf2fde38b",
                    "0x8da5cb5b"
                  ]
                }
              ],
              {
                "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
              }
            ],
            "event": "DiamondCreated",
            "eventSignature": "DiamondCreated(address)"
          },
          {
            "transactionIndex": 84,
            "blockNumber": 9284533,
            "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
            "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "topics": [
              "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "logIndex": 100,
            "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
          },
          {
            "transactionIndex": 84,
            "blockNumber": 9284533,
            "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
            "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "topics": [
              "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
              "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
              "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
            ],
            "data": "0x",
            "logIndex": 101,
            "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
          }
        ],
        "blockNumber": 9284533,
        "cumulativeGasUsed": "20695988",
        "status": 1,
        "byzantium": true
      },
      "args": [
        [
          {
            "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
            "action": 0,
            "functionSelectors": [
              "0x1f931c1c"
            ]
          },
          {
            "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
            "action": 0,
            "functionSelectors": [
              "0xcdffacc6",
              "0x52ef6b2c",
              "0xadfca15e",
              "0x7a0ed627",
              "0x01ffc9a7"
            ]
          },
          {
            "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
            "action": 0,
            "functionSelectors": [
              "0xf2fde38b",
              "0x8da5cb5b"
            ]
          }
        ],
        {
          "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
        }
      ],
      "solcInputHash": "1d060b65b8264d57d416f20cb1fe798a",
      "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct Diamond.DiamondArgs\",\"name\":\"_args\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.7/diamond/Diamond.sol\":\"Diamond\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.7/diamond/Diamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n* \\n* Implementation of a diamond.\\n/******************************************************************************/\\n\\nimport \\\"./libraries/LibDiamond.sol\\\";\\nimport \\\"./interfaces/IDiamondLoupe.sol\\\";\\nimport \\\"./interfaces/IDiamondCut.sol\\\";\\nimport \\\"./interfaces/IERC173.sol\\\";\\nimport \\\"./interfaces/IERC165.sol\\\";\\n\\ncontract Diamond {\\n    // more arguments are added to this struct\\n    // this avoids stack too deep errors\\n    struct DiamondArgs {\\n        address owner;\\n    }\\n\\n    constructor(IDiamondCut.FacetCut[] memory _diamondCut, DiamondArgs memory _args) payable {\\n        LibDiamond.diamondCut(_diamondCut, address(0), new bytes(0));\\n        LibDiamond.setContractOwner(_args.owner);\\n\\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\\n\\n        // adding ERC165 data\\n        ds.supportedInterfaces[type(IERC165).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondCut).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondLoupe).interfaceId] = true;\\n        ds.supportedInterfaces[type(IERC173).interfaceId] = true;\\n    }\\n\\n    // Find facet for function that is called and execute the\\n    // function if a facet is found and return any value.\\n    fallback() external payable {\\n        LibDiamond.DiamondStorage storage ds;\\n        bytes32 position = LibDiamond.DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n        address facet = ds.selectorToFacetAndPosition[msg.sig].facetAddress;\\n        require(facet != address(0), \\\"Diamond: Function does not exist\\\");\\n        assembly {\\n            calldatacopy(0, 0, calldatasize())\\n            let result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\\n            returndatacopy(0, 0, returndatasize())\\n            switch result\\n                case 0 {\\n                    revert(0, returndatasize())\\n                }\\n                default {\\n                    return(0, returndatasize())\\n                }\\n        }\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x968d41f1fbb08e012a0617f3a8b865c06f60d783e043b675280741b791216202\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xfb3c1af58cd19e1e49f065e33c7c68045ce451c3e16920614979624c44faf892\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\n// A loupe is a small magnifying glass used to look at diamonds.\\n// These functions look at diamonds\\ninterface IDiamondLoupe {\\n    /// These functions are expected to be called frequently\\n    /// by tools.\\n\\n    struct Facet {\\n        address facetAddress;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\n    /// @return facets_ Facet\\n    function facets() external view returns (Facet[] memory facets_);\\n\\n    /// @notice Gets all the function selectors supported by a specific facet.\\n    /// @param _facet The facet address.\\n    /// @return facetFunctionSelectors_\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\n\\n    /// @notice Get all the facet addresses used by a diamond.\\n    /// @return facetAddresses_\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\n\\n    /// @notice Gets the facet that supports the given selector.\\n    /// @dev If facet is not found return address(0).\\n    /// @param _functionSelector The function selector.\\n    /// @return facetAddress_ The facet address.\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\n}\\n\",\"keccak256\":\"0xf4bc76153335588e7cb5fe1c9701857fd2ae0340ad94976adbf1c49054f82dfe\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\ninterface IERC165 {\\n    /// @notice Query if a contract implements an interface\\n    /// @param interfaceId The interface identifier, as specified in ERC-165\\n    /// @dev Interface identification is specified in ERC-165. This function\\n    ///  uses less than 30,000 gas.\\n    /// @return `true` if the contract implements `interfaceID` and\\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xe3ccc62939f8e880bdd4d5a34b05ccb9576810b8e999df6d16124e51019a0603\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0xa4023156092d7cb99c69e21bc95b910e13c54e582d6814601579bc2fb594ecf8\",\"license\":\"MIT\"},\"solc_0.7/diamond/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint16 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint16 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // uint16 selectorCount = uint16(diamondStorage().selectors.length);\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(oldFacetAddress, selector);\\n            // add function\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function removeFunction(address _facetAddress, bytes4 _selector) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint16(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = uint16(facetAddressPosition);\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n}\\n\",\"keccak256\":\"0x4eac03abb9864ad822b50481746c975a8e3e3278e179032cfc1b4b9c8e2320bc\",\"license\":\"MIT\"}},\"version\":1}",
      "bytecode": "0x608060405260405162002d4538038062002d45833981016040819052620000269162000db2565b604080516000808252602082019092526200004e918491620000f560201b620000db1760201c565b620000688160000151620002b560201b6200027d1760201c565b60006200007f6200031760201b620003021760201c565b6301ffc9a760e01b600090815260039091016020526040808220805460ff1990811660019081179092556307e4c70760e21b845282842080548216831790556348e2b09360e01b845282842080548216831790556307f5828d60e41b845291909220805490911690911790555062001442915050565b60005b8351811015620002665760008482815181106200011157fe5b6020026020010151602001519050600060028111156200012d57fe5b8160028111156200013a57fe5b14156200018957620001838583815181106200015257fe5b6020026020010151600001518684815181106200016b57fe5b6020026020010151604001516200033b60201b60201c565b6200025c565b60018160028111156200019857fe5b1415620001e15762000183858381518110620001b057fe5b602002602001015160000151868481518110620001c957fe5b6020026020010151604001516200054e60201b60201c565b6002816002811115620001f057fe5b14156200023957620001838583815181106200020857fe5b6020026020010151600001518684815181106200022157fe5b6020026020010151604001516200077860201b60201c565b60405162461bcd60e51b815260040162000253906200117c565b60405180910390fd5b50600101620000f8565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516200029c9392919062000f25565b60405180910390a1620002b082826200083f565b505050565b6000620002c162000317565b6004810180546001600160a01b038581166001600160a01b031983168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b60008151116200035f5760405162461bcd60e51b81526004016200025390620010d4565b60006200036b62000317565b90506001600160a01b038316620003965760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200043c57620003e08460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200045857fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620004ab5760405162461bcd60e51b81526004016200025390620012ba565b506001600160a01b0386166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790556001600160e01b0319909516835287905292902080546001600160a01b03191690911761ffff60a01b1916600160a01b61ffff86160217905591820191016200043f565b5050505050565b6000815111620005725760405162461bcd60e51b81526004016200025390620010d4565b60006200057e62000317565b90506001600160a01b038316620005a95760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200064f57620005f38460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200066b57fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03908116908716811415620006c45760405162461bcd60e51b8152600401620002539062001317565b620006d08183620009a0565b506001600160e01b03198116600081815260208681526040808320805461ffff60a01b1916600160a01b61ffff8a16021781556001600160a01b038b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281546001600160a01b0319169092179055918201910162000652565b60008151116200079c5760405162461bcd60e51b81526004016200025390620010d4565b6000620007a862000317565b90506001600160a01b03831615620007d45760405162461bcd60e51b8152600401620002539062001374565b60005b825181101562000839576000838281518110620007f057fe5b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166200082e8183620009a0565b5050600101620007d7565b50505050565b6001600160a01b0382166200087657805115620008705760405162461bcd60e51b8152600401620002539062001031565b62000978565b60008151116200089a5760405162461bcd60e51b815260040162000253906200120f565b6001600160a01b0382163014620008d057620008d08260405180606001604052806028815260200162002cf9602891396200097c565b600080836001600160a01b031683604051620008ed919062000f07565b600060405180830381855af49150503d80600081146200092a576040519150601f19603f3d011682016040523d82523d6000602084013e6200092f565b606091505b50915091508162000839578051156200095e578060405162461bcd60e51b815260040162000253919062001015565b60405162461bcd60e51b815260040162000253906200108e565b5050565b813b8181620008395760405162461bcd60e51b815260040162000253919062001015565b6000620009ac62000317565b90506001600160a01b038316620009d75760405162461bcd60e51b815260040162000253906200111f565b6001600160a01b03831630141562000a035760405162461bcd60e51b815260040162000253906200126c565b6001600160e01b03198216600090815260208281526040808320546001600160a01b03871684526001850190925290912054600160a01b90910461ffff16906000190180821462000b27576001600160a01b0385166000908152600184016020526040812080548390811062000a7557fe5b600091825260208083206008830401546001600160a01b038a168452600188019091526040909220805460079092166004026101000a90920460e01b92508291908590811062000ac157fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b031992909216825284905260409020805461ffff60a01b1916600160a01b61ffff8516021790555b6001600160a01b0385166000908152600184016020526040902080548062000b4b57fe5b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319861682528490526040902080546001600160b01b031916905580620005475760028301546001600160a01b03861660009081526001858101602052604090912001546000199091019061ffff1680821462000c6357600085600201838154811062000bec57fe5b6000918252602090912001546002870180546001600160a01b03909216925082918490811062000c1857fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018781019092526040902001805461ffff191661ffff83161790555b8460020180548062000c7157fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03891682526001878101909152604090912001805461ffff1916905550505050505050565b80516001600160a01b038116811462000cdb57600080fd5b919050565b600082601f83011262000cf1578081fd5b8151602062000d0a62000d0483620013f5565b620013d1565b828152818101908583018385028701840188101562000d27578586fd5b855b8581101562000d5d5781516001600160e01b03198116811462000d4a578788fd5b8452928401929084019060010162000d29565b5090979650505050505050565b60006020828403121562000d7c578081fd5b604051602081016001600160401b038111828210171562000d9957fe5b60405290508062000daa8362000cc3565b905292915050565b6000806040838503121562000dc5578182fd5b82516001600160401b038082111562000ddc578384fd5b818501915085601f83011262000df0578384fd5b8151602062000e0362000d0483620013f5565b82815281810190858301885b8581101562000eaa57815188016060818e03601f1901121562000e30578a8bfd5b604051606081018181108a8211171562000e4657fe5b60405262000e5682880162000cc3565b815260408201516003811062000e6a578c8dfd5b8188015260608201518981111562000e80578c8dfd5b62000e908f898386010162000ce0565b604083015250855250928401929084019060010162000e0f565b5050809750505062000ebf8882890162000d6a565b9450505050509250929050565b6001600160a01b03169052565b6000815180845262000ef381602086016020860162001413565b601f01601f19169290920160200192915050565b6000825162000f1b81846020870162001413565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101562000fe257898303607f19018652815180516001600160a01b0316845284810151898501906003811062000f7f57fe5b858701526040918201519185018a9052815190819052908501908a90898601905b8083101562000fcc5783516001600160e01b031916825292870192600192909201919087019062000fa0565b5097860197945050509083019060010162000f4b565b505062000ff28289018b62000ecc565b878103604089015262001006818a62000ed9565b9b9a5050505050505050505050565b6000602082526200102a602083018462000ed9565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656040820152651d995c9d195960d21b606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756040820152663a20b1ba34b7b760c91b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201526d3a30b1363290333ab731ba34b7b760911b606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b6040518181016001600160401b0381118282101715620013ed57fe5b604052919050565b60006001600160401b038211156200140957fe5b5060209081020190565b60005b838110156200143057818101518382015260200162001416565b83811115620008395750506000910152565b6118a780620014526000396000f3fe60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c634300070600334c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465",
      "deployedBytecode": "0x60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c63430007060033",
      "facets": [
        {
          "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
          "functionSelectors": [
            "0x00fdd58e",
            "0x4e1273f4",
            "0x6787d449",
            "0x0b885ac3",
            "0xe985e9c5",
            "0x572b6c05",
            "0x481c6a75",
            "0xdcf2cad4",
            "0x05322b74",
            "0x1b023947",
            "0xbc01188e",
            "0x2eb2c2d6",
            "0xf242432a",
            "0xa22cb465",
            "0x01ffc9a7",
            "0x18160ddd",
            "0x0e89341c"
          ]
        }
      ],
      "diamondCut": [
        {
          "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
          "functionSelectors": [
            "0x00fdd58e",
            "0x4e1273f4",
            "0x6787d449",
            "0x0b885ac3",
            "0xe985e9c5",
            "0x572b6c05",
            "0x481c6a75",
            "0xdcf2cad4",
            "0x05322b74",
            "0x1b023947",
            "0xbc01188e",
            "0x2eb2c2d6",
            "0xf242432a",
            "0xa22cb465",
            "0x18160ddd",
            "0x0e89341c"
          ],
          "action": 0
        }
      ],
      "execute": {
        "methodName": "initialize",
        "args": [
          "ipfs://",
          "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
          "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
          "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
          "0xD52b58d3a0B9d19FBABC9a9Cf98ffCDcC9a8161E"
        ]
      },
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "storageLayout": {
        "storage": [],
        "types": null
      }
    },
    {
      "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
      "abi": [
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "internalType": "struct Diamond.DiamondArgs",
              "name": "_args",
              "type": "tuple"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "indexed": false,
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "name": "DiamondCut",
          "type": "event"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "name": "diamondCut",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_functionSelector",
              "type": "bytes4"
            }
          ],
          "name": "facetAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "facetAddress_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "facetAddresses",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "facetAddresses_",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_facet",
              "type": "address"
            }
          ],
          "name": "facetFunctionSelectors",
          "outputs": [
            {
              "internalType": "bytes4[]",
              "name": "facetFunctionSelectors_",
              "type": "bytes4[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "facets",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondLoupe.Facet[]",
              "name": "facets_",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            }
          ],
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "DropCreated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Minted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "accountsByToken",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_timeStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_timeEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_priceStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_priceEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_stepDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amountCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_shareCyber",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "name": "createDrop",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "name": "dropMintCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "getDrop",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "timeStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stepDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shareCyber",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minted",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "getMintPriceForToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "mintPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_timeSpent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_priceStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_priceEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_stepDuration",
              "type": "uint256"
            }
          ],
          "name": "getPriceFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_manager",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_trustedForwarder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_opensea",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_oncyber",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "manager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "name": "mint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "name": "minterNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "oncyber",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeBatchTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "tokensByAccount",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "totalHolders",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
      "receipt": {
        "to": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
        "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
        "contractAddress": null,
        "transactionIndex": 0,
        "gasUsed": "555152",
        "logsBloom": "0x
        "blockHash": "0x6bc28c4fe5c4caa2fcc5200304edbd60a8935f6cc2958b1ce4dacb7aa688ac83",
        "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
        "logs": [
          {
            "transactionIndex": 0,
            "blockNumber": 9822632,
            "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
            "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "topics": [
              "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185bdcf2cad40000000000000000000000000000000000000000000000000000000005322b7400000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000e00fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a75000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c00000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000096dcfd84100000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000005c5ed16d00000000000000000000000000000000000000000000000000000000d61b0c8200000000000000000000000000000000000000000000000000000000db7fd4080000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df00000000000000000000000000000000000000000000000000000000bd85b0390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "logIndex": 0,
            "blockHash": "0x6bc28c4fe5c4caa2fcc5200304edbd60a8935f6cc2958b1ce4dacb7aa688ac83"
          }
        ],
        "events": [
          {
            "transactionIndex": 0,
            "blockNumber": 9822632,
            "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
            "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "topics": [
              "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000058000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000003600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002dcf2cad40000000000000000000000000000000000000000000000000000000005322b7400000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000e00fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a75000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c00000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000096dcfd84100000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000005c5ed16d00000000000000000000000000000000000000000000000000000000d61b0c8200000000000000000000000000000000000000000000000000000000db7fd4080000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df00000000000000000000000000000000000000000000000000000000bd85b0390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "logIndex": 0,
            "blockHash": "0x6bc28c4fe5c4caa2fcc5200304edbd60a8935f6cc2958b1ce4dacb7aa688ac83",
            "args": [
              [
                [
                  "0x0000000000000000000000000000000000000000",
                  2,
                  [
                    "0xdcf2cad4",
                    "0x05322b74"
                  ]
                ],
                [
                  "0x481A220d69c31E114Bf3Ac69094f3Abf895D123d",
                  1,
                  [
                    "0x00fdd58e",
                    "0x4e1273f4",
                    "0x6787d449",
                    "0x0b885ac3",
                    "0xe985e9c5",
                    "0x572b6c05",
                    "0x481c6a75",
                    "0x1b023947",
                    "0xbc01188e",
                    "0x2eb2c2d6",
                    "0xf242432a",
                    "0xa22cb465",
                    "0x18160ddd",
                    "0x0e89341c"
                  ]
                ],
                [
                  "0x481A220d69c31E114Bf3Ac69094f3Abf895D123d",
                  0,
                  [
                    "0x6dcfd841",
                    "0x081cdf12",
                    "0xb3a721d1",
                    "0x5c5ed16d",
                    "0xd61b0c82",
                    "0xdb7fd408",
                    "0x85bff2e7",
                    "0x13ba55df",
                    "0xbd85b039"
                  ]
                ]
              ],
              "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
              "0x0b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f00000000000000000000000000000000000000000000000000"
            ],
            "event": "DiamondCut",
            "eventSignature": "DiamondCut((address,uint8,bytes4[])[],address,bytes)"
          }
        ],
        "blockNumber": 9822632,
        "cumulativeGasUsed": "555152",
        "status": 1,
        "byzantium": true
      },
      "facets": [
        [
          "0x35D80A53F7be635f75152221d4D71CD4DCB07e5C",
          [
            "0x1f931c1c"
          ]
        ],
        [
          "0xC1bbdF9f8c0b6aE0B4d35E9A778080B691A72a3E",
          [
            "0xadfca15e",
            "0x7a0ed627",
            "0xcdffacc6",
            "0x52ef6b2c",
            "0x01ffc9a7"
          ]
        ],
        [
          "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
          [
            "0xf2fde38b",
            "0x8da5cb5b"
          ]
        ],
        {
          "facetAddress": "0x481a220d69c31e114bf3ac69094f3abf895d123d",
          "functionSelectors": [
            "0x6dcfd841",
            "0x00fdd58e",
            "0x4e1273f4",
            "0x081cdf12",
            "0xb3a721d1",
            "0x6787d449",
            "0x5c5ed16d",
            "0xd61b0c82",
            "0x0b885ac3",
            "0xe985e9c5",
            "0x572b6c05",
            "0x481c6a75",
            "0xdb7fd408",
            "0x1b023947",
            "0xbc01188e",
            "0x2eb2c2d6",
            "0xf242432a",
            "0xa22cb465",
            "0x01ffc9a7",
            "0x85bff2e7",
            "0x13ba55df",
            "0x18160ddd",
            "0xbd85b039",
            "0x0e89341c"
          ]
        }
      ],
      "diamondCut": [
        {
          "facetAddress": "0x0000000000000000000000000000000000000000",
          "functionSelectors": [
            "0xdcf2cad4",
            "0x05322b74"
          ],
          "action": 2
        },
        {
          "facetAddress": "0x481a220d69c31e114bf3ac69094f3abf895d123d",
          "functionSelectors": [
            "0x00fdd58e",
            "0x4e1273f4",
            "0x6787d449",
            "0x0b885ac3",
            "0xe985e9c5",
            "0x572b6c05",
            "0x481c6a75",
            "0x1b023947",
            "0xbc01188e",
            "0x2eb2c2d6",
            "0xf242432a",
            "0xa22cb465",
            "0x18160ddd",
            "0x0e89341c"
          ],
          "action": 1
        },
        {
          "facetAddress": "0x481a220d69c31e114bf3ac69094f3abf895d123d",
          "functionSelectors": [
            "0x6dcfd841",
            "0x081cdf12",
            "0xb3a721d1",
            "0x5c5ed16d",
            "0xd61b0c82",
            "0xdb7fd408",
            "0x85bff2e7",
            "0x13ba55df",
            "0xbd85b039"
          ],
          "action": 0
        }
      ],
      "execute": {
        "methodName": "initialize",
        "args": [
          "ipfs://",
          "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
          "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
          "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
          "0xD52b58d3a0B9d19FBABC9a9Cf98ffCDcC9a8161E"
        ]
      },
      "history": [
        {
          "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Diamond.DiamondArgs",
                  "name": "_args",
                  "type": "tuple"
                }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_init",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                }
              ],
              "name": "DiamondCut",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "internalType": "address",
                  "name": "_init",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                }
              ],
              "name": "diamondCut",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_functionSelector",
                  "type": "bytes4"
                }
              ],
              "name": "facetAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "facetAddress_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "facetAddresses",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "facetAddresses_",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_facet",
                  "type": "address"
                }
              ],
              "name": "facetFunctionSelectors",
              "outputs": [
                {
                  "internalType": "bytes4[]",
                  "name": "facetFunctionSelectors_",
                  "type": "bytes4[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "facets",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondLoupe.Facet[]",
                  "name": "facets_",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "DestinationMinted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Minted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "name": "TransferBatch",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "TransferSingle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "URI",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                }
              ],
              "name": "balanceOfBatch",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getDrop",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "timeStart",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timeEnd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shareCyber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountCap",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minted",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "creator",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct LibUtilityStorage.Drop",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "_manager",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_trustedForwarder",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_opensea",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_oncyber",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                }
              ],
              "name": "isTrustedForwarder",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "manager",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_timeStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_timeEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amountCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_shareCyber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "mintEdition",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_minter",
                  "type": "address"
                }
              ],
              "name": "minterNonce",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oncyber",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeBatchTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "uri",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
          "receipt": {
            "to": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
            "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
            "contractAddress": null,
            "transactionIndex": 84,
            "gasUsed": "2591193",
            "logsBloom": "0x
            "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
            "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
            "logs": [
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 97,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
                ],
                "data": "0x",
                "logIndex": 98,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                "topics": [
                  "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
                ],
                "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
                "logIndex": 99,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 100,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
                  "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
                ],
                "data": "0x",
                "logIndex": 101,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              }
            ],
            "events": [
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 97,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
                ],
                "data": "0x",
                "logIndex": 98,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                "topics": [
                  "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
                ],
                "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
                "logIndex": 99,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
                "args": [
                  [
                    {
                      "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                      "action": 0,
                      "functionSelectors": [
                        "0x1f931c1c"
                      ]
                    },
                    {
                      "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                      "action": 0,
                      "functionSelectors": [
                        "0xcdffacc6",
                        "0x52ef6b2c",
                        "0xadfca15e",
                        "0x7a0ed627",
                        "0x01ffc9a7"
                      ]
                    },
                    {
                      "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                      "action": 0,
                      "functionSelectors": [
                        "0xf2fde38b",
                        "0x8da5cb5b"
                      ]
                    }
                  ],
                  {
                    "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
                  }
                ],
                "event": "DiamondCreated",
                "eventSignature": "DiamondCreated(address)"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 100,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
                  "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
                ],
                "data": "0x",
                "logIndex": 101,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              }
            ],
            "blockNumber": 9284533,
            "cumulativeGasUsed": "20695988",
            "status": 1,
            "byzantium": true
          },
          "args": [
            [
              {
                "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                "action": 0,
                "functionSelectors": [
                  "0x1f931c1c"
                ]
              },
              {
                "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                "action": 0,
                "functionSelectors": [
                  "0xcdffacc6",
                  "0x52ef6b2c",
                  "0xadfca15e",
                  "0x7a0ed627",
                  "0x01ffc9a7"
                ]
              },
              {
                "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                "action": 0,
                "functionSelectors": [
                  "0xf2fde38b",
                  "0x8da5cb5b"
                ]
              }
            ],
            {
              "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
            }
          ],
          "solcInputHash": "1d060b65b8264d57d416f20cb1fe798a",
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct Diamond.DiamondArgs\",\"name\":\"_args\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.7/diamond/Diamond.sol\":\"Diamond\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.7/diamond/Diamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n* \\n* Implementation of a diamond.\\n/******************************************************************************/\\n\\nimport \\\"./libraries/LibDiamond.sol\\\";\\nimport \\\"./interfaces/IDiamondLoupe.sol\\\";\\nimport \\\"./interfaces/IDiamondCut.sol\\\";\\nimport \\\"./interfaces/IERC173.sol\\\";\\nimport \\\"./interfaces/IERC165.sol\\\";\\n\\ncontract Diamond {\\n    // more arguments are added to this struct\\n    // this avoids stack too deep errors\\n    struct DiamondArgs {\\n        address owner;\\n    }\\n\\n    constructor(IDiamondCut.FacetCut[] memory _diamondCut, DiamondArgs memory _args) payable {\\n        LibDiamond.diamondCut(_diamondCut, address(0), new bytes(0));\\n        LibDiamond.setContractOwner(_args.owner);\\n\\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\\n\\n        // adding ERC165 data\\n        ds.supportedInterfaces[type(IERC165).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondCut).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondLoupe).interfaceId] = true;\\n        ds.supportedInterfaces[type(IERC173).interfaceId] = true;\\n    }\\n\\n    // Find facet for function that is called and execute the\\n    // function if a facet is found and return any value.\\n    fallback() external payable {\\n        LibDiamond.DiamondStorage storage ds;\\n        bytes32 position = LibDiamond.DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n        address facet = ds.selectorToFacetAndPosition[msg.sig].facetAddress;\\n        require(facet != address(0), \\\"Diamond: Function does not exist\\\");\\n        assembly {\\n            calldatacopy(0, 0, calldatasize())\\n            let result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\\n            returndatacopy(0, 0, returndatasize())\\n            switch result\\n                case 0 {\\n                    revert(0, returndatasize())\\n                }\\n                default {\\n                    return(0, returndatasize())\\n                }\\n        }\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x968d41f1fbb08e012a0617f3a8b865c06f60d783e043b675280741b791216202\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xfb3c1af58cd19e1e49f065e33c7c68045ce451c3e16920614979624c44faf892\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\n// A loupe is a small magnifying glass used to look at diamonds.\\n// These functions look at diamonds\\ninterface IDiamondLoupe {\\n    /// These functions are expected to be called frequently\\n    /// by tools.\\n\\n    struct Facet {\\n        address facetAddress;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\n    /// @return facets_ Facet\\n    function facets() external view returns (Facet[] memory facets_);\\n\\n    /// @notice Gets all the function selectors supported by a specific facet.\\n    /// @param _facet The facet address.\\n    /// @return facetFunctionSelectors_\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\n\\n    /// @notice Get all the facet addresses used by a diamond.\\n    /// @return facetAddresses_\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\n\\n    /// @notice Gets the facet that supports the given selector.\\n    /// @dev If facet is not found return address(0).\\n    /// @param _functionSelector The function selector.\\n    /// @return facetAddress_ The facet address.\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\n}\\n\",\"keccak256\":\"0xf4bc76153335588e7cb5fe1c9701857fd2ae0340ad94976adbf1c49054f82dfe\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\ninterface IERC165 {\\n    /// @notice Query if a contract implements an interface\\n    /// @param interfaceId The interface identifier, as specified in ERC-165\\n    /// @dev Interface identification is specified in ERC-165. This function\\n    ///  uses less than 30,000 gas.\\n    /// @return `true` if the contract implements `interfaceID` and\\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xe3ccc62939f8e880bdd4d5a34b05ccb9576810b8e999df6d16124e51019a0603\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0xa4023156092d7cb99c69e21bc95b910e13c54e582d6814601579bc2fb594ecf8\",\"license\":\"MIT\"},\"solc_0.7/diamond/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint16 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint16 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // uint16 selectorCount = uint16(diamondStorage().selectors.length);\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(oldFacetAddress, selector);\\n            // add function\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function removeFunction(address _facetAddress, bytes4 _selector) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint16(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = uint16(facetAddressPosition);\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n}\\n\",\"keccak256\":\"0x4eac03abb9864ad822b50481746c975a8e3e3278e179032cfc1b4b9c8e2320bc\",\"license\":\"MIT\"}},\"version\":1}",
          "bytecode": "0x608060405260405162002d4538038062002d45833981016040819052620000269162000db2565b604080516000808252602082019092526200004e918491620000f560201b620000db1760201c565b620000688160000151620002b560201b6200027d1760201c565b60006200007f6200031760201b620003021760201c565b6301ffc9a760e01b600090815260039091016020526040808220805460ff1990811660019081179092556307e4c70760e21b845282842080548216831790556348e2b09360e01b845282842080548216831790556307f5828d60e41b845291909220805490911690911790555062001442915050565b60005b8351811015620002665760008482815181106200011157fe5b6020026020010151602001519050600060028111156200012d57fe5b8160028111156200013a57fe5b14156200018957620001838583815181106200015257fe5b6020026020010151600001518684815181106200016b57fe5b6020026020010151604001516200033b60201b60201c565b6200025c565b60018160028111156200019857fe5b1415620001e15762000183858381518110620001b057fe5b602002602001015160000151868481518110620001c957fe5b6020026020010151604001516200054e60201b60201c565b6002816002811115620001f057fe5b14156200023957620001838583815181106200020857fe5b6020026020010151600001518684815181106200022157fe5b6020026020010151604001516200077860201b60201c565b60405162461bcd60e51b815260040162000253906200117c565b60405180910390fd5b50600101620000f8565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516200029c9392919062000f25565b60405180910390a1620002b082826200083f565b505050565b6000620002c162000317565b6004810180546001600160a01b038581166001600160a01b031983168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b60008151116200035f5760405162461bcd60e51b81526004016200025390620010d4565b60006200036b62000317565b90506001600160a01b038316620003965760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200043c57620003e08460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200045857fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620004ab5760405162461bcd60e51b81526004016200025390620012ba565b506001600160a01b0386166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790556001600160e01b0319909516835287905292902080546001600160a01b03191690911761ffff60a01b1916600160a01b61ffff86160217905591820191016200043f565b5050505050565b6000815111620005725760405162461bcd60e51b81526004016200025390620010d4565b60006200057e62000317565b90506001600160a01b038316620005a95760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200064f57620005f38460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200066b57fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03908116908716811415620006c45760405162461bcd60e51b8152600401620002539062001317565b620006d08183620009a0565b506001600160e01b03198116600081815260208681526040808320805461ffff60a01b1916600160a01b61ffff8a16021781556001600160a01b038b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281546001600160a01b0319169092179055918201910162000652565b60008151116200079c5760405162461bcd60e51b81526004016200025390620010d4565b6000620007a862000317565b90506001600160a01b03831615620007d45760405162461bcd60e51b8152600401620002539062001374565b60005b825181101562000839576000838281518110620007f057fe5b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166200082e8183620009a0565b5050600101620007d7565b50505050565b6001600160a01b0382166200087657805115620008705760405162461bcd60e51b8152600401620002539062001031565b62000978565b60008151116200089a5760405162461bcd60e51b815260040162000253906200120f565b6001600160a01b0382163014620008d057620008d08260405180606001604052806028815260200162002cf9602891396200097c565b600080836001600160a01b031683604051620008ed919062000f07565b600060405180830381855af49150503d80600081146200092a576040519150601f19603f3d011682016040523d82523d6000602084013e6200092f565b606091505b50915091508162000839578051156200095e578060405162461bcd60e51b815260040162000253919062001015565b60405162461bcd60e51b815260040162000253906200108e565b5050565b813b8181620008395760405162461bcd60e51b815260040162000253919062001015565b6000620009ac62000317565b90506001600160a01b038316620009d75760405162461bcd60e51b815260040162000253906200111f565b6001600160a01b03831630141562000a035760405162461bcd60e51b815260040162000253906200126c565b6001600160e01b03198216600090815260208281526040808320546001600160a01b03871684526001850190925290912054600160a01b90910461ffff16906000190180821462000b27576001600160a01b0385166000908152600184016020526040812080548390811062000a7557fe5b600091825260208083206008830401546001600160a01b038a168452600188019091526040909220805460079092166004026101000a90920460e01b92508291908590811062000ac157fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b031992909216825284905260409020805461ffff60a01b1916600160a01b61ffff8516021790555b6001600160a01b0385166000908152600184016020526040902080548062000b4b57fe5b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319861682528490526040902080546001600160b01b031916905580620005475760028301546001600160a01b03861660009081526001858101602052604090912001546000199091019061ffff1680821462000c6357600085600201838154811062000bec57fe5b6000918252602090912001546002870180546001600160a01b03909216925082918490811062000c1857fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018781019092526040902001805461ffff191661ffff83161790555b8460020180548062000c7157fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03891682526001878101909152604090912001805461ffff1916905550505050505050565b80516001600160a01b038116811462000cdb57600080fd5b919050565b600082601f83011262000cf1578081fd5b8151602062000d0a62000d0483620013f5565b620013d1565b828152818101908583018385028701840188101562000d27578586fd5b855b8581101562000d5d5781516001600160e01b03198116811462000d4a578788fd5b8452928401929084019060010162000d29565b5090979650505050505050565b60006020828403121562000d7c578081fd5b604051602081016001600160401b038111828210171562000d9957fe5b60405290508062000daa8362000cc3565b905292915050565b6000806040838503121562000dc5578182fd5b82516001600160401b038082111562000ddc578384fd5b818501915085601f83011262000df0578384fd5b8151602062000e0362000d0483620013f5565b82815281810190858301885b8581101562000eaa57815188016060818e03601f1901121562000e30578a8bfd5b604051606081018181108a8211171562000e4657fe5b60405262000e5682880162000cc3565b815260408201516003811062000e6a578c8dfd5b8188015260608201518981111562000e80578c8dfd5b62000e908f898386010162000ce0565b604083015250855250928401929084019060010162000e0f565b5050809750505062000ebf8882890162000d6a565b9450505050509250929050565b6001600160a01b03169052565b6000815180845262000ef381602086016020860162001413565b601f01601f19169290920160200192915050565b6000825162000f1b81846020870162001413565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101562000fe257898303607f19018652815180516001600160a01b0316845284810151898501906003811062000f7f57fe5b858701526040918201519185018a9052815190819052908501908a90898601905b8083101562000fcc5783516001600160e01b031916825292870192600192909201919087019062000fa0565b5097860197945050509083019060010162000f4b565b505062000ff28289018b62000ecc565b878103604089015262001006818a62000ed9565b9b9a5050505050505050505050565b6000602082526200102a602083018462000ed9565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656040820152651d995c9d195960d21b606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756040820152663a20b1ba34b7b760c91b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201526d3a30b1363290333ab731ba34b7b760911b606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b6040518181016001600160401b0381118282101715620013ed57fe5b604052919050565b60006001600160401b038211156200140957fe5b5060209081020190565b60005b838110156200143057818101518382015260200162001416565b83811115620008395750506000910152565b6118a780620014526000396000f3fe60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c634300070600334c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465",
          "deployedBytecode": "0x60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c63430007060033",
          "facets": [
            {
              "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
              "functionSelectors": [
                "0x00fdd58e",
                "0x4e1273f4",
                "0x6787d449",
                "0x0b885ac3",
                "0xe985e9c5",
                "0x572b6c05",
                "0x481c6a75",
                "0xdcf2cad4",
                "0x05322b74",
                "0x1b023947",
                "0xbc01188e",
                "0x2eb2c2d6",
                "0xf242432a",
                "0xa22cb465",
                "0x01ffc9a7",
                "0x18160ddd",
                "0x0e89341c"
              ]
            }
          ],
          "diamondCut": [
            {
              "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
              "functionSelectors": [
                "0x00fdd58e",
                "0x4e1273f4",
                "0x6787d449",
                "0x0b885ac3",
                "0xe985e9c5",
                "0x572b6c05",
                "0x481c6a75",
                "0xdcf2cad4",
                "0x05322b74",
                "0x1b023947",
                "0xbc01188e",
                "0x2eb2c2d6",
                "0xf242432a",
                "0xa22cb465",
                "0x18160ddd",
                "0x0e89341c"
              ],
              "action": 0
            }
          ],
          "execute": {
            "methodName": "initialize",
            "args": [
              "ipfs://",
              "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
              "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
              "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
              "0xD52b58d3a0B9d19FBABC9a9Cf98ffCDcC9a8161E"
            ]
          },
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          },
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      ]
    },
    {
      "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
      "abi": [
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "internalType": "struct Diamond.DiamondArgs",
              "name": "_args",
              "type": "tuple"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "indexed": false,
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "name": "DiamondCut",
          "type": "event"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "name": "diamondCut",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_functionSelector",
              "type": "bytes4"
            }
          ],
          "name": "facetAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "facetAddress_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "facetAddresses",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "facetAddresses_",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_facet",
              "type": "address"
            }
          ],
          "name": "facetFunctionSelectors",
          "outputs": [
            {
              "internalType": "bytes4[]",
              "name": "facetFunctionSelectors_",
              "type": "bytes4[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "facets",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondLoupe.Facet[]",
              "name": "facets_",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            }
          ],
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "DropCreated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Minted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "accountsByToken",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_timeStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_timeEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_priceStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_priceEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_stepDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amountCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_shareCyber",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "name": "createDrop",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "name": "dropMintCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "getDrop",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "timeStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stepDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shareCyber",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minted",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "getMintPriceForToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "mintPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_timeSpent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_priceStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_priceEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_stepDuration",
              "type": "uint256"
            }
          ],
          "name": "getPriceFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_manager",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_trustedForwarder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_opensea",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_oncyber",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "manager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "name": "mint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "name": "minterNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "oncyber",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeBatchTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "tokensByAccount",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "totalHolders",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0x47aadb4d27beb75ca46cb3c874ce8dee84399e30eb73f5ef2c9e5ed2fd3c343b",
      "receipt": {
        "to": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
        "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
        "contractAddress": null,
        "transactionIndex": 0,
        "gasUsed": "411787",
        "logsBloom": "0x
        "blockHash": "0x59c022bf4290a21565701b1387431a1dcdc6a18440d981eeee1a58f2e8115b9e",
        "transactionHash": "0x47aadb4d27beb75ca46cb3c874ce8dee84399e30eb73f5ef2c9e5ed2fd3c343b",
        "logs": [
          {
            "transactionIndex": 0,
            "blockNumber": 9823504,
            "transactionHash": "0x47aadb4d27beb75ca46cb3c874ce8dee84399e30eb73f5ef2c9e5ed2fd3c343b",
            "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "topics": [
              "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b330000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000005f108e3431b9ee9e3308d7b2b806ca4ecdf7d8fa0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000176dcfd8410000000000000000000000000000000000000000000000000000000000fdd58e000000000000000000000000000000000000000000000000000000004e1273f400000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000005c5ed16d00000000000000000000000000000000000000000000000000000000d61b0c82000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000db7fd408000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df0000000000000000000000000000000000000000000000000000000018160ddd00000000000000000000000000000000000000000000000000000000bd85b039000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "logIndex": 0,
            "blockHash": "0x59c022bf4290a21565701b1387431a1dcdc6a18440d981eeee1a58f2e8115b9e"
          }
        ],
        "events": [
          {
            "transactionIndex": 0,
            "blockNumber": 9823504,
            "transactionHash": "0x47aadb4d27beb75ca46cb3c874ce8dee84399e30eb73f5ef2c9e5ed2fd3c343b",
            "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "topics": [
              "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b330000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000005f108e3431b9ee9e3308d7b2b806ca4ecdf7d8fa0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000176dcfd8410000000000000000000000000000000000000000000000000000000000fdd58e000000000000000000000000000000000000000000000000000000004e1273f400000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000005c5ed16d00000000000000000000000000000000000000000000000000000000d61b0c82000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000db7fd408000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df0000000000000000000000000000000000000000000000000000000018160ddd00000000000000000000000000000000000000000000000000000000bd85b039000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "logIndex": 0,
            "blockHash": "0x59c022bf4290a21565701b1387431a1dcdc6a18440d981eeee1a58f2e8115b9e",
            "args": [
              [
                [
                  "0x5f108e3431B9ee9E3308D7b2B806CA4eCDF7d8fA",
                  1,
                  [
                    "0x6dcfd841",
                    "0x00fdd58e",
                    "0x4e1273f4",
                    "0x081cdf12",
                    "0xb3a721d1",
                    "0x6787d449",
                    "0x5c5ed16d",
                    "0xd61b0c82",
                    "0x0b885ac3",
                    "0xe985e9c5",
                    "0x572b6c05",
                    "0x481c6a75",
                    "0xdb7fd408",
                    "0x1b023947",
                    "0xbc01188e",
                    "0x2eb2c2d6",
                    "0xf242432a",
                    "0xa22cb465",
                    "0x85bff2e7",
                    "0x13ba55df",
                    "0x18160ddd",
                    "0xbd85b039",
                    "0x0e89341c"
                  ]
                ]
              ],
              "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
              "0x0b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f00000000000000000000000000000000000000000000000000"
            ],
            "event": "DiamondCut",
            "eventSignature": "DiamondCut((address,uint8,bytes4[])[],address,bytes)"
          }
        ],
        "blockNumber": 9823504,
        "cumulativeGasUsed": "411787",
        "status": 1,
        "byzantium": true
      },
      "facets": [
        [
          "0x35D80A53F7be635f75152221d4D71CD4DCB07e5C",
          [
            "0x1f931c1c"
          ]
        ],
        [
          "0xC1bbdF9f8c0b6aE0B4d35E9A778080B691A72a3E",
          [
            "0xadfca15e",
            "0x7a0ed627",
            "0xcdffacc6",
            "0x52ef6b2c",
            "0x01ffc9a7"
          ]
        ],
        [
          "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
          [
            "0xf2fde38b",
            "0x8da5cb5b"
          ]
        ],
        {
          "facetAddress": "0x5f108e3431B9ee9E3308D7b2B806CA4eCDF7d8fA",
          "functionSelectors": [
            "0x6dcfd841",
            "0x00fdd58e",
            "0x4e1273f4",
            "0x081cdf12",
            "0xb3a721d1",
            "0x6787d449",
            "0x5c5ed16d",
            "0xd61b0c82",
            "0x0b885ac3",
            "0xe985e9c5",
            "0x572b6c05",
            "0x481c6a75",
            "0xdb7fd408",
            "0x1b023947",
            "0xbc01188e",
            "0x2eb2c2d6",
            "0xf242432a",
            "0xa22cb465",
            "0x01ffc9a7",
            "0x85bff2e7",
            "0x13ba55df",
            "0x18160ddd",
            "0xbd85b039",
            "0x0e89341c"
          ]
        }
      ],
      "diamondCut": [],
      "execute": {
        "methodName": "initialize",
        "args": [
          "ipfs://",
          "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
          "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
          "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
          "0xD52b58d3a0B9d19FBABC9a9Cf98ffCDcC9a8161E"
        ]
      },
      "history": [
        {
          "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Diamond.DiamondArgs",
                  "name": "_args",
                  "type": "tuple"
                }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_init",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                }
              ],
              "name": "DiamondCut",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "internalType": "address",
                  "name": "_init",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                }
              ],
              "name": "diamondCut",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_functionSelector",
                  "type": "bytes4"
                }
              ],
              "name": "facetAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "facetAddress_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "facetAddresses",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "facetAddresses_",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_facet",
                  "type": "address"
                }
              ],
              "name": "facetFunctionSelectors",
              "outputs": [
                {
                  "internalType": "bytes4[]",
                  "name": "facetFunctionSelectors_",
                  "type": "bytes4[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "facets",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondLoupe.Facet[]",
                  "name": "facets_",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "DestinationMinted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Minted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "name": "TransferBatch",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "TransferSingle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "URI",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                }
              ],
              "name": "balanceOfBatch",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getDrop",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "timeStart",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timeEnd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shareCyber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountCap",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minted",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "creator",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct LibUtilityStorage.Drop",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "_manager",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_trustedForwarder",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_opensea",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_oncyber",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                }
              ],
              "name": "isTrustedForwarder",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "manager",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_timeStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_timeEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amountCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_shareCyber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "mintEdition",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_minter",
                  "type": "address"
                }
              ],
              "name": "minterNonce",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oncyber",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeBatchTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "uri",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
          "receipt": {
            "to": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
            "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
            "contractAddress": null,
            "transactionIndex": 84,
            "gasUsed": "2591193",
            "logsBloom": "0x
            "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
            "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
            "logs": [
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 97,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
                ],
                "data": "0x",
                "logIndex": 98,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                "topics": [
                  "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
                ],
                "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
                "logIndex": 99,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 100,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
                  "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
                ],
                "data": "0x",
                "logIndex": 101,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              }
            ],
            "events": [
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 97,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
                ],
                "data": "0x",
                "logIndex": 98,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                "topics": [
                  "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
                ],
                "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
                "logIndex": 99,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
                "args": [
                  [
                    {
                      "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                      "action": 0,
                      "functionSelectors": [
                        "0x1f931c1c"
                      ]
                    },
                    {
                      "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                      "action": 0,
                      "functionSelectors": [
                        "0xcdffacc6",
                        "0x52ef6b2c",
                        "0xadfca15e",
                        "0x7a0ed627",
                        "0x01ffc9a7"
                      ]
                    },
                    {
                      "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                      "action": 0,
                      "functionSelectors": [
                        "0xf2fde38b",
                        "0x8da5cb5b"
                      ]
                    }
                  ],
                  {
                    "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
                  }
                ],
                "event": "DiamondCreated",
                "eventSignature": "DiamondCreated(address)"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 100,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
                  "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
                ],
                "data": "0x",
                "logIndex": 101,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              }
            ],
            "blockNumber": 9284533,
            "cumulativeGasUsed": "20695988",
            "status": 1,
            "byzantium": true
          },
          "args": [
            [
              {
                "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                "action": 0,
                "functionSelectors": [
                  "0x1f931c1c"
                ]
              },
              {
                "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                "action": 0,
                "functionSelectors": [
                  "0xcdffacc6",
                  "0x52ef6b2c",
                  "0xadfca15e",
                  "0x7a0ed627",
                  "0x01ffc9a7"
                ]
              },
              {
                "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                "action": 0,
                "functionSelectors": [
                  "0xf2fde38b",
                  "0x8da5cb5b"
                ]
              }
            ],
            {
              "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
            }
          ],
          "solcInputHash": "1d060b65b8264d57d416f20cb1fe798a",
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct Diamond.DiamondArgs\",\"name\":\"_args\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.7/diamond/Diamond.sol\":\"Diamond\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.7/diamond/Diamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n* \\n* Implementation of a diamond.\\n/******************************************************************************/\\n\\nimport \\\"./libraries/LibDiamond.sol\\\";\\nimport \\\"./interfaces/IDiamondLoupe.sol\\\";\\nimport \\\"./interfaces/IDiamondCut.sol\\\";\\nimport \\\"./interfaces/IERC173.sol\\\";\\nimport \\\"./interfaces/IERC165.sol\\\";\\n\\ncontract Diamond {\\n    // more arguments are added to this struct\\n    // this avoids stack too deep errors\\n    struct DiamondArgs {\\n        address owner;\\n    }\\n\\n    constructor(IDiamondCut.FacetCut[] memory _diamondCut, DiamondArgs memory _args) payable {\\n        LibDiamond.diamondCut(_diamondCut, address(0), new bytes(0));\\n        LibDiamond.setContractOwner(_args.owner);\\n\\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\\n\\n        // adding ERC165 data\\n        ds.supportedInterfaces[type(IERC165).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondCut).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondLoupe).interfaceId] = true;\\n        ds.supportedInterfaces[type(IERC173).interfaceId] = true;\\n    }\\n\\n    // Find facet for function that is called and execute the\\n    // function if a facet is found and return any value.\\n    fallback() external payable {\\n        LibDiamond.DiamondStorage storage ds;\\n        bytes32 position = LibDiamond.DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n        address facet = ds.selectorToFacetAndPosition[msg.sig].facetAddress;\\n        require(facet != address(0), \\\"Diamond: Function does not exist\\\");\\n        assembly {\\n            calldatacopy(0, 0, calldatasize())\\n            let result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\\n            returndatacopy(0, 0, returndatasize())\\n            switch result\\n                case 0 {\\n                    revert(0, returndatasize())\\n                }\\n                default {\\n                    return(0, returndatasize())\\n                }\\n        }\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x968d41f1fbb08e012a0617f3a8b865c06f60d783e043b675280741b791216202\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xfb3c1af58cd19e1e49f065e33c7c68045ce451c3e16920614979624c44faf892\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\n// A loupe is a small magnifying glass used to look at diamonds.\\n// These functions look at diamonds\\ninterface IDiamondLoupe {\\n    /// These functions are expected to be called frequently\\n    /// by tools.\\n\\n    struct Facet {\\n        address facetAddress;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\n    /// @return facets_ Facet\\n    function facets() external view returns (Facet[] memory facets_);\\n\\n    /// @notice Gets all the function selectors supported by a specific facet.\\n    /// @param _facet The facet address.\\n    /// @return facetFunctionSelectors_\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\n\\n    /// @notice Get all the facet addresses used by a diamond.\\n    /// @return facetAddresses_\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\n\\n    /// @notice Gets the facet that supports the given selector.\\n    /// @dev If facet is not found return address(0).\\n    /// @param _functionSelector The function selector.\\n    /// @return facetAddress_ The facet address.\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\n}\\n\",\"keccak256\":\"0xf4bc76153335588e7cb5fe1c9701857fd2ae0340ad94976adbf1c49054f82dfe\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\ninterface IERC165 {\\n    /// @notice Query if a contract implements an interface\\n    /// @param interfaceId The interface identifier, as specified in ERC-165\\n    /// @dev Interface identification is specified in ERC-165. This function\\n    ///  uses less than 30,000 gas.\\n    /// @return `true` if the contract implements `interfaceID` and\\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xe3ccc62939f8e880bdd4d5a34b05ccb9576810b8e999df6d16124e51019a0603\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0xa4023156092d7cb99c69e21bc95b910e13c54e582d6814601579bc2fb594ecf8\",\"license\":\"MIT\"},\"solc_0.7/diamond/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint16 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint16 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // uint16 selectorCount = uint16(diamondStorage().selectors.length);\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(oldFacetAddress, selector);\\n            // add function\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function removeFunction(address _facetAddress, bytes4 _selector) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint16(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = uint16(facetAddressPosition);\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n}\\n\",\"keccak256\":\"0x4eac03abb9864ad822b50481746c975a8e3e3278e179032cfc1b4b9c8e2320bc\",\"license\":\"MIT\"}},\"version\":1}",
          "bytecode": "0x608060405260405162002d4538038062002d45833981016040819052620000269162000db2565b604080516000808252602082019092526200004e918491620000f560201b620000db1760201c565b620000688160000151620002b560201b6200027d1760201c565b60006200007f6200031760201b620003021760201c565b6301ffc9a760e01b600090815260039091016020526040808220805460ff1990811660019081179092556307e4c70760e21b845282842080548216831790556348e2b09360e01b845282842080548216831790556307f5828d60e41b845291909220805490911690911790555062001442915050565b60005b8351811015620002665760008482815181106200011157fe5b6020026020010151602001519050600060028111156200012d57fe5b8160028111156200013a57fe5b14156200018957620001838583815181106200015257fe5b6020026020010151600001518684815181106200016b57fe5b6020026020010151604001516200033b60201b60201c565b6200025c565b60018160028111156200019857fe5b1415620001e15762000183858381518110620001b057fe5b602002602001015160000151868481518110620001c957fe5b6020026020010151604001516200054e60201b60201c565b6002816002811115620001f057fe5b14156200023957620001838583815181106200020857fe5b6020026020010151600001518684815181106200022157fe5b6020026020010151604001516200077860201b60201c565b60405162461bcd60e51b815260040162000253906200117c565b60405180910390fd5b50600101620000f8565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516200029c9392919062000f25565b60405180910390a1620002b082826200083f565b505050565b6000620002c162000317565b6004810180546001600160a01b038581166001600160a01b031983168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b60008151116200035f5760405162461bcd60e51b81526004016200025390620010d4565b60006200036b62000317565b90506001600160a01b038316620003965760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200043c57620003e08460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200045857fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620004ab5760405162461bcd60e51b81526004016200025390620012ba565b506001600160a01b0386166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790556001600160e01b0319909516835287905292902080546001600160a01b03191690911761ffff60a01b1916600160a01b61ffff86160217905591820191016200043f565b5050505050565b6000815111620005725760405162461bcd60e51b81526004016200025390620010d4565b60006200057e62000317565b90506001600160a01b038316620005a95760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200064f57620005f38460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200066b57fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03908116908716811415620006c45760405162461bcd60e51b8152600401620002539062001317565b620006d08183620009a0565b506001600160e01b03198116600081815260208681526040808320805461ffff60a01b1916600160a01b61ffff8a16021781556001600160a01b038b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281546001600160a01b0319169092179055918201910162000652565b60008151116200079c5760405162461bcd60e51b81526004016200025390620010d4565b6000620007a862000317565b90506001600160a01b03831615620007d45760405162461bcd60e51b8152600401620002539062001374565b60005b825181101562000839576000838281518110620007f057fe5b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166200082e8183620009a0565b5050600101620007d7565b50505050565b6001600160a01b0382166200087657805115620008705760405162461bcd60e51b8152600401620002539062001031565b62000978565b60008151116200089a5760405162461bcd60e51b815260040162000253906200120f565b6001600160a01b0382163014620008d057620008d08260405180606001604052806028815260200162002cf9602891396200097c565b600080836001600160a01b031683604051620008ed919062000f07565b600060405180830381855af49150503d80600081146200092a576040519150601f19603f3d011682016040523d82523d6000602084013e6200092f565b606091505b50915091508162000839578051156200095e578060405162461bcd60e51b815260040162000253919062001015565b60405162461bcd60e51b815260040162000253906200108e565b5050565b813b8181620008395760405162461bcd60e51b815260040162000253919062001015565b6000620009ac62000317565b90506001600160a01b038316620009d75760405162461bcd60e51b815260040162000253906200111f565b6001600160a01b03831630141562000a035760405162461bcd60e51b815260040162000253906200126c565b6001600160e01b03198216600090815260208281526040808320546001600160a01b03871684526001850190925290912054600160a01b90910461ffff16906000190180821462000b27576001600160a01b0385166000908152600184016020526040812080548390811062000a7557fe5b600091825260208083206008830401546001600160a01b038a168452600188019091526040909220805460079092166004026101000a90920460e01b92508291908590811062000ac157fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b031992909216825284905260409020805461ffff60a01b1916600160a01b61ffff8516021790555b6001600160a01b0385166000908152600184016020526040902080548062000b4b57fe5b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319861682528490526040902080546001600160b01b031916905580620005475760028301546001600160a01b03861660009081526001858101602052604090912001546000199091019061ffff1680821462000c6357600085600201838154811062000bec57fe5b6000918252602090912001546002870180546001600160a01b03909216925082918490811062000c1857fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018781019092526040902001805461ffff191661ffff83161790555b8460020180548062000c7157fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03891682526001878101909152604090912001805461ffff1916905550505050505050565b80516001600160a01b038116811462000cdb57600080fd5b919050565b600082601f83011262000cf1578081fd5b8151602062000d0a62000d0483620013f5565b620013d1565b828152818101908583018385028701840188101562000d27578586fd5b855b8581101562000d5d5781516001600160e01b03198116811462000d4a578788fd5b8452928401929084019060010162000d29565b5090979650505050505050565b60006020828403121562000d7c578081fd5b604051602081016001600160401b038111828210171562000d9957fe5b60405290508062000daa8362000cc3565b905292915050565b6000806040838503121562000dc5578182fd5b82516001600160401b038082111562000ddc578384fd5b818501915085601f83011262000df0578384fd5b8151602062000e0362000d0483620013f5565b82815281810190858301885b8581101562000eaa57815188016060818e03601f1901121562000e30578a8bfd5b604051606081018181108a8211171562000e4657fe5b60405262000e5682880162000cc3565b815260408201516003811062000e6a578c8dfd5b8188015260608201518981111562000e80578c8dfd5b62000e908f898386010162000ce0565b604083015250855250928401929084019060010162000e0f565b5050809750505062000ebf8882890162000d6a565b9450505050509250929050565b6001600160a01b03169052565b6000815180845262000ef381602086016020860162001413565b601f01601f19169290920160200192915050565b6000825162000f1b81846020870162001413565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101562000fe257898303607f19018652815180516001600160a01b0316845284810151898501906003811062000f7f57fe5b858701526040918201519185018a9052815190819052908501908a90898601905b8083101562000fcc5783516001600160e01b031916825292870192600192909201919087019062000fa0565b5097860197945050509083019060010162000f4b565b505062000ff28289018b62000ecc565b878103604089015262001006818a62000ed9565b9b9a5050505050505050505050565b6000602082526200102a602083018462000ed9565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656040820152651d995c9d195960d21b606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756040820152663a20b1ba34b7b760c91b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201526d3a30b1363290333ab731ba34b7b760911b606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b6040518181016001600160401b0381118282101715620013ed57fe5b604052919050565b60006001600160401b038211156200140957fe5b5060209081020190565b60005b838110156200143057818101518382015260200162001416565b83811115620008395750506000910152565b6118a780620014526000396000f3fe60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c634300070600334c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465",
          "deployedBytecode": "0x60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c63430007060033",
          "facets": [
            {
              "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
              "functionSelectors": [
                "0x00fdd58e",
                "0x4e1273f4",
                "0x6787d449",
                "0x0b885ac3",
                "0xe985e9c5",
                "0x572b6c05",
                "0x481c6a75",
                "0xdcf2cad4",
                "0x05322b74",
                "0x1b023947",
                "0xbc01188e",
                "0x2eb2c2d6",
                "0xf242432a",
                "0xa22cb465",
                "0x01ffc9a7",
                "0x18160ddd",
                "0x0e89341c"
              ]
            }
          ],
          "diamondCut": [
            {
              "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
              "functionSelectors": [
                "0x00fdd58e",
                "0x4e1273f4",
                "0x6787d449",
                "0x0b885ac3",
                "0xe985e9c5",
                "0x572b6c05",
                "0x481c6a75",
                "0xdcf2cad4",
                "0x05322b74",
                "0x1b023947",
                "0xbc01188e",
                "0x2eb2c2d6",
                "0xf242432a",
                "0xa22cb465",
                "0x18160ddd",
                "0x0e89341c"
              ],
              "action": 0
            }
          ],
          "execute": {
            "methodName": "initialize",
            "args": [
              "ipfs://",
              "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
              "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
              "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
              "0xD52b58d3a0B9d19FBABC9a9Cf98ffCDcC9a8161E"
            ]
          },
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          },
          "storageLayout": {
            "storage": [],
            "types": null
          }
        },
        {
          "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Diamond.DiamondArgs",
                  "name": "_args",
                  "type": "tuple"
                }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_init",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                }
              ],
              "name": "DiamondCut",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "internalType": "address",
                  "name": "_init",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                }
              ],
              "name": "diamondCut",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_functionSelector",
                  "type": "bytes4"
                }
              ],
              "name": "facetAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "facetAddress_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "facetAddresses",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "facetAddresses_",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_facet",
                  "type": "address"
                }
              ],
              "name": "facetFunctionSelectors",
              "outputs": [
                {
                  "internalType": "bytes4[]",
                  "name": "facetFunctionSelectors_",
                  "type": "bytes4[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "facets",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondLoupe.Facet[]",
                  "name": "facets_",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "DropCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Minted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "name": "TransferBatch",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "TransferSingle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "URI",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "accountsByToken",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                }
              ],
              "name": "balanceOfBatch",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_timeStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_timeEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_priceStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_priceEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_stepDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amountCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_shareCyber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "createDrop",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_minter",
                  "type": "address"
                }
              ],
              "name": "dropMintCounter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getDrop",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "timeStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "priceStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "priceEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "stepDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shareCyber",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minted",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getMintPriceForToken",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "mintPrice",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_timeSpent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_priceStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_priceEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_stepDuration",
                  "type": "uint256"
                }
              ],
              "name": "getPriceFor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "_manager",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_trustedForwarder",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_opensea",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_oncyber",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                }
              ],
              "name": "isTrustedForwarder",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "manager",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_minter",
                  "type": "address"
                }
              ],
              "name": "minterNonce",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oncyber",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeBatchTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "tokensByAccount",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "totalHolders",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "uri",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
          "receipt": {
            "to": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
            "contractAddress": null,
            "transactionIndex": 0,
            "gasUsed": "555152",
            "logsBloom": "0x
            "blockHash": "0x6bc28c4fe5c4caa2fcc5200304edbd60a8935f6cc2958b1ce4dacb7aa688ac83",
            "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
            "logs": [
              {
                "transactionIndex": 0,
                "blockNumber": 9822632,
                "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000058000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000003600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002dcf2cad40000000000000000000000000000000000000000000000000000000005322b7400000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000e00fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a75000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c00000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000096dcfd84100000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000005c5ed16d00000000000000000000000000000000000000000000000000000000d61b0c8200000000000000000000000000000000000000000000000000000000db7fd4080000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df00000000000000000000000000000000000000000000000000000000bd85b0390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 0,
                "blockHash": "0x6bc28c4fe5c4caa2fcc5200304edbd60a8935f6cc2958b1ce4dacb7aa688ac83"
              }
            ],
            "events": [
              {
                "transactionIndex": 0,
                "blockNumber": 9822632,
                "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000058000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000003600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002dcf2cad40000000000000000000000000000000000000000000000000000000005322b7400000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000e00fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a75000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c00000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000096dcfd84100000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000005c5ed16d00000000000000000000000000000000000000000000000000000000d61b0c8200000000000000000000000000000000000000000000000000000000db7fd4080000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df00000000000000000000000000000000000000000000000000000000bd85b0390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 0,
                "blockHash": "0x6bc28c4fe5c4caa2fcc5200304edbd60a8935f6cc2958b1ce4dacb7aa688ac83",
                "args": [
                  [
                    [
                      "0x0000000000000000000000000000000000000000",
                      2,
                      [
                        "0xdcf2cad4",
                        "0x05322b74"
                      ]
                    ],
                    [
                      "0x481A220d69c31E114Bf3Ac69094f3Abf895D123d",
                      1,
                      [
                        "0x00fdd58e",
                        "0x4e1273f4",
                        "0x6787d449",
                        "0x0b885ac3",
                        "0xe985e9c5",
                        "0x572b6c05",
                        "0x481c6a75",
                        "0x1b023947",
                        "0xbc01188e",
                        "0x2eb2c2d6",
                        "0xf242432a",
                        "0xa22cb465",
                        "0x18160ddd",
                        "0x0e89341c"
                      ]
                    ],
                    [
                      "0x481A220d69c31E114Bf3Ac69094f3Abf895D123d",
                      0,
                      [
                        "0x6dcfd841",
                        "0x081cdf12",
                        "0xb3a721d1",
                        "0x5c5ed16d",
                        "0xd61b0c82",
                        "0xdb7fd408",
                        "0x85bff2e7",
                        "0x13ba55df",
                        "0xbd85b039"
                      ]
                    ]
                  ],
                  "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                  "0x0b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f00000000000000000000000000000000000000000000000000"
                ],
                "event": "DiamondCut",
                "eventSignature": "DiamondCut((address,uint8,bytes4[])[],address,bytes)"
              }
            ],
            "blockNumber": 9822632,
            "cumulativeGasUsed": "555152",
            "status": 1,
            "byzantium": true
          },
          "facets": [
            [
              "0x35D80A53F7be635f75152221d4D71CD4DCB07e5C",
              [
                "0x1f931c1c"
              ]
            ],
            [
              "0xC1bbdF9f8c0b6aE0B4d35E9A778080B691A72a3E",
              [
                "0xadfca15e",
                "0x7a0ed627",
                "0xcdffacc6",
                "0x52ef6b2c",
                "0x01ffc9a7"
              ]
            ],
            [
              "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
              [
                "0xf2fde38b",
                "0x8da5cb5b"
              ]
            ],
            {
              "facetAddress": "0x481a220d69c31e114bf3ac69094f3abf895d123d",
              "functionSelectors": [
                "0x6dcfd841",
                "0x00fdd58e",
                "0x4e1273f4",
                "0x081cdf12",
                "0xb3a721d1",
                "0x6787d449",
                "0x5c5ed16d",
                "0xd61b0c82",
                "0x0b885ac3",
                "0xe985e9c5",
                "0x572b6c05",
                "0x481c6a75",
                "0xdb7fd408",
                "0x1b023947",
                "0xbc01188e",
                "0x2eb2c2d6",
                "0xf242432a",
                "0xa22cb465",
                "0x01ffc9a7",
                "0x85bff2e7",
                "0x13ba55df",
                "0x18160ddd",
                "0xbd85b039",
                "0x0e89341c"
              ]
            }
          ],
          "diamondCut": [
            {
              "facetAddress": "0x0000000000000000000000000000000000000000",
              "functionSelectors": [
                "0xdcf2cad4",
                "0x05322b74"
              ],
              "action": 2
            },
            {
              "facetAddress": "0x481a220d69c31e114bf3ac69094f3abf895d123d",
              "functionSelectors": [
                "0x00fdd58e",
                "0x4e1273f4",
                "0x6787d449",
                "0x0b885ac3",
                "0xe985e9c5",
                "0x572b6c05",
                "0x481c6a75",
                "0x1b023947",
                "0xbc01188e",
                "0x2eb2c2d6",
                "0xf242432a",
                "0xa22cb465",
                "0x18160ddd",
                "0x0e89341c"
              ],
              "action": 1
            },
            {
              "facetAddress": "0x481a220d69c31e114bf3ac69094f3abf895d123d",
              "functionSelectors": [
                "0x6dcfd841",
                "0x081cdf12",
                "0xb3a721d1",
                "0x5c5ed16d",
                "0xd61b0c82",
                "0xdb7fd408",
                "0x85bff2e7",
                "0x13ba55df",
                "0xbd85b039"
              ],
              "action": 0
            }
          ],
          "execute": {
            "methodName": "initialize",
            "args": [
              "ipfs://",
              "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
              "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
              "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
              "0xD52b58d3a0B9d19FBABC9a9Cf98ffCDcC9a8161E"
            ]
          },
          "history": [
            {
              "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
              "abi": [
                {
                  "inputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "enum IDiamondCut.FacetCutAction",
                          "name": "action",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "internalType": "struct IDiamondCut.FacetCut[]",
                      "name": "_diamondCut",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "owner",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct Diamond.DiamondArgs",
                      "name": "_args",
                      "type": "tuple"
                    }
                  ],
                  "stateMutability": "payable",
                  "type": "constructor"
                },
                {
                  "stateMutability": "payable",
                  "type": "fallback"
                },
                {
                  "stateMutability": "payable",
                  "type": "receive"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "enum IDiamondCut.FacetCutAction",
                          "name": "action",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "indexed": false,
                      "internalType": "struct IDiamondCut.FacetCut[]",
                      "name": "_diamondCut",
                      "type": "tuple[]"
                    },
                    {
                      "indexed": false,
                      "internalType": "address",
                      "name": "_init",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "bytes",
                      "name": "_calldata",
                      "type": "bytes"
                    }
                  ],
                  "name": "DiamondCut",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "enum IDiamondCut.FacetCutAction",
                          "name": "action",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "internalType": "struct IDiamondCut.FacetCut[]",
                      "name": "_diamondCut",
                      "type": "tuple[]"
                    },
                    {
                      "internalType": "address",
                      "name": "_init",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "_calldata",
                      "type": "bytes"
                    }
                  ],
                  "name": "diamondCut",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "bytes4",
                      "name": "_functionSelector",
                      "type": "bytes4"
                    }
                  ],
                  "name": "facetAddress",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "facetAddress_",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "facetAddresses",
                  "outputs": [
                    {
                      "internalType": "address[]",
                      "name": "facetAddresses_",
                      "type": "address[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "_facet",
                      "type": "address"
                    }
                  ],
                  "name": "facetFunctionSelectors",
                  "outputs": [
                    {
                      "internalType": "bytes4[]",
                      "name": "facetFunctionSelectors_",
                      "type": "bytes4[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "facets",
                  "outputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "internalType": "struct IDiamondLoupe.Facet[]",
                      "name": "facets_",
                      "type": "tuple[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "bytes4",
                      "name": "_interfaceId",
                      "type": "bytes4"
                    }
                  ],
                  "name": "supportsInterface",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "previousOwner",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "newOwner",
                      "type": "address"
                    }
                  ],
                  "name": "OwnershipTransferred",
                  "type": "event"
                },
                {
                  "inputs": [],
                  "name": "owner",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "owner_",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "_newOwner",
                      "type": "address"
                    }
                  ],
                  "name": "transferOwnership",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "bool",
                      "name": "approved",
                      "type": "bool"
                    }
                  ],
                  "name": "ApprovalForAll",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "DestinationMinted",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "name": "Minted",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256[]",
                      "name": "values",
                      "type": "uint256[]"
                    }
                  ],
                  "name": "TransferBatch",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ],
                  "name": "TransferSingle",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "string",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "URI",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "balanceOf",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address[]",
                      "name": "accounts",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    }
                  ],
                  "name": "balanceOfBatch",
                  "outputs": [
                    {
                      "internalType": "uint256[]",
                      "name": "",
                      "type": "uint256[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "getDrop",
                  "outputs": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "timeStart",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "timeEnd",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shareCyber",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amountCap",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "minted",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "creator",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct LibUtilityStorage.Drop",
                      "name": "",
                      "type": "tuple"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "string",
                      "name": "_uri",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "_manager",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_trustedForwarder",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_opensea",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_oncyber",
                      "type": "address"
                    }
                  ],
                  "name": "initialize",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    }
                  ],
                  "name": "isApprovedForAll",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "forwarder",
                      "type": "address"
                    }
                  ],
                  "name": "isTrustedForwarder",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "manager",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "string",
                      "name": "_uri",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_timeStart",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_timeEnd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_amountCap",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_shareCyber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "_signature",
                      "type": "bytes"
                    }
                  ],
                  "name": "mint",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "mintEdition",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "payable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "_minter",
                      "type": "address"
                    }
                  ],
                  "name": "minterNonce",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "oncyber",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "name": "safeBatchTransferFrom",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "name": "safeTransferFrom",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "status",
                      "type": "bool"
                    }
                  ],
                  "name": "setApprovalForAll",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "totalSupply",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "uri",
                  "outputs": [
                    {
                      "internalType": "string",
                      "name": "",
                      "type": "string"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                }
              ],
              "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
              "receipt": {
                "to": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
                "contractAddress": null,
                "transactionIndex": 84,
                "gasUsed": "2591193",
                "logsBloom": "0x
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "logs": [
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                    ],
                    "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                    "logIndex": 97,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                      "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
                    ],
                    "data": "0x",
                    "logIndex": 98,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                    "topics": [
                      "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
                    ],
                    "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
                    "logIndex": 99,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                    ],
                    "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                    "logIndex": 100,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                      "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
                      "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
                    ],
                    "data": "0x",
                    "logIndex": 101,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  }
                ],
                "events": [
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                    ],
                    "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                    "logIndex": 97,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                      "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
                    ],
                    "data": "0x",
                    "logIndex": 98,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                    "topics": [
                      "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
                    ],
                    "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
                    "logIndex": 99,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
                    "args": [
                      [
                        {
                          "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                          "action": 0,
                          "functionSelectors": [
                            "0x1f931c1c"
                          ]
                        },
                        {
                          "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                          "action": 0,
                          "functionSelectors": [
                            "0xcdffacc6",
                            "0x52ef6b2c",
                            "0xadfca15e",
                            "0x7a0ed627",
                            "0x01ffc9a7"
                          ]
                        },
                        {
                          "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                          "action": 0,
                          "functionSelectors": [
                            "0xf2fde38b",
                            "0x8da5cb5b"
                          ]
                        }
                      ],
                      {
                        "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
                      }
                    ],
                    "event": "DiamondCreated",
                    "eventSignature": "DiamondCreated(address)"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                    ],
                    "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                    "logIndex": 100,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                      "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
                      "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
                    ],
                    "data": "0x",
                    "logIndex": 101,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  }
                ],
                "blockNumber": 9284533,
                "cumulativeGasUsed": "20695988",
                "status": 1,
                "byzantium": true
              },
              "args": [
                [
                  {
                    "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                    "action": 0,
                    "functionSelectors": [
                      "0x1f931c1c"
                    ]
                  },
                  {
                    "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                    "action": 0,
                    "functionSelectors": [
                      "0xcdffacc6",
                      "0x52ef6b2c",
                      "0xadfca15e",
                      "0x7a0ed627",
                      "0x01ffc9a7"
                    ]
                  },
                  {
                    "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                    "action": 0,
                    "functionSelectors": [
                      "0xf2fde38b",
                      "0x8da5cb5b"
                    ]
                  }
                ],
                {
                  "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
                }
              ],
              "solcInputHash": "1d060b65b8264d57d416f20cb1fe798a",
              "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct Diamond.DiamondArgs\",\"name\":\"_args\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.7/diamond/Diamond.sol\":\"Diamond\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.7/diamond/Diamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n* \\n* Implementation of a diamond.\\n/******************************************************************************/\\n\\nimport \\\"./libraries/LibDiamond.sol\\\";\\nimport \\\"./interfaces/IDiamondLoupe.sol\\\";\\nimport \\\"./interfaces/IDiamondCut.sol\\\";\\nimport \\\"./interfaces/IERC173.sol\\\";\\nimport \\\"./interfaces/IERC165.sol\\\";\\n\\ncontract Diamond {\\n    // more arguments are added to this struct\\n    // this avoids stack too deep errors\\n    struct DiamondArgs {\\n        address owner;\\n    }\\n\\n    constructor(IDiamondCut.FacetCut[] memory _diamondCut, DiamondArgs memory _args) payable {\\n        LibDiamond.diamondCut(_diamondCut, address(0), new bytes(0));\\n        LibDiamond.setContractOwner(_args.owner);\\n\\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\\n\\n        // adding ERC165 data\\n        ds.supportedInterfaces[type(IERC165).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondCut).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondLoupe).interfaceId] = true;\\n        ds.supportedInterfaces[type(IERC173).interfaceId] = true;\\n    }\\n\\n    // Find facet for function that is called and execute the\\n    // function if a facet is found and return any value.\\n    fallback() external payable {\\n        LibDiamond.DiamondStorage storage ds;\\n        bytes32 position = LibDiamond.DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n        address facet = ds.selectorToFacetAndPosition[msg.sig].facetAddress;\\n        require(facet != address(0), \\\"Diamond: Function does not exist\\\");\\n        assembly {\\n            calldatacopy(0, 0, calldatasize())\\n            let result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\\n            returndatacopy(0, 0, returndatasize())\\n            switch result\\n                case 0 {\\n                    revert(0, returndatasize())\\n                }\\n                default {\\n                    return(0, returndatasize())\\n                }\\n        }\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x968d41f1fbb08e012a0617f3a8b865c06f60d783e043b675280741b791216202\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xfb3c1af58cd19e1e49f065e33c7c68045ce451c3e16920614979624c44faf892\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\n// A loupe is a small magnifying glass used to look at diamonds.\\n// These functions look at diamonds\\ninterface IDiamondLoupe {\\n    /// These functions are expected to be called frequently\\n    /// by tools.\\n\\n    struct Facet {\\n        address facetAddress;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\n    /// @return facets_ Facet\\n    function facets() external view returns (Facet[] memory facets_);\\n\\n    /// @notice Gets all the function selectors supported by a specific facet.\\n    /// @param _facet The facet address.\\n    /// @return facetFunctionSelectors_\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\n\\n    /// @notice Get all the facet addresses used by a diamond.\\n    /// @return facetAddresses_\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\n\\n    /// @notice Gets the facet that supports the given selector.\\n    /// @dev If facet is not found return address(0).\\n    /// @param _functionSelector The function selector.\\n    /// @return facetAddress_ The facet address.\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\n}\\n\",\"keccak256\":\"0xf4bc76153335588e7cb5fe1c9701857fd2ae0340ad94976adbf1c49054f82dfe\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\ninterface IERC165 {\\n    /// @notice Query if a contract implements an interface\\n    /// @param interfaceId The interface identifier, as specified in ERC-165\\n    /// @dev Interface identification is specified in ERC-165. This function\\n    ///  uses less than 30,000 gas.\\n    /// @return `true` if the contract implements `interfaceID` and\\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xe3ccc62939f8e880bdd4d5a34b05ccb9576810b8e999df6d16124e51019a0603\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0xa4023156092d7cb99c69e21bc95b910e13c54e582d6814601579bc2fb594ecf8\",\"license\":\"MIT\"},\"solc_0.7/diamond/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint16 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint16 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // uint16 selectorCount = uint16(diamondStorage().selectors.length);\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(oldFacetAddress, selector);\\n            // add function\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function removeFunction(address _facetAddress, bytes4 _selector) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint16(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = uint16(facetAddressPosition);\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n}\\n\",\"keccak256\":\"0x4eac03abb9864ad822b50481746c975a8e3e3278e179032cfc1b4b9c8e2320bc\",\"license\":\"MIT\"}},\"version\":1}",
              "bytecode": "0x608060405260405162002d4538038062002d45833981016040819052620000269162000db2565b604080516000808252602082019092526200004e918491620000f560201b620000db1760201c565b620000688160000151620002b560201b6200027d1760201c565b60006200007f6200031760201b620003021760201c565b6301ffc9a760e01b600090815260039091016020526040808220805460ff1990811660019081179092556307e4c70760e21b845282842080548216831790556348e2b09360e01b845282842080548216831790556307f5828d60e41b845291909220805490911690911790555062001442915050565b60005b8351811015620002665760008482815181106200011157fe5b6020026020010151602001519050600060028111156200012d57fe5b8160028111156200013a57fe5b14156200018957620001838583815181106200015257fe5b6020026020010151600001518684815181106200016b57fe5b6020026020010151604001516200033b60201b60201c565b6200025c565b60018160028111156200019857fe5b1415620001e15762000183858381518110620001b057fe5b602002602001015160000151868481518110620001c957fe5b6020026020010151604001516200054e60201b60201c565b6002816002811115620001f057fe5b14156200023957620001838583815181106200020857fe5b6020026020010151600001518684815181106200022157fe5b6020026020010151604001516200077860201b60201c565b60405162461bcd60e51b815260040162000253906200117c565b60405180910390fd5b50600101620000f8565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516200029c9392919062000f25565b60405180910390a1620002b082826200083f565b505050565b6000620002c162000317565b6004810180546001600160a01b038581166001600160a01b031983168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b60008151116200035f5760405162461bcd60e51b81526004016200025390620010d4565b60006200036b62000317565b90506001600160a01b038316620003965760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200043c57620003e08460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200045857fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620004ab5760405162461bcd60e51b81526004016200025390620012ba565b506001600160a01b0386166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790556001600160e01b0319909516835287905292902080546001600160a01b03191690911761ffff60a01b1916600160a01b61ffff86160217905591820191016200043f565b5050505050565b6000815111620005725760405162461bcd60e51b81526004016200025390620010d4565b60006200057e62000317565b90506001600160a01b038316620005a95760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200064f57620005f38460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200066b57fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03908116908716811415620006c45760405162461bcd60e51b8152600401620002539062001317565b620006d08183620009a0565b506001600160e01b03198116600081815260208681526040808320805461ffff60a01b1916600160a01b61ffff8a16021781556001600160a01b038b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281546001600160a01b0319169092179055918201910162000652565b60008151116200079c5760405162461bcd60e51b81526004016200025390620010d4565b6000620007a862000317565b90506001600160a01b03831615620007d45760405162461bcd60e51b8152600401620002539062001374565b60005b825181101562000839576000838281518110620007f057fe5b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166200082e8183620009a0565b5050600101620007d7565b50505050565b6001600160a01b0382166200087657805115620008705760405162461bcd60e51b8152600401620002539062001031565b62000978565b60008151116200089a5760405162461bcd60e51b815260040162000253906200120f565b6001600160a01b0382163014620008d057620008d08260405180606001604052806028815260200162002cf9602891396200097c565b600080836001600160a01b031683604051620008ed919062000f07565b600060405180830381855af49150503d80600081146200092a576040519150601f19603f3d011682016040523d82523d6000602084013e6200092f565b606091505b50915091508162000839578051156200095e578060405162461bcd60e51b815260040162000253919062001015565b60405162461bcd60e51b815260040162000253906200108e565b5050565b813b8181620008395760405162461bcd60e51b815260040162000253919062001015565b6000620009ac62000317565b90506001600160a01b038316620009d75760405162461bcd60e51b815260040162000253906200111f565b6001600160a01b03831630141562000a035760405162461bcd60e51b815260040162000253906200126c565b6001600160e01b03198216600090815260208281526040808320546001600160a01b03871684526001850190925290912054600160a01b90910461ffff16906000190180821462000b27576001600160a01b0385166000908152600184016020526040812080548390811062000a7557fe5b600091825260208083206008830401546001600160a01b038a168452600188019091526040909220805460079092166004026101000a90920460e01b92508291908590811062000ac157fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b031992909216825284905260409020805461ffff60a01b1916600160a01b61ffff8516021790555b6001600160a01b0385166000908152600184016020526040902080548062000b4b57fe5b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319861682528490526040902080546001600160b01b031916905580620005475760028301546001600160a01b03861660009081526001858101602052604090912001546000199091019061ffff1680821462000c6357600085600201838154811062000bec57fe5b6000918252602090912001546002870180546001600160a01b03909216925082918490811062000c1857fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018781019092526040902001805461ffff191661ffff83161790555b8460020180548062000c7157fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03891682526001878101909152604090912001805461ffff1916905550505050505050565b80516001600160a01b038116811462000cdb57600080fd5b919050565b600082601f83011262000cf1578081fd5b8151602062000d0a62000d0483620013f5565b620013d1565b828152818101908583018385028701840188101562000d27578586fd5b855b8581101562000d5d5781516001600160e01b03198116811462000d4a578788fd5b8452928401929084019060010162000d29565b5090979650505050505050565b60006020828403121562000d7c578081fd5b604051602081016001600160401b038111828210171562000d9957fe5b60405290508062000daa8362000cc3565b905292915050565b6000806040838503121562000dc5578182fd5b82516001600160401b038082111562000ddc578384fd5b818501915085601f83011262000df0578384fd5b8151602062000e0362000d0483620013f5565b82815281810190858301885b8581101562000eaa57815188016060818e03601f1901121562000e30578a8bfd5b604051606081018181108a8211171562000e4657fe5b60405262000e5682880162000cc3565b815260408201516003811062000e6a578c8dfd5b8188015260608201518981111562000e80578c8dfd5b62000e908f898386010162000ce0565b604083015250855250928401929084019060010162000e0f565b5050809750505062000ebf8882890162000d6a565b9450505050509250929050565b6001600160a01b03169052565b6000815180845262000ef381602086016020860162001413565b601f01601f19169290920160200192915050565b6000825162000f1b81846020870162001413565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101562000fe257898303607f19018652815180516001600160a01b0316845284810151898501906003811062000f7f57fe5b858701526040918201519185018a9052815190819052908501908a90898601905b8083101562000fcc5783516001600160e01b031916825292870192600192909201919087019062000fa0565b5097860197945050509083019060010162000f4b565b505062000ff28289018b62000ecc565b878103604089015262001006818a62000ed9565b9b9a5050505050505050505050565b6000602082526200102a602083018462000ed9565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656040820152651d995c9d195960d21b606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756040820152663a20b1ba34b7b760c91b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201526d3a30b1363290333ab731ba34b7b760911b606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b6040518181016001600160401b0381118282101715620013ed57fe5b604052919050565b60006001600160401b038211156200140957fe5b5060209081020190565b60005b838110156200143057818101518382015260200162001416565b83811115620008395750506000910152565b6118a780620014526000396000f3fe60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c634300070600334c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465",
              "deployedBytecode": "0x60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c63430007060033",
              "facets": [
                {
                  "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
                  "functionSelectors": [
                    "0x00fdd58e",
                    "0x4e1273f4",
                    "0x6787d449",
                    "0x0b885ac3",
                    "0xe985e9c5",
                    "0x572b6c05",
                    "0x481c6a75",
                    "0xdcf2cad4",
                    "0x05322b74",
                    "0x1b023947",
                    "0xbc01188e",
                    "0x2eb2c2d6",
                    "0xf242432a",
                    "0xa22cb465",
                    "0x01ffc9a7",
                    "0x18160ddd",
                    "0x0e89341c"
                  ]
                }
              ],
              "diamondCut": [
                {
                  "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
                  "functionSelectors": [
                    "0x00fdd58e",
                    "0x4e1273f4",
                    "0x6787d449",
                    "0x0b885ac3",
                    "0xe985e9c5",
                    "0x572b6c05",
                    "0x481c6a75",
                    "0xdcf2cad4",
                    "0x05322b74",
                    "0x1b023947",
                    "0xbc01188e",
                    "0x2eb2c2d6",
                    "0xf242432a",
                    "0xa22cb465",
                    "0x18160ddd",
                    "0x0e89341c"
                  ],
                  "action": 0
                }
              ],
              "execute": {
                "methodName": "initialize",
                "args": [
                  "ipfs://",
                  "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
                  "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
                  "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
                  "0xD52b58d3a0B9d19FBABC9a9Cf98ffCDcC9a8161E"
                ]
              },
              "devdoc": {
                "kind": "dev",
                "methods": {},
                "version": 1
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              },
              "storageLayout": {
                "storage": [],
                "types": null
              }
            }
          ]
        }
      ]
    },
    {
      "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
      "abi": [
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "internalType": "struct Diamond.DiamondArgs",
              "name": "_args",
              "type": "tuple"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "indexed": false,
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "name": "DiamondCut",
          "type": "event"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "name": "diamondCut",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_functionSelector",
              "type": "bytes4"
            }
          ],
          "name": "facetAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "facetAddress_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "facetAddresses",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "facetAddresses_",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_facet",
              "type": "address"
            }
          ],
          "name": "facetFunctionSelectors",
          "outputs": [
            {
              "internalType": "bytes4[]",
              "name": "facetFunctionSelectors_",
              "type": "bytes4[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "facets",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondLoupe.Facet[]",
              "name": "facets_",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            }
          ],
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "DropCreated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Minted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "accountsByToken",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "name": "batchMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_timeStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_timeEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_priceStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_priceEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_stepDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amountCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_shareCyber",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "name": "createDrop",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "name": "dropMintCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "getDrop",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "timeStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stepDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shareCyber",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minted",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "getMintPriceForToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "mintPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_manager",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_trustedForwarder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_opensea",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_oncyber",
              "type": "address"
            }
          ],
          "name": "initialize",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "manager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "name": "mint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "name": "minterNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "oncyber",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeBatchTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "tokensByAccount",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "totalHolders",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "transactionHash": "0xf15e973f5f2441b55490df0b17fa437b235193e3e12a00e9255baeac0b68addc",
      "receipt": {
        "to": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
        "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
        "contractAddress": null,
        "transactionIndex": 0,
        "gasUsed": "438717",
        "logsBloom": "0x
        "blockHash": "0x6af8ef6c197723f360fe01df30baa83ed9fa37643df613eac4e6510d5dff7490",
        "transactionHash": "0xf15e973f5f2441b55490df0b17fa437b235193e3e12a00e9255baeac0b68addc",
        "logs": [
          {
            "transactionIndex": 0,
            "blockNumber": 9875197,
            "transactionHash": "0xf15e973f5f2441b55490df0b17fa437b235193e3e12a00e9255baeac0b68addc",
            "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "topics": [
              "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185bd61b0c8200000000000000000000000000000000000000000000000000000000000000000000000000000000f0a5552de9cf219048ef6d4e1ce3bc399ae087c50000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000166dcfd8410000000000000000000000000000000000000000000000000000000000fdd58e000000000000000000000000000000000000000000000000000000004e1273f400000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000005c5ed16d000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000db7fd408000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df0000000000000000000000000000000000000000000000000000000018160ddd00000000000000000000000000000000000000000000000000000000bd85b039000000000000000000000000000000000000000000000000000000000e89341c00000000000000000000000000000000000000000000000000000000000000000000000000000000f0a5552de9cf219048ef6d4e1ce3bc399ae087c5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000001f44192b40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "logIndex": 0,
            "blockHash": "0x6af8ef6c197723f360fe01df30baa83ed9fa37643df613eac4e6510d5dff7490"
          }
        ],
        "events": [
          {
            "transactionIndex": 0,
            "blockNumber": 9875197,
            "transactionHash": "0xf15e973f5f2441b55490df0b17fa437b235193e3e12a00e9255baeac0b68addc",
            "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "topics": [
              "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185bd61b0c8200000000000000000000000000000000000000000000000000000000000000000000000000000000f0a5552de9cf219048ef6d4e1ce3bc399ae087c50000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000166dcfd8410000000000000000000000000000000000000000000000000000000000fdd58e000000000000000000000000000000000000000000000000000000004e1273f400000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000005c5ed16d000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000db7fd408000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df0000000000000000000000000000000000000000000000000000000018160ddd00000000000000000000000000000000000000000000000000000000bd85b039000000000000000000000000000000000000000000000000000000000e89341c00000000000000000000000000000000000000000000000000000000000000000000000000000000f0a5552de9cf219048ef6d4e1ce3bc399ae087c5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000001f44192b40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "logIndex": 0,
            "blockHash": "0x6af8ef6c197723f360fe01df30baa83ed9fa37643df613eac4e6510d5dff7490",
            "args": [
              [
                [
                  "0x0000000000000000000000000000000000000000",
                  2,
                  [
                    "0xd61b0c82"
                  ]
                ],
                [
                  "0xF0A5552DE9Cf219048EF6d4E1CE3bC399ae087c5",
                  1,
                  [
                    "0x6dcfd841",
                    "0x00fdd58e",
                    "0x4e1273f4",
                    "0x081cdf12",
                    "0xb3a721d1",
                    "0x6787d449",
                    "0x5c5ed16d",
                    "0x0b885ac3",
                    "0xe985e9c5",
                    "0x572b6c05",
                    "0x481c6a75",
                    "0xdb7fd408",
                    "0x1b023947",
                    "0xbc01188e",
                    "0x2eb2c2d6",
                    "0xf242432a",
                    "0xa22cb465",
                    "0x85bff2e7",
                    "0x13ba55df",
                    "0x18160ddd",
                    "0xbd85b039",
                    "0x0e89341c"
                  ]
                ],
                [
                  "0xF0A5552DE9Cf219048EF6d4E1CE3bC399ae087c5",
                  0,
                  [
                    "0xf44192b4"
                  ]
                ]
              ],
              "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
              "0x0b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f00000000000000000000000000000000000000000000000000"
            ],
            "event": "DiamondCut",
            "eventSignature": "DiamondCut((address,uint8,bytes4[])[],address,bytes)"
          }
        ],
        "blockNumber": 9875197,
        "cumulativeGasUsed": "438717",
        "status": 1,
        "byzantium": true
      },
      "facets": [
        [
          "0x35D80A53F7be635f75152221d4D71CD4DCB07e5C",
          [
            "0x1f931c1c"
          ]
        ],
        [
          "0xC1bbdF9f8c0b6aE0B4d35E9A778080B691A72a3E",
          [
            "0xadfca15e",
            "0x7a0ed627",
            "0xcdffacc6",
            "0x52ef6b2c",
            "0x01ffc9a7"
          ]
        ],
        [
          "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
          [
            "0xf2fde38b",
            "0x8da5cb5b"
          ]
        ],
        {
          "facetAddress": "0xF0A5552DE9Cf219048EF6d4E1CE3bC399ae087c5",
          "functionSelectors": [
            "0x6dcfd841",
            "0x00fdd58e",
            "0x4e1273f4",
            "0xf44192b4",
            "0x081cdf12",
            "0xb3a721d1",
            "0x6787d449",
            "0x5c5ed16d",
            "0x0b885ac3",
            "0xe985e9c5",
            "0x572b6c05",
            "0x481c6a75",
            "0xdb7fd408",
            "0x1b023947",
            "0xbc01188e",
            "0x2eb2c2d6",
            "0xf242432a",
            "0xa22cb465",
            "0x01ffc9a7",
            "0x85bff2e7",
            "0x13ba55df",
            "0x18160ddd",
            "0xbd85b039",
            "0x0e89341c"
          ]
        }
      ],
      "diamondCut": [
        {
          "facetAddress": "0x0000000000000000000000000000000000000000",
          "functionSelectors": [
            "0xd61b0c82"
          ],
          "action": 2
        },
        {
          "facetAddress": "0xF0A5552DE9Cf219048EF6d4E1CE3bC399ae087c5",
          "functionSelectors": [
            "0x6dcfd841",
            "0x00fdd58e",
            "0x4e1273f4",
            "0x081cdf12",
            "0xb3a721d1",
            "0x6787d449",
            "0x5c5ed16d",
            "0x0b885ac3",
            "0xe985e9c5",
            "0x572b6c05",
            "0x481c6a75",
            "0xdb7fd408",
            "0x1b023947",
            "0xbc01188e",
            "0x2eb2c2d6",
            "0xf242432a",
            "0xa22cb465",
            "0x85bff2e7",
            "0x13ba55df",
            "0x18160ddd",
            "0xbd85b039",
            "0x0e89341c"
          ],
          "action": 1
        },
        {
          "facetAddress": "0xF0A5552DE9Cf219048EF6d4E1CE3bC399ae087c5",
          "functionSelectors": [
            "0xf44192b4"
          ],
          "action": 0
        }
      ],
      "execute": {
        "methodName": "initialize",
        "args": [
          "ipfs://",
          "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
          "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
          "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
          "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d"
        ]
      },
      "history": [
        {
          "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Diamond.DiamondArgs",
                  "name": "_args",
                  "type": "tuple"
                }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_init",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                }
              ],
              "name": "DiamondCut",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "internalType": "address",
                  "name": "_init",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                }
              ],
              "name": "diamondCut",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_functionSelector",
                  "type": "bytes4"
                }
              ],
              "name": "facetAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "facetAddress_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "facetAddresses",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "facetAddresses_",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_facet",
                  "type": "address"
                }
              ],
              "name": "facetFunctionSelectors",
              "outputs": [
                {
                  "internalType": "bytes4[]",
                  "name": "facetFunctionSelectors_",
                  "type": "bytes4[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "facets",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondLoupe.Facet[]",
                  "name": "facets_",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "DestinationMinted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Minted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "name": "TransferBatch",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "TransferSingle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "URI",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                }
              ],
              "name": "balanceOfBatch",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getDrop",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "timeStart",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timeEnd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shareCyber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountCap",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minted",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "creator",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct LibUtilityStorage.Drop",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "_manager",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_trustedForwarder",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_opensea",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_oncyber",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                }
              ],
              "name": "isTrustedForwarder",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "manager",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_timeStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_timeEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amountCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_shareCyber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "mintEdition",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_minter",
                  "type": "address"
                }
              ],
              "name": "minterNonce",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oncyber",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeBatchTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "uri",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
          "receipt": {
            "to": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
            "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
            "contractAddress": null,
            "transactionIndex": 84,
            "gasUsed": "2591193",
            "logsBloom": "0x
            "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
            "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
            "logs": [
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 97,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
                ],
                "data": "0x",
                "logIndex": 98,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                "topics": [
                  "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
                ],
                "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
                "logIndex": 99,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 100,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
                  "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
                ],
                "data": "0x",
                "logIndex": 101,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              }
            ],
            "events": [
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 97,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
                ],
                "data": "0x",
                "logIndex": 98,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                "topics": [
                  "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
                ],
                "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
                "logIndex": 99,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
                "args": [
                  [
                    {
                      "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                      "action": 0,
                      "functionSelectors": [
                        "0x1f931c1c"
                      ]
                    },
                    {
                      "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                      "action": 0,
                      "functionSelectors": [
                        "0xcdffacc6",
                        "0x52ef6b2c",
                        "0xadfca15e",
                        "0x7a0ed627",
                        "0x01ffc9a7"
                      ]
                    },
                    {
                      "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                      "action": 0,
                      "functionSelectors": [
                        "0xf2fde38b",
                        "0x8da5cb5b"
                      ]
                    }
                  ],
                  {
                    "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
                  }
                ],
                "event": "DiamondCreated",
                "eventSignature": "DiamondCreated(address)"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 100,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              },
              {
                "transactionIndex": 84,
                "blockNumber": 9284533,
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
                  "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
                ],
                "data": "0x",
                "logIndex": 101,
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
              }
            ],
            "blockNumber": 9284533,
            "cumulativeGasUsed": "20695988",
            "status": 1,
            "byzantium": true
          },
          "args": [
            [
              {
                "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                "action": 0,
                "functionSelectors": [
                  "0x1f931c1c"
                ]
              },
              {
                "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                "action": 0,
                "functionSelectors": [
                  "0xcdffacc6",
                  "0x52ef6b2c",
                  "0xadfca15e",
                  "0x7a0ed627",
                  "0x01ffc9a7"
                ]
              },
              {
                "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                "action": 0,
                "functionSelectors": [
                  "0xf2fde38b",
                  "0x8da5cb5b"
                ]
              }
            ],
            {
              "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
            }
          ],
          "solcInputHash": "1d060b65b8264d57d416f20cb1fe798a",
          "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct Diamond.DiamondArgs\",\"name\":\"_args\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.7/diamond/Diamond.sol\":\"Diamond\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.7/diamond/Diamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n* \\n* Implementation of a diamond.\\n/******************************************************************************/\\n\\nimport \\\"./libraries/LibDiamond.sol\\\";\\nimport \\\"./interfaces/IDiamondLoupe.sol\\\";\\nimport \\\"./interfaces/IDiamondCut.sol\\\";\\nimport \\\"./interfaces/IERC173.sol\\\";\\nimport \\\"./interfaces/IERC165.sol\\\";\\n\\ncontract Diamond {\\n    // more arguments are added to this struct\\n    // this avoids stack too deep errors\\n    struct DiamondArgs {\\n        address owner;\\n    }\\n\\n    constructor(IDiamondCut.FacetCut[] memory _diamondCut, DiamondArgs memory _args) payable {\\n        LibDiamond.diamondCut(_diamondCut, address(0), new bytes(0));\\n        LibDiamond.setContractOwner(_args.owner);\\n\\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\\n\\n        // adding ERC165 data\\n        ds.supportedInterfaces[type(IERC165).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondCut).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondLoupe).interfaceId] = true;\\n        ds.supportedInterfaces[type(IERC173).interfaceId] = true;\\n    }\\n\\n    // Find facet for function that is called and execute the\\n    // function if a facet is found and return any value.\\n    fallback() external payable {\\n        LibDiamond.DiamondStorage storage ds;\\n        bytes32 position = LibDiamond.DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n        address facet = ds.selectorToFacetAndPosition[msg.sig].facetAddress;\\n        require(facet != address(0), \\\"Diamond: Function does not exist\\\");\\n        assembly {\\n            calldatacopy(0, 0, calldatasize())\\n            let result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\\n            returndatacopy(0, 0, returndatasize())\\n            switch result\\n                case 0 {\\n                    revert(0, returndatasize())\\n                }\\n                default {\\n                    return(0, returndatasize())\\n                }\\n        }\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x968d41f1fbb08e012a0617f3a8b865c06f60d783e043b675280741b791216202\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xfb3c1af58cd19e1e49f065e33c7c68045ce451c3e16920614979624c44faf892\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\n// A loupe is a small magnifying glass used to look at diamonds.\\n// These functions look at diamonds\\ninterface IDiamondLoupe {\\n    /// These functions are expected to be called frequently\\n    /// by tools.\\n\\n    struct Facet {\\n        address facetAddress;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\n    /// @return facets_ Facet\\n    function facets() external view returns (Facet[] memory facets_);\\n\\n    /// @notice Gets all the function selectors supported by a specific facet.\\n    /// @param _facet The facet address.\\n    /// @return facetFunctionSelectors_\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\n\\n    /// @notice Get all the facet addresses used by a diamond.\\n    /// @return facetAddresses_\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\n\\n    /// @notice Gets the facet that supports the given selector.\\n    /// @dev If facet is not found return address(0).\\n    /// @param _functionSelector The function selector.\\n    /// @return facetAddress_ The facet address.\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\n}\\n\",\"keccak256\":\"0xf4bc76153335588e7cb5fe1c9701857fd2ae0340ad94976adbf1c49054f82dfe\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\ninterface IERC165 {\\n    /// @notice Query if a contract implements an interface\\n    /// @param interfaceId The interface identifier, as specified in ERC-165\\n    /// @dev Interface identification is specified in ERC-165. This function\\n    ///  uses less than 30,000 gas.\\n    /// @return `true` if the contract implements `interfaceID` and\\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xe3ccc62939f8e880bdd4d5a34b05ccb9576810b8e999df6d16124e51019a0603\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0xa4023156092d7cb99c69e21bc95b910e13c54e582d6814601579bc2fb594ecf8\",\"license\":\"MIT\"},\"solc_0.7/diamond/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint16 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint16 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // uint16 selectorCount = uint16(diamondStorage().selectors.length);\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(oldFacetAddress, selector);\\n            // add function\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function removeFunction(address _facetAddress, bytes4 _selector) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint16(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = uint16(facetAddressPosition);\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n}\\n\",\"keccak256\":\"0x4eac03abb9864ad822b50481746c975a8e3e3278e179032cfc1b4b9c8e2320bc\",\"license\":\"MIT\"}},\"version\":1}",
          "bytecode": "0x608060405260405162002d4538038062002d45833981016040819052620000269162000db2565b604080516000808252602082019092526200004e918491620000f560201b620000db1760201c565b620000688160000151620002b560201b6200027d1760201c565b60006200007f6200031760201b620003021760201c565b6301ffc9a760e01b600090815260039091016020526040808220805460ff1990811660019081179092556307e4c70760e21b845282842080548216831790556348e2b09360e01b845282842080548216831790556307f5828d60e41b845291909220805490911690911790555062001442915050565b60005b8351811015620002665760008482815181106200011157fe5b6020026020010151602001519050600060028111156200012d57fe5b8160028111156200013a57fe5b14156200018957620001838583815181106200015257fe5b6020026020010151600001518684815181106200016b57fe5b6020026020010151604001516200033b60201b60201c565b6200025c565b60018160028111156200019857fe5b1415620001e15762000183858381518110620001b057fe5b602002602001015160000151868481518110620001c957fe5b6020026020010151604001516200054e60201b60201c565b6002816002811115620001f057fe5b14156200023957620001838583815181106200020857fe5b6020026020010151600001518684815181106200022157fe5b6020026020010151604001516200077860201b60201c565b60405162461bcd60e51b815260040162000253906200117c565b60405180910390fd5b50600101620000f8565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516200029c9392919062000f25565b60405180910390a1620002b082826200083f565b505050565b6000620002c162000317565b6004810180546001600160a01b038581166001600160a01b031983168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b60008151116200035f5760405162461bcd60e51b81526004016200025390620010d4565b60006200036b62000317565b90506001600160a01b038316620003965760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200043c57620003e08460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200045857fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620004ab5760405162461bcd60e51b81526004016200025390620012ba565b506001600160a01b0386166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790556001600160e01b0319909516835287905292902080546001600160a01b03191690911761ffff60a01b1916600160a01b61ffff86160217905591820191016200043f565b5050505050565b6000815111620005725760405162461bcd60e51b81526004016200025390620010d4565b60006200057e62000317565b90506001600160a01b038316620005a95760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200064f57620005f38460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200066b57fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03908116908716811415620006c45760405162461bcd60e51b8152600401620002539062001317565b620006d08183620009a0565b506001600160e01b03198116600081815260208681526040808320805461ffff60a01b1916600160a01b61ffff8a16021781556001600160a01b038b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281546001600160a01b0319169092179055918201910162000652565b60008151116200079c5760405162461bcd60e51b81526004016200025390620010d4565b6000620007a862000317565b90506001600160a01b03831615620007d45760405162461bcd60e51b8152600401620002539062001374565b60005b825181101562000839576000838281518110620007f057fe5b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166200082e8183620009a0565b5050600101620007d7565b50505050565b6001600160a01b0382166200087657805115620008705760405162461bcd60e51b8152600401620002539062001031565b62000978565b60008151116200089a5760405162461bcd60e51b815260040162000253906200120f565b6001600160a01b0382163014620008d057620008d08260405180606001604052806028815260200162002cf9602891396200097c565b600080836001600160a01b031683604051620008ed919062000f07565b600060405180830381855af49150503d80600081146200092a576040519150601f19603f3d011682016040523d82523d6000602084013e6200092f565b606091505b50915091508162000839578051156200095e578060405162461bcd60e51b815260040162000253919062001015565b60405162461bcd60e51b815260040162000253906200108e565b5050565b813b8181620008395760405162461bcd60e51b815260040162000253919062001015565b6000620009ac62000317565b90506001600160a01b038316620009d75760405162461bcd60e51b815260040162000253906200111f565b6001600160a01b03831630141562000a035760405162461bcd60e51b815260040162000253906200126c565b6001600160e01b03198216600090815260208281526040808320546001600160a01b03871684526001850190925290912054600160a01b90910461ffff16906000190180821462000b27576001600160a01b0385166000908152600184016020526040812080548390811062000a7557fe5b600091825260208083206008830401546001600160a01b038a168452600188019091526040909220805460079092166004026101000a90920460e01b92508291908590811062000ac157fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b031992909216825284905260409020805461ffff60a01b1916600160a01b61ffff8516021790555b6001600160a01b0385166000908152600184016020526040902080548062000b4b57fe5b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319861682528490526040902080546001600160b01b031916905580620005475760028301546001600160a01b03861660009081526001858101602052604090912001546000199091019061ffff1680821462000c6357600085600201838154811062000bec57fe5b6000918252602090912001546002870180546001600160a01b03909216925082918490811062000c1857fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018781019092526040902001805461ffff191661ffff83161790555b8460020180548062000c7157fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03891682526001878101909152604090912001805461ffff1916905550505050505050565b80516001600160a01b038116811462000cdb57600080fd5b919050565b600082601f83011262000cf1578081fd5b8151602062000d0a62000d0483620013f5565b620013d1565b828152818101908583018385028701840188101562000d27578586fd5b855b8581101562000d5d5781516001600160e01b03198116811462000d4a578788fd5b8452928401929084019060010162000d29565b5090979650505050505050565b60006020828403121562000d7c578081fd5b604051602081016001600160401b038111828210171562000d9957fe5b60405290508062000daa8362000cc3565b905292915050565b6000806040838503121562000dc5578182fd5b82516001600160401b038082111562000ddc578384fd5b818501915085601f83011262000df0578384fd5b8151602062000e0362000d0483620013f5565b82815281810190858301885b8581101562000eaa57815188016060818e03601f1901121562000e30578a8bfd5b604051606081018181108a8211171562000e4657fe5b60405262000e5682880162000cc3565b815260408201516003811062000e6a578c8dfd5b8188015260608201518981111562000e80578c8dfd5b62000e908f898386010162000ce0565b604083015250855250928401929084019060010162000e0f565b5050809750505062000ebf8882890162000d6a565b9450505050509250929050565b6001600160a01b03169052565b6000815180845262000ef381602086016020860162001413565b601f01601f19169290920160200192915050565b6000825162000f1b81846020870162001413565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101562000fe257898303607f19018652815180516001600160a01b0316845284810151898501906003811062000f7f57fe5b858701526040918201519185018a9052815190819052908501908a90898601905b8083101562000fcc5783516001600160e01b031916825292870192600192909201919087019062000fa0565b5097860197945050509083019060010162000f4b565b505062000ff28289018b62000ecc565b878103604089015262001006818a62000ed9565b9b9a5050505050505050505050565b6000602082526200102a602083018462000ed9565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656040820152651d995c9d195960d21b606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756040820152663a20b1ba34b7b760c91b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201526d3a30b1363290333ab731ba34b7b760911b606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b6040518181016001600160401b0381118282101715620013ed57fe5b604052919050565b60006001600160401b038211156200140957fe5b5060209081020190565b60005b838110156200143057818101518382015260200162001416565b83811115620008395750506000910152565b6118a780620014526000396000f3fe60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c634300070600334c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465",
          "deployedBytecode": "0x60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c63430007060033",
          "facets": [
            {
              "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
              "functionSelectors": [
                "0x00fdd58e",
                "0x4e1273f4",
                "0x6787d449",
                "0x0b885ac3",
                "0xe985e9c5",
                "0x572b6c05",
                "0x481c6a75",
                "0xdcf2cad4",
                "0x05322b74",
                "0x1b023947",
                "0xbc01188e",
                "0x2eb2c2d6",
                "0xf242432a",
                "0xa22cb465",
                "0x01ffc9a7",
                "0x18160ddd",
                "0x0e89341c"
              ]
            }
          ],
          "diamondCut": [
            {
              "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
              "functionSelectors": [
                "0x00fdd58e",
                "0x4e1273f4",
                "0x6787d449",
                "0x0b885ac3",
                "0xe985e9c5",
                "0x572b6c05",
                "0x481c6a75",
                "0xdcf2cad4",
                "0x05322b74",
                "0x1b023947",
                "0xbc01188e",
                "0x2eb2c2d6",
                "0xf242432a",
                "0xa22cb465",
                "0x18160ddd",
                "0x0e89341c"
              ],
              "action": 0
            }
          ],
          "execute": {
            "methodName": "initialize",
            "args": [
              "ipfs://",
              "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
              "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
              "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
              "0xD52b58d3a0B9d19FBABC9a9Cf98ffCDcC9a8161E"
            ]
          },
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          },
          "storageLayout": {
            "storage": [],
            "types": null
          }
        },
        {
          "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Diamond.DiamondArgs",
                  "name": "_args",
                  "type": "tuple"
                }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_init",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                }
              ],
              "name": "DiamondCut",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "internalType": "address",
                  "name": "_init",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                }
              ],
              "name": "diamondCut",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_functionSelector",
                  "type": "bytes4"
                }
              ],
              "name": "facetAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "facetAddress_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "facetAddresses",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "facetAddresses_",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_facet",
                  "type": "address"
                }
              ],
              "name": "facetFunctionSelectors",
              "outputs": [
                {
                  "internalType": "bytes4[]",
                  "name": "facetFunctionSelectors_",
                  "type": "bytes4[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "facets",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondLoupe.Facet[]",
                  "name": "facets_",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "DropCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Minted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "name": "TransferBatch",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "TransferSingle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "URI",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "accountsByToken",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                }
              ],
              "name": "balanceOfBatch",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_timeStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_timeEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_priceStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_priceEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_stepDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amountCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_shareCyber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "createDrop",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_minter",
                  "type": "address"
                }
              ],
              "name": "dropMintCounter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getDrop",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "timeStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "priceStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "priceEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "stepDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shareCyber",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minted",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getMintPriceForToken",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "mintPrice",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_timeSpent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_priceStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_priceEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_stepDuration",
                  "type": "uint256"
                }
              ],
              "name": "getPriceFor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "_manager",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_trustedForwarder",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_opensea",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_oncyber",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                }
              ],
              "name": "isTrustedForwarder",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "manager",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_minter",
                  "type": "address"
                }
              ],
              "name": "minterNonce",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oncyber",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeBatchTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "tokensByAccount",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "totalHolders",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "uri",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
          "receipt": {
            "to": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
            "contractAddress": null,
            "transactionIndex": 0,
            "gasUsed": "555152",
            "logsBloom": "0x
            "blockHash": "0x6bc28c4fe5c4caa2fcc5200304edbd60a8935f6cc2958b1ce4dacb7aa688ac83",
            "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
            "logs": [
              {
                "transactionIndex": 0,
                "blockNumber": 9822632,
                "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185bdcf2cad40000000000000000000000000000000000000000000000000000000005322b7400000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000e00fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a75000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c00000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000096dcfd84100000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000005c5ed16d00000000000000000000000000000000000000000000000000000000d61b0c8200000000000000000000000000000000000000000000000000000000db7fd4080000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df00000000000000000000000000000000000000000000000000000000bd85b0390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 0,
                "blockHash": "0x6bc28c4fe5c4caa2fcc5200304edbd60a8935f6cc2958b1ce4dacb7aa688ac83"
              }
            ],
            "events": [
              {
                "transactionIndex": 0,
                "blockNumber": 9822632,
                "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185bdcf2cad40000000000000000000000000000000000000000000000000000000005322b7400000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000e00fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a75000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c00000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000096dcfd84100000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000005c5ed16d00000000000000000000000000000000000000000000000000000000d61b0c8200000000000000000000000000000000000000000000000000000000db7fd4080000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df00000000000000000000000000000000000000000000000000000000bd85b0390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 0,
                "blockHash": "0x6bc28c4fe5c4caa2fcc5200304edbd60a8935f6cc2958b1ce4dacb7aa688ac83",
                "args": [
                  [
                    [
                      "0x0000000000000000000000000000000000000000",
                      2,
                      [
                        "0xdcf2cad4",
                        "0x05322b74"
                      ]
                    ],
                    [
                      "0x481A220d69c31E114Bf3Ac69094f3Abf895D123d",
                      1,
                      [
                        "0x00fdd58e",
                        "0x4e1273f4",
                        "0x6787d449",
                        "0x0b885ac3",
                        "0xe985e9c5",
                        "0x572b6c05",
                        "0x481c6a75",
                        "0x1b023947",
                        "0xbc01188e",
                        "0x2eb2c2d6",
                        "0xf242432a",
                        "0xa22cb465",
                        "0x18160ddd",
                        "0x0e89341c"
                      ]
                    ],
                    [
                      "0x481A220d69c31E114Bf3Ac69094f3Abf895D123d",
                      0,
                      [
                        "0x6dcfd841",
                        "0x081cdf12",
                        "0xb3a721d1",
                        "0x5c5ed16d",
                        "0xd61b0c82",
                        "0xdb7fd408",
                        "0x85bff2e7",
                        "0x13ba55df",
                        "0xbd85b039"
                      ]
                    ]
                  ],
                  "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                  "0x0b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f00000000000000000000000000000000000000000000000000"
                ],
                "event": "DiamondCut",
                "eventSignature": "DiamondCut((address,uint8,bytes4[])[],address,bytes)"
              }
            ],
            "blockNumber": 9822632,
            "cumulativeGasUsed": "555152",
            "status": 1,
            "byzantium": true
          },
          "facets": [
            [
              "0x35D80A53F7be635f75152221d4D71CD4DCB07e5C",
              [
                "0x1f931c1c"
              ]
            ],
            [
              "0xC1bbdF9f8c0b6aE0B4d35E9A778080B691A72a3E",
              [
                "0xadfca15e",
                "0x7a0ed627",
                "0xcdffacc6",
                "0x52ef6b2c",
                "0x01ffc9a7"
              ]
            ],
            [
              "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
              [
                "0xf2fde38b",
                "0x8da5cb5b"
              ]
            ],
            {
              "facetAddress": "0x481a220d69c31e114bf3ac69094f3abf895d123d",
              "functionSelectors": [
                "0x6dcfd841",
                "0x00fdd58e",
                "0x4e1273f4",
                "0x081cdf12",
                "0xb3a721d1",
                "0x6787d449",
                "0x5c5ed16d",
                "0xd61b0c82",
                "0x0b885ac3",
                "0xe985e9c5",
                "0x572b6c05",
                "0x481c6a75",
                "0xdb7fd408",
                "0x1b023947",
                "0xbc01188e",
                "0x2eb2c2d6",
                "0xf242432a",
                "0xa22cb465",
                "0x01ffc9a7",
                "0x85bff2e7",
                "0x13ba55df",
                "0x18160ddd",
                "0xbd85b039",
                "0x0e89341c"
              ]
            }
          ],
          "diamondCut": [
            {
              "facetAddress": "0x0000000000000000000000000000000000000000",
              "functionSelectors": [
                "0xdcf2cad4",
                "0x05322b74"
              ],
              "action": 2
            },
            {
              "facetAddress": "0x481a220d69c31e114bf3ac69094f3abf895d123d",
              "functionSelectors": [
                "0x00fdd58e",
                "0x4e1273f4",
                "0x6787d449",
                "0x0b885ac3",
                "0xe985e9c5",
                "0x572b6c05",
                "0x481c6a75",
                "0x1b023947",
                "0xbc01188e",
                "0x2eb2c2d6",
                "0xf242432a",
                "0xa22cb465",
                "0x18160ddd",
                "0x0e89341c"
              ],
              "action": 1
            },
            {
              "facetAddress": "0x481a220d69c31e114bf3ac69094f3abf895d123d",
              "functionSelectors": [
                "0x6dcfd841",
                "0x081cdf12",
                "0xb3a721d1",
                "0x5c5ed16d",
                "0xd61b0c82",
                "0xdb7fd408",
                "0x85bff2e7",
                "0x13ba55df",
                "0xbd85b039"
              ],
              "action": 0
            }
          ],
          "execute": {
            "methodName": "initialize",
            "args": [
              "ipfs://",
              "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
              "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
              "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
              "0xD52b58d3a0B9d19FBABC9a9Cf98ffCDcC9a8161E"
            ]
          },
          "history": [
            {
              "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
              "abi": [
                {
                  "inputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "enum IDiamondCut.FacetCutAction",
                          "name": "action",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "internalType": "struct IDiamondCut.FacetCut[]",
                      "name": "_diamondCut",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "owner",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct Diamond.DiamondArgs",
                      "name": "_args",
                      "type": "tuple"
                    }
                  ],
                  "stateMutability": "payable",
                  "type": "constructor"
                },
                {
                  "stateMutability": "payable",
                  "type": "fallback"
                },
                {
                  "stateMutability": "payable",
                  "type": "receive"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "enum IDiamondCut.FacetCutAction",
                          "name": "action",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "indexed": false,
                      "internalType": "struct IDiamondCut.FacetCut[]",
                      "name": "_diamondCut",
                      "type": "tuple[]"
                    },
                    {
                      "indexed": false,
                      "internalType": "address",
                      "name": "_init",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "bytes",
                      "name": "_calldata",
                      "type": "bytes"
                    }
                  ],
                  "name": "DiamondCut",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "enum IDiamondCut.FacetCutAction",
                          "name": "action",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "internalType": "struct IDiamondCut.FacetCut[]",
                      "name": "_diamondCut",
                      "type": "tuple[]"
                    },
                    {
                      "internalType": "address",
                      "name": "_init",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "_calldata",
                      "type": "bytes"
                    }
                  ],
                  "name": "diamondCut",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "bytes4",
                      "name": "_functionSelector",
                      "type": "bytes4"
                    }
                  ],
                  "name": "facetAddress",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "facetAddress_",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "facetAddresses",
                  "outputs": [
                    {
                      "internalType": "address[]",
                      "name": "facetAddresses_",
                      "type": "address[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "_facet",
                      "type": "address"
                    }
                  ],
                  "name": "facetFunctionSelectors",
                  "outputs": [
                    {
                      "internalType": "bytes4[]",
                      "name": "facetFunctionSelectors_",
                      "type": "bytes4[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "facets",
                  "outputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "internalType": "struct IDiamondLoupe.Facet[]",
                      "name": "facets_",
                      "type": "tuple[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "bytes4",
                      "name": "_interfaceId",
                      "type": "bytes4"
                    }
                  ],
                  "name": "supportsInterface",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "previousOwner",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "newOwner",
                      "type": "address"
                    }
                  ],
                  "name": "OwnershipTransferred",
                  "type": "event"
                },
                {
                  "inputs": [],
                  "name": "owner",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "owner_",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "_newOwner",
                      "type": "address"
                    }
                  ],
                  "name": "transferOwnership",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "bool",
                      "name": "approved",
                      "type": "bool"
                    }
                  ],
                  "name": "ApprovalForAll",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "DestinationMinted",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "name": "Minted",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256[]",
                      "name": "values",
                      "type": "uint256[]"
                    }
                  ],
                  "name": "TransferBatch",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ],
                  "name": "TransferSingle",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "string",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "URI",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "balanceOf",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address[]",
                      "name": "accounts",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    }
                  ],
                  "name": "balanceOfBatch",
                  "outputs": [
                    {
                      "internalType": "uint256[]",
                      "name": "",
                      "type": "uint256[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "getDrop",
                  "outputs": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "timeStart",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "timeEnd",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shareCyber",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amountCap",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "minted",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "creator",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct LibUtilityStorage.Drop",
                      "name": "",
                      "type": "tuple"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "string",
                      "name": "_uri",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "_manager",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_trustedForwarder",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_opensea",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_oncyber",
                      "type": "address"
                    }
                  ],
                  "name": "initialize",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    }
                  ],
                  "name": "isApprovedForAll",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "forwarder",
                      "type": "address"
                    }
                  ],
                  "name": "isTrustedForwarder",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "manager",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "string",
                      "name": "_uri",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_timeStart",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_timeEnd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_amountCap",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_shareCyber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "_signature",
                      "type": "bytes"
                    }
                  ],
                  "name": "mint",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "mintEdition",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "payable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "_minter",
                      "type": "address"
                    }
                  ],
                  "name": "minterNonce",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "oncyber",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "name": "safeBatchTransferFrom",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "name": "safeTransferFrom",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "status",
                      "type": "bool"
                    }
                  ],
                  "name": "setApprovalForAll",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "totalSupply",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "uri",
                  "outputs": [
                    {
                      "internalType": "string",
                      "name": "",
                      "type": "string"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                }
              ],
              "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
              "receipt": {
                "to": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
                "contractAddress": null,
                "transactionIndex": 84,
                "gasUsed": "2591193",
                "logsBloom": "0x
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "logs": [
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                    ],
                    "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                    "logIndex": 97,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                      "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
                    ],
                    "data": "0x",
                    "logIndex": 98,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                    "topics": [
                      "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
                    ],
                    "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
                    "logIndex": 99,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                    ],
                    "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                    "logIndex": 100,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                      "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
                      "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
                    ],
                    "data": "0x",
                    "logIndex": 101,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  }
                ],
                "events": [
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                    ],
                    "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                    "logIndex": 97,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                      "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
                    ],
                    "data": "0x",
                    "logIndex": 98,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                    "topics": [
                      "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
                    ],
                    "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
                    "logIndex": 99,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
                    "args": [
                      [
                        {
                          "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                          "action": 0,
                          "functionSelectors": [
                            "0x1f931c1c"
                          ]
                        },
                        {
                          "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                          "action": 0,
                          "functionSelectors": [
                            "0xcdffacc6",
                            "0x52ef6b2c",
                            "0xadfca15e",
                            "0x7a0ed627",
                            "0x01ffc9a7"
                          ]
                        },
                        {
                          "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                          "action": 0,
                          "functionSelectors": [
                            "0xf2fde38b",
                            "0x8da5cb5b"
                          ]
                        }
                      ],
                      {
                        "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
                      }
                    ],
                    "event": "DiamondCreated",
                    "eventSignature": "DiamondCreated(address)"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                    ],
                    "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                    "logIndex": 100,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                      "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
                      "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
                    ],
                    "data": "0x",
                    "logIndex": 101,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  }
                ],
                "blockNumber": 9284533,
                "cumulativeGasUsed": "20695988",
                "status": 1,
                "byzantium": true
              },
              "args": [
                [
                  {
                    "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                    "action": 0,
                    "functionSelectors": [
                      "0x1f931c1c"
                    ]
                  },
                  {
                    "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                    "action": 0,
                    "functionSelectors": [
                      "0xcdffacc6",
                      "0x52ef6b2c",
                      "0xadfca15e",
                      "0x7a0ed627",
                      "0x01ffc9a7"
                    ]
                  },
                  {
                    "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                    "action": 0,
                    "functionSelectors": [
                      "0xf2fde38b",
                      "0x8da5cb5b"
                    ]
                  }
                ],
                {
                  "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
                }
              ],
              "solcInputHash": "1d060b65b8264d57d416f20cb1fe798a",
              "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct Diamond.DiamondArgs\",\"name\":\"_args\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.7/diamond/Diamond.sol\":\"Diamond\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.7/diamond/Diamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n* \\n* Implementation of a diamond.\\n/******************************************************************************/\\n\\nimport \\\"./libraries/LibDiamond.sol\\\";\\nimport \\\"./interfaces/IDiamondLoupe.sol\\\";\\nimport \\\"./interfaces/IDiamondCut.sol\\\";\\nimport \\\"./interfaces/IERC173.sol\\\";\\nimport \\\"./interfaces/IERC165.sol\\\";\\n\\ncontract Diamond {\\n    // more arguments are added to this struct\\n    // this avoids stack too deep errors\\n    struct DiamondArgs {\\n        address owner;\\n    }\\n\\n    constructor(IDiamondCut.FacetCut[] memory _diamondCut, DiamondArgs memory _args) payable {\\n        LibDiamond.diamondCut(_diamondCut, address(0), new bytes(0));\\n        LibDiamond.setContractOwner(_args.owner);\\n\\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\\n\\n        // adding ERC165 data\\n        ds.supportedInterfaces[type(IERC165).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondCut).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondLoupe).interfaceId] = true;\\n        ds.supportedInterfaces[type(IERC173).interfaceId] = true;\\n    }\\n\\n    // Find facet for function that is called and execute the\\n    // function if a facet is found and return any value.\\n    fallback() external payable {\\n        LibDiamond.DiamondStorage storage ds;\\n        bytes32 position = LibDiamond.DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n        address facet = ds.selectorToFacetAndPosition[msg.sig].facetAddress;\\n        require(facet != address(0), \\\"Diamond: Function does not exist\\\");\\n        assembly {\\n            calldatacopy(0, 0, calldatasize())\\n            let result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\\n            returndatacopy(0, 0, returndatasize())\\n            switch result\\n                case 0 {\\n                    revert(0, returndatasize())\\n                }\\n                default {\\n                    return(0, returndatasize())\\n                }\\n        }\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x968d41f1fbb08e012a0617f3a8b865c06f60d783e043b675280741b791216202\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xfb3c1af58cd19e1e49f065e33c7c68045ce451c3e16920614979624c44faf892\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\n// A loupe is a small magnifying glass used to look at diamonds.\\n// These functions look at diamonds\\ninterface IDiamondLoupe {\\n    /// These functions are expected to be called frequently\\n    /// by tools.\\n\\n    struct Facet {\\n        address facetAddress;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\n    /// @return facets_ Facet\\n    function facets() external view returns (Facet[] memory facets_);\\n\\n    /// @notice Gets all the function selectors supported by a specific facet.\\n    /// @param _facet The facet address.\\n    /// @return facetFunctionSelectors_\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\n\\n    /// @notice Get all the facet addresses used by a diamond.\\n    /// @return facetAddresses_\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\n\\n    /// @notice Gets the facet that supports the given selector.\\n    /// @dev If facet is not found return address(0).\\n    /// @param _functionSelector The function selector.\\n    /// @return facetAddress_ The facet address.\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\n}\\n\",\"keccak256\":\"0xf4bc76153335588e7cb5fe1c9701857fd2ae0340ad94976adbf1c49054f82dfe\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\ninterface IERC165 {\\n    /// @notice Query if a contract implements an interface\\n    /// @param interfaceId The interface identifier, as specified in ERC-165\\n    /// @dev Interface identification is specified in ERC-165. This function\\n    ///  uses less than 30,000 gas.\\n    /// @return `true` if the contract implements `interfaceID` and\\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xe3ccc62939f8e880bdd4d5a34b05ccb9576810b8e999df6d16124e51019a0603\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0xa4023156092d7cb99c69e21bc95b910e13c54e582d6814601579bc2fb594ecf8\",\"license\":\"MIT\"},\"solc_0.7/diamond/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint16 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint16 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // uint16 selectorCount = uint16(diamondStorage().selectors.length);\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(oldFacetAddress, selector);\\n            // add function\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function removeFunction(address _facetAddress, bytes4 _selector) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint16(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = uint16(facetAddressPosition);\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n}\\n\",\"keccak256\":\"0x4eac03abb9864ad822b50481746c975a8e3e3278e179032cfc1b4b9c8e2320bc\",\"license\":\"MIT\"}},\"version\":1}",
              "bytecode": "0x608060405260405162002d4538038062002d45833981016040819052620000269162000db2565b604080516000808252602082019092526200004e918491620000f560201b620000db1760201c565b620000688160000151620002b560201b6200027d1760201c565b60006200007f6200031760201b620003021760201c565b6301ffc9a760e01b600090815260039091016020526040808220805460ff1990811660019081179092556307e4c70760e21b845282842080548216831790556348e2b09360e01b845282842080548216831790556307f5828d60e41b845291909220805490911690911790555062001442915050565b60005b8351811015620002665760008482815181106200011157fe5b6020026020010151602001519050600060028111156200012d57fe5b8160028111156200013a57fe5b14156200018957620001838583815181106200015257fe5b6020026020010151600001518684815181106200016b57fe5b6020026020010151604001516200033b60201b60201c565b6200025c565b60018160028111156200019857fe5b1415620001e15762000183858381518110620001b057fe5b602002602001015160000151868481518110620001c957fe5b6020026020010151604001516200054e60201b60201c565b6002816002811115620001f057fe5b14156200023957620001838583815181106200020857fe5b6020026020010151600001518684815181106200022157fe5b6020026020010151604001516200077860201b60201c565b60405162461bcd60e51b815260040162000253906200117c565b60405180910390fd5b50600101620000f8565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516200029c9392919062000f25565b60405180910390a1620002b082826200083f565b505050565b6000620002c162000317565b6004810180546001600160a01b038581166001600160a01b031983168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b60008151116200035f5760405162461bcd60e51b81526004016200025390620010d4565b60006200036b62000317565b90506001600160a01b038316620003965760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200043c57620003e08460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200045857fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620004ab5760405162461bcd60e51b81526004016200025390620012ba565b506001600160a01b0386166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790556001600160e01b0319909516835287905292902080546001600160a01b03191690911761ffff60a01b1916600160a01b61ffff86160217905591820191016200043f565b5050505050565b6000815111620005725760405162461bcd60e51b81526004016200025390620010d4565b60006200057e62000317565b90506001600160a01b038316620005a95760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200064f57620005f38460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200066b57fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03908116908716811415620006c45760405162461bcd60e51b8152600401620002539062001317565b620006d08183620009a0565b506001600160e01b03198116600081815260208681526040808320805461ffff60a01b1916600160a01b61ffff8a16021781556001600160a01b038b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281546001600160a01b0319169092179055918201910162000652565b60008151116200079c5760405162461bcd60e51b81526004016200025390620010d4565b6000620007a862000317565b90506001600160a01b03831615620007d45760405162461bcd60e51b8152600401620002539062001374565b60005b825181101562000839576000838281518110620007f057fe5b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166200082e8183620009a0565b5050600101620007d7565b50505050565b6001600160a01b0382166200087657805115620008705760405162461bcd60e51b8152600401620002539062001031565b62000978565b60008151116200089a5760405162461bcd60e51b815260040162000253906200120f565b6001600160a01b0382163014620008d057620008d08260405180606001604052806028815260200162002cf9602891396200097c565b600080836001600160a01b031683604051620008ed919062000f07565b600060405180830381855af49150503d80600081146200092a576040519150601f19603f3d011682016040523d82523d6000602084013e6200092f565b606091505b50915091508162000839578051156200095e578060405162461bcd60e51b815260040162000253919062001015565b60405162461bcd60e51b815260040162000253906200108e565b5050565b813b8181620008395760405162461bcd60e51b815260040162000253919062001015565b6000620009ac62000317565b90506001600160a01b038316620009d75760405162461bcd60e51b815260040162000253906200111f565b6001600160a01b03831630141562000a035760405162461bcd60e51b815260040162000253906200126c565b6001600160e01b03198216600090815260208281526040808320546001600160a01b03871684526001850190925290912054600160a01b90910461ffff16906000190180821462000b27576001600160a01b0385166000908152600184016020526040812080548390811062000a7557fe5b600091825260208083206008830401546001600160a01b038a168452600188019091526040909220805460079092166004026101000a90920460e01b92508291908590811062000ac157fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b031992909216825284905260409020805461ffff60a01b1916600160a01b61ffff8516021790555b6001600160a01b0385166000908152600184016020526040902080548062000b4b57fe5b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319861682528490526040902080546001600160b01b031916905580620005475760028301546001600160a01b03861660009081526001858101602052604090912001546000199091019061ffff1680821462000c6357600085600201838154811062000bec57fe5b6000918252602090912001546002870180546001600160a01b03909216925082918490811062000c1857fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018781019092526040902001805461ffff191661ffff83161790555b8460020180548062000c7157fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03891682526001878101909152604090912001805461ffff1916905550505050505050565b80516001600160a01b038116811462000cdb57600080fd5b919050565b600082601f83011262000cf1578081fd5b8151602062000d0a62000d0483620013f5565b620013d1565b828152818101908583018385028701840188101562000d27578586fd5b855b8581101562000d5d5781516001600160e01b03198116811462000d4a578788fd5b8452928401929084019060010162000d29565b5090979650505050505050565b60006020828403121562000d7c578081fd5b604051602081016001600160401b038111828210171562000d9957fe5b60405290508062000daa8362000cc3565b905292915050565b6000806040838503121562000dc5578182fd5b82516001600160401b038082111562000ddc578384fd5b818501915085601f83011262000df0578384fd5b8151602062000e0362000d0483620013f5565b82815281810190858301885b8581101562000eaa57815188016060818e03601f1901121562000e30578a8bfd5b604051606081018181108a8211171562000e4657fe5b60405262000e5682880162000cc3565b815260408201516003811062000e6a578c8dfd5b8188015260608201518981111562000e80578c8dfd5b62000e908f898386010162000ce0565b604083015250855250928401929084019060010162000e0f565b5050809750505062000ebf8882890162000d6a565b9450505050509250929050565b6001600160a01b03169052565b6000815180845262000ef381602086016020860162001413565b601f01601f19169290920160200192915050565b6000825162000f1b81846020870162001413565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101562000fe257898303607f19018652815180516001600160a01b0316845284810151898501906003811062000f7f57fe5b858701526040918201519185018a9052815190819052908501908a90898601905b8083101562000fcc5783516001600160e01b031916825292870192600192909201919087019062000fa0565b5097860197945050509083019060010162000f4b565b505062000ff28289018b62000ecc565b878103604089015262001006818a62000ed9565b9b9a5050505050505050505050565b6000602082526200102a602083018462000ed9565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656040820152651d995c9d195960d21b606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756040820152663a20b1ba34b7b760c91b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201526d3a30b1363290333ab731ba34b7b760911b606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b6040518181016001600160401b0381118282101715620013ed57fe5b604052919050565b60006001600160401b038211156200140957fe5b5060209081020190565b60005b838110156200143057818101518382015260200162001416565b83811115620008395750506000910152565b6118a780620014526000396000f3fe60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c634300070600334c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465",
              "deployedBytecode": "0x60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c63430007060033",
              "facets": [
                {
                  "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
                  "functionSelectors": [
                    "0x00fdd58e",
                    "0x4e1273f4",
                    "0x6787d449",
                    "0x0b885ac3",
                    "0xe985e9c5",
                    "0x572b6c05",
                    "0x481c6a75",
                    "0xdcf2cad4",
                    "0x05322b74",
                    "0x1b023947",
                    "0xbc01188e",
                    "0x2eb2c2d6",
                    "0xf242432a",
                    "0xa22cb465",
                    "0x01ffc9a7",
                    "0x18160ddd",
                    "0x0e89341c"
                  ]
                }
              ],
              "diamondCut": [
                {
                  "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
                  "functionSelectors": [
                    "0x00fdd58e",
                    "0x4e1273f4",
                    "0x6787d449",
                    "0x0b885ac3",
                    "0xe985e9c5",
                    "0x572b6c05",
                    "0x481c6a75",
                    "0xdcf2cad4",
                    "0x05322b74",
                    "0x1b023947",
                    "0xbc01188e",
                    "0x2eb2c2d6",
                    "0xf242432a",
                    "0xa22cb465",
                    "0x18160ddd",
                    "0x0e89341c"
                  ],
                  "action": 0
                }
              ],
              "execute": {
                "methodName": "initialize",
                "args": [
                  "ipfs://",
                  "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
                  "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
                  "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
                  "0xD52b58d3a0B9d19FBABC9a9Cf98ffCDcC9a8161E"
                ]
              },
              "devdoc": {
                "kind": "dev",
                "methods": {},
                "version": 1
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              },
              "storageLayout": {
                "storage": [],
                "types": null
              }
            }
          ]
        },
        {
          "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Diamond.DiamondArgs",
                  "name": "_args",
                  "type": "tuple"
                }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_init",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                }
              ],
              "name": "DiamondCut",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamondCut.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondCut.FacetCut[]",
                  "name": "_diamondCut",
                  "type": "tuple[]"
                },
                {
                  "internalType": "address",
                  "name": "_init",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                }
              ],
              "name": "diamondCut",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_functionSelector",
                  "type": "bytes4"
                }
              ],
              "name": "facetAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "facetAddress_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "facetAddresses",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "facetAddresses_",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_facet",
                  "type": "address"
                }
              ],
              "name": "facetFunctionSelectors",
              "outputs": [
                {
                  "internalType": "bytes4[]",
                  "name": "facetFunctionSelectors_",
                  "type": "bytes4[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "facets",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ],
                  "internalType": "struct IDiamondLoupe.Facet[]",
                  "name": "facets_",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner_",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "DropCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Minted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "name": "TransferBatch",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "TransferSingle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "URI",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "accountsByToken",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                }
              ],
              "name": "balanceOfBatch",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_timeStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_timeEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_priceStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_priceEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_stepDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amountCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_shareCyber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "createDrop",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_minter",
                  "type": "address"
                }
              ],
              "name": "dropMintCounter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getDrop",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "timeStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "priceStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "priceEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "stepDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shareCyber",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minted",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getMintPriceForToken",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "mintPrice",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_timeSpent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_priceStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_priceEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_stepDuration",
                  "type": "uint256"
                }
              ],
              "name": "getPriceFor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "_manager",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_trustedForwarder",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_opensea",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_oncyber",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                }
              ],
              "name": "isTrustedForwarder",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "manager",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_minter",
                  "type": "address"
                }
              ],
              "name": "minterNonce",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "oncyber",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeBatchTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "status",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "tokensByAccount",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "totalHolders",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_tokenId",
                  "type": "uint256"
                }
              ],
              "name": "uri",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "transactionHash": "0x47aadb4d27beb75ca46cb3c874ce8dee84399e30eb73f5ef2c9e5ed2fd3c343b",
          "receipt": {
            "to": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
            "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
            "contractAddress": null,
            "transactionIndex": 0,
            "gasUsed": "411787",
            "logsBloom": "0x
            "blockHash": "0x59c022bf4290a21565701b1387431a1dcdc6a18440d981eeee1a58f2e8115b9e",
            "transactionHash": "0x47aadb4d27beb75ca46cb3c874ce8dee84399e30eb73f5ef2c9e5ed2fd3c343b",
            "logs": [
              {
                "transactionIndex": 0,
                "blockNumber": 9823504,
                "transactionHash": "0x47aadb4d27beb75ca46cb3c874ce8dee84399e30eb73f5ef2c9e5ed2fd3c343b",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b330000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000005f108e3431b9ee9e3308d7b2b806ca4ecdf7d8fa0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000176dcfd8410000000000000000000000000000000000000000000000000000000000fdd58e000000000000000000000000000000000000000000000000000000004e1273f400000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000005c5ed16d00000000000000000000000000000000000000000000000000000000d61b0c82000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000db7fd408000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df0000000000000000000000000000000000000000000000000000000018160ddd00000000000000000000000000000000000000000000000000000000bd85b039000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 0,
                "blockHash": "0x59c022bf4290a21565701b1387431a1dcdc6a18440d981eeee1a58f2e8115b9e"
              }
            ],
            "events": [
              {
                "transactionIndex": 0,
                "blockNumber": 9823504,
                "transactionHash": "0x47aadb4d27beb75ca46cb3c874ce8dee84399e30eb73f5ef2c9e5ed2fd3c343b",
                "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "topics": [
                  "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                ],
                "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b330000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000005f108e3431b9ee9e3308d7b2b806ca4ecdf7d8fa0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000176dcfd8410000000000000000000000000000000000000000000000000000000000fdd58e000000000000000000000000000000000000000000000000000000004e1273f400000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000005c5ed16d00000000000000000000000000000000000000000000000000000000d61b0c82000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000db7fd408000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df0000000000000000000000000000000000000000000000000000000018160ddd00000000000000000000000000000000000000000000000000000000bd85b039000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "logIndex": 0,
                "blockHash": "0x59c022bf4290a21565701b1387431a1dcdc6a18440d981eeee1a58f2e8115b9e",
                "args": [
                  [
                    [
                      "0x5f108e3431B9ee9E3308D7b2B806CA4eCDF7d8fA",
                      1,
                      [
                        "0x6dcfd841",
                        "0x00fdd58e",
                        "0x4e1273f4",
                        "0x081cdf12",
                        "0xb3a721d1",
                        "0x6787d449",
                        "0x5c5ed16d",
                        "0xd61b0c82",
                        "0x0b885ac3",
                        "0xe985e9c5",
                        "0x572b6c05",
                        "0x481c6a75",
                        "0xdb7fd408",
                        "0x1b023947",
                        "0xbc01188e",
                        "0x2eb2c2d6",
                        "0xf242432a",
                        "0xa22cb465",
                        "0x85bff2e7",
                        "0x13ba55df",
                        "0x18160ddd",
                        "0xbd85b039",
                        "0x0e89341c"
                      ]
                    ]
                  ],
                  "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                  "0x0b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f00000000000000000000000000000000000000000000000000"
                ],
                "event": "DiamondCut",
                "eventSignature": "DiamondCut((address,uint8,bytes4[])[],address,bytes)"
              }
            ],
            "blockNumber": 9823504,
            "cumulativeGasUsed": "411787",
            "status": 1,
            "byzantium": true
          },
          "facets": [
            [
              "0x35D80A53F7be635f75152221d4D71CD4DCB07e5C",
              [
                "0x1f931c1c"
              ]
            ],
            [
              "0xC1bbdF9f8c0b6aE0B4d35E9A778080B691A72a3E",
              [
                "0xadfca15e",
                "0x7a0ed627",
                "0xcdffacc6",
                "0x52ef6b2c",
                "0x01ffc9a7"
              ]
            ],
            [
              "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
              [
                "0xf2fde38b",
                "0x8da5cb5b"
              ]
            ],
            {
              "facetAddress": "0x5f108e3431B9ee9E3308D7b2B806CA4eCDF7d8fA",
              "functionSelectors": [
                "0x6dcfd841",
                "0x00fdd58e",
                "0x4e1273f4",
                "0x081cdf12",
                "0xb3a721d1",
                "0x6787d449",
                "0x5c5ed16d",
                "0xd61b0c82",
                "0x0b885ac3",
                "0xe985e9c5",
                "0x572b6c05",
                "0x481c6a75",
                "0xdb7fd408",
                "0x1b023947",
                "0xbc01188e",
                "0x2eb2c2d6",
                "0xf242432a",
                "0xa22cb465",
                "0x01ffc9a7",
                "0x85bff2e7",
                "0x13ba55df",
                "0x18160ddd",
                "0xbd85b039",
                "0x0e89341c"
              ]
            }
          ],
          "diamondCut": [],
          "execute": {
            "methodName": "initialize",
            "args": [
              "ipfs://",
              "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
              "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
              "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
              "0xD52b58d3a0B9d19FBABC9a9Cf98ffCDcC9a8161E"
            ]
          },
          "history": [
            {
              "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
              "abi": [
                {
                  "inputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "enum IDiamondCut.FacetCutAction",
                          "name": "action",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "internalType": "struct IDiamondCut.FacetCut[]",
                      "name": "_diamondCut",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "owner",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct Diamond.DiamondArgs",
                      "name": "_args",
                      "type": "tuple"
                    }
                  ],
                  "stateMutability": "payable",
                  "type": "constructor"
                },
                {
                  "stateMutability": "payable",
                  "type": "fallback"
                },
                {
                  "stateMutability": "payable",
                  "type": "receive"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "enum IDiamondCut.FacetCutAction",
                          "name": "action",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "indexed": false,
                      "internalType": "struct IDiamondCut.FacetCut[]",
                      "name": "_diamondCut",
                      "type": "tuple[]"
                    },
                    {
                      "indexed": false,
                      "internalType": "address",
                      "name": "_init",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "bytes",
                      "name": "_calldata",
                      "type": "bytes"
                    }
                  ],
                  "name": "DiamondCut",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "enum IDiamondCut.FacetCutAction",
                          "name": "action",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "internalType": "struct IDiamondCut.FacetCut[]",
                      "name": "_diamondCut",
                      "type": "tuple[]"
                    },
                    {
                      "internalType": "address",
                      "name": "_init",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "_calldata",
                      "type": "bytes"
                    }
                  ],
                  "name": "diamondCut",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "bytes4",
                      "name": "_functionSelector",
                      "type": "bytes4"
                    }
                  ],
                  "name": "facetAddress",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "facetAddress_",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "facetAddresses",
                  "outputs": [
                    {
                      "internalType": "address[]",
                      "name": "facetAddresses_",
                      "type": "address[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "_facet",
                      "type": "address"
                    }
                  ],
                  "name": "facetFunctionSelectors",
                  "outputs": [
                    {
                      "internalType": "bytes4[]",
                      "name": "facetFunctionSelectors_",
                      "type": "bytes4[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "facets",
                  "outputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "internalType": "struct IDiamondLoupe.Facet[]",
                      "name": "facets_",
                      "type": "tuple[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "bytes4",
                      "name": "_interfaceId",
                      "type": "bytes4"
                    }
                  ],
                  "name": "supportsInterface",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "previousOwner",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "newOwner",
                      "type": "address"
                    }
                  ],
                  "name": "OwnershipTransferred",
                  "type": "event"
                },
                {
                  "inputs": [],
                  "name": "owner",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "owner_",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "_newOwner",
                      "type": "address"
                    }
                  ],
                  "name": "transferOwnership",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "bool",
                      "name": "approved",
                      "type": "bool"
                    }
                  ],
                  "name": "ApprovalForAll",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "DestinationMinted",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "name": "Minted",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256[]",
                      "name": "values",
                      "type": "uint256[]"
                    }
                  ],
                  "name": "TransferBatch",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ],
                  "name": "TransferSingle",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "string",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "URI",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "balanceOf",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address[]",
                      "name": "accounts",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    }
                  ],
                  "name": "balanceOfBatch",
                  "outputs": [
                    {
                      "internalType": "uint256[]",
                      "name": "",
                      "type": "uint256[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "getDrop",
                  "outputs": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "timeStart",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "timeEnd",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shareCyber",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amountCap",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "minted",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address payable",
                          "name": "creator",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct LibUtilityStorage.Drop",
                      "name": "",
                      "type": "tuple"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "string",
                      "name": "_uri",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "_manager",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_trustedForwarder",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_opensea",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_oncyber",
                      "type": "address"
                    }
                  ],
                  "name": "initialize",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    }
                  ],
                  "name": "isApprovedForAll",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "forwarder",
                      "type": "address"
                    }
                  ],
                  "name": "isTrustedForwarder",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "manager",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "string",
                      "name": "_uri",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_timeStart",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_timeEnd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_amountCap",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_shareCyber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "_signature",
                      "type": "bytes"
                    }
                  ],
                  "name": "mint",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "mintEdition",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "payable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "_minter",
                      "type": "address"
                    }
                  ],
                  "name": "minterNonce",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "oncyber",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "name": "safeBatchTransferFrom",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "name": "safeTransferFrom",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "status",
                      "type": "bool"
                    }
                  ],
                  "name": "setApprovalForAll",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "totalSupply",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "uri",
                  "outputs": [
                    {
                      "internalType": "string",
                      "name": "",
                      "type": "string"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                }
              ],
              "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
              "receipt": {
                "to": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
                "contractAddress": null,
                "transactionIndex": 84,
                "gasUsed": "2591193",
                "logsBloom": "0x
                "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
                "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                "logs": [
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                    ],
                    "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                    "logIndex": 97,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                      "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
                    ],
                    "data": "0x",
                    "logIndex": 98,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                    "topics": [
                      "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
                    ],
                    "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
                    "logIndex": 99,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                    ],
                    "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                    "logIndex": 100,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                      "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
                      "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
                    ],
                    "data": "0x",
                    "logIndex": 101,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  }
                ],
                "events": [
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                    ],
                    "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                    "logIndex": 97,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                      "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
                    ],
                    "data": "0x",
                    "logIndex": 98,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                    "topics": [
                      "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
                    ],
                    "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
                    "logIndex": 99,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
                    "args": [
                      [
                        {
                          "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                          "action": 0,
                          "functionSelectors": [
                            "0x1f931c1c"
                          ]
                        },
                        {
                          "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                          "action": 0,
                          "functionSelectors": [
                            "0xcdffacc6",
                            "0x52ef6b2c",
                            "0xadfca15e",
                            "0x7a0ed627",
                            "0x01ffc9a7"
                          ]
                        },
                        {
                          "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                          "action": 0,
                          "functionSelectors": [
                            "0xf2fde38b",
                            "0x8da5cb5b"
                          ]
                        }
                      ],
                      {
                        "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
                      }
                    ],
                    "event": "DiamondCreated",
                    "eventSignature": "DiamondCreated(address)"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                    ],
                    "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                    "logIndex": 100,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  },
                  {
                    "transactionIndex": 84,
                    "blockNumber": 9284533,
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                      "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
                      "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
                    ],
                    "data": "0x",
                    "logIndex": 101,
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                  }
                ],
                "blockNumber": 9284533,
                "cumulativeGasUsed": "20695988",
                "status": 1,
                "byzantium": true
              },
              "args": [
                [
                  {
                    "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                    "action": 0,
                    "functionSelectors": [
                      "0x1f931c1c"
                    ]
                  },
                  {
                    "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                    "action": 0,
                    "functionSelectors": [
                      "0xcdffacc6",
                      "0x52ef6b2c",
                      "0xadfca15e",
                      "0x7a0ed627",
                      "0x01ffc9a7"
                    ]
                  },
                  {
                    "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                    "action": 0,
                    "functionSelectors": [
                      "0xf2fde38b",
                      "0x8da5cb5b"
                    ]
                  }
                ],
                {
                  "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
                }
              ],
              "solcInputHash": "1d060b65b8264d57d416f20cb1fe798a",
              "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct Diamond.DiamondArgs\",\"name\":\"_args\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.7/diamond/Diamond.sol\":\"Diamond\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.7/diamond/Diamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n* \\n* Implementation of a diamond.\\n/******************************************************************************/\\n\\nimport \\\"./libraries/LibDiamond.sol\\\";\\nimport \\\"./interfaces/IDiamondLoupe.sol\\\";\\nimport \\\"./interfaces/IDiamondCut.sol\\\";\\nimport \\\"./interfaces/IERC173.sol\\\";\\nimport \\\"./interfaces/IERC165.sol\\\";\\n\\ncontract Diamond {\\n    // more arguments are added to this struct\\n    // this avoids stack too deep errors\\n    struct DiamondArgs {\\n        address owner;\\n    }\\n\\n    constructor(IDiamondCut.FacetCut[] memory _diamondCut, DiamondArgs memory _args) payable {\\n        LibDiamond.diamondCut(_diamondCut, address(0), new bytes(0));\\n        LibDiamond.setContractOwner(_args.owner);\\n\\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\\n\\n        // adding ERC165 data\\n        ds.supportedInterfaces[type(IERC165).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondCut).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondLoupe).interfaceId] = true;\\n        ds.supportedInterfaces[type(IERC173).interfaceId] = true;\\n    }\\n\\n    // Find facet for function that is called and execute the\\n    // function if a facet is found and return any value.\\n    fallback() external payable {\\n        LibDiamond.DiamondStorage storage ds;\\n        bytes32 position = LibDiamond.DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n        address facet = ds.selectorToFacetAndPosition[msg.sig].facetAddress;\\n        require(facet != address(0), \\\"Diamond: Function does not exist\\\");\\n        assembly {\\n            calldatacopy(0, 0, calldatasize())\\n            let result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\\n            returndatacopy(0, 0, returndatasize())\\n            switch result\\n                case 0 {\\n                    revert(0, returndatasize())\\n                }\\n                default {\\n                    return(0, returndatasize())\\n                }\\n        }\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x968d41f1fbb08e012a0617f3a8b865c06f60d783e043b675280741b791216202\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xfb3c1af58cd19e1e49f065e33c7c68045ce451c3e16920614979624c44faf892\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\n// A loupe is a small magnifying glass used to look at diamonds.\\n// These functions look at diamonds\\ninterface IDiamondLoupe {\\n    /// These functions are expected to be called frequently\\n    /// by tools.\\n\\n    struct Facet {\\n        address facetAddress;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\n    /// @return facets_ Facet\\n    function facets() external view returns (Facet[] memory facets_);\\n\\n    /// @notice Gets all the function selectors supported by a specific facet.\\n    /// @param _facet The facet address.\\n    /// @return facetFunctionSelectors_\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\n\\n    /// @notice Get all the facet addresses used by a diamond.\\n    /// @return facetAddresses_\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\n\\n    /// @notice Gets the facet that supports the given selector.\\n    /// @dev If facet is not found return address(0).\\n    /// @param _functionSelector The function selector.\\n    /// @return facetAddress_ The facet address.\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\n}\\n\",\"keccak256\":\"0xf4bc76153335588e7cb5fe1c9701857fd2ae0340ad94976adbf1c49054f82dfe\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\ninterface IERC165 {\\n    /// @notice Query if a contract implements an interface\\n    /// @param interfaceId The interface identifier, as specified in ERC-165\\n    /// @dev Interface identification is specified in ERC-165. This function\\n    ///  uses less than 30,000 gas.\\n    /// @return `true` if the contract implements `interfaceID` and\\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xe3ccc62939f8e880bdd4d5a34b05ccb9576810b8e999df6d16124e51019a0603\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0xa4023156092d7cb99c69e21bc95b910e13c54e582d6814601579bc2fb594ecf8\",\"license\":\"MIT\"},\"solc_0.7/diamond/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint16 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint16 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // uint16 selectorCount = uint16(diamondStorage().selectors.length);\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(oldFacetAddress, selector);\\n            // add function\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function removeFunction(address _facetAddress, bytes4 _selector) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint16(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = uint16(facetAddressPosition);\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n}\\n\",\"keccak256\":\"0x4eac03abb9864ad822b50481746c975a8e3e3278e179032cfc1b4b9c8e2320bc\",\"license\":\"MIT\"}},\"version\":1}",
              "bytecode": "0x608060405260405162002d4538038062002d45833981016040819052620000269162000db2565b604080516000808252602082019092526200004e918491620000f560201b620000db1760201c565b620000688160000151620002b560201b6200027d1760201c565b60006200007f6200031760201b620003021760201c565b6301ffc9a760e01b600090815260039091016020526040808220805460ff1990811660019081179092556307e4c70760e21b845282842080548216831790556348e2b09360e01b845282842080548216831790556307f5828d60e41b845291909220805490911690911790555062001442915050565b60005b8351811015620002665760008482815181106200011157fe5b6020026020010151602001519050600060028111156200012d57fe5b8160028111156200013a57fe5b14156200018957620001838583815181106200015257fe5b6020026020010151600001518684815181106200016b57fe5b6020026020010151604001516200033b60201b60201c565b6200025c565b60018160028111156200019857fe5b1415620001e15762000183858381518110620001b057fe5b602002602001015160000151868481518110620001c957fe5b6020026020010151604001516200054e60201b60201c565b6002816002811115620001f057fe5b14156200023957620001838583815181106200020857fe5b6020026020010151600001518684815181106200022157fe5b6020026020010151604001516200077860201b60201c565b60405162461bcd60e51b815260040162000253906200117c565b60405180910390fd5b50600101620000f8565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516200029c9392919062000f25565b60405180910390a1620002b082826200083f565b505050565b6000620002c162000317565b6004810180546001600160a01b038581166001600160a01b031983168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b60008151116200035f5760405162461bcd60e51b81526004016200025390620010d4565b60006200036b62000317565b90506001600160a01b038316620003965760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200043c57620003e08460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200045857fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620004ab5760405162461bcd60e51b81526004016200025390620012ba565b506001600160a01b0386166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790556001600160e01b0319909516835287905292902080546001600160a01b03191690911761ffff60a01b1916600160a01b61ffff86160217905591820191016200043f565b5050505050565b6000815111620005725760405162461bcd60e51b81526004016200025390620010d4565b60006200057e62000317565b90506001600160a01b038316620005a95760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200064f57620005f38460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200066b57fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03908116908716811415620006c45760405162461bcd60e51b8152600401620002539062001317565b620006d08183620009a0565b506001600160e01b03198116600081815260208681526040808320805461ffff60a01b1916600160a01b61ffff8a16021781556001600160a01b038b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281546001600160a01b0319169092179055918201910162000652565b60008151116200079c5760405162461bcd60e51b81526004016200025390620010d4565b6000620007a862000317565b90506001600160a01b03831615620007d45760405162461bcd60e51b8152600401620002539062001374565b60005b825181101562000839576000838281518110620007f057fe5b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166200082e8183620009a0565b5050600101620007d7565b50505050565b6001600160a01b0382166200087657805115620008705760405162461bcd60e51b8152600401620002539062001031565b62000978565b60008151116200089a5760405162461bcd60e51b815260040162000253906200120f565b6001600160a01b0382163014620008d057620008d08260405180606001604052806028815260200162002cf9602891396200097c565b600080836001600160a01b031683604051620008ed919062000f07565b600060405180830381855af49150503d80600081146200092a576040519150601f19603f3d011682016040523d82523d6000602084013e6200092f565b606091505b50915091508162000839578051156200095e578060405162461bcd60e51b815260040162000253919062001015565b60405162461bcd60e51b815260040162000253906200108e565b5050565b813b8181620008395760405162461bcd60e51b815260040162000253919062001015565b6000620009ac62000317565b90506001600160a01b038316620009d75760405162461bcd60e51b815260040162000253906200111f565b6001600160a01b03831630141562000a035760405162461bcd60e51b815260040162000253906200126c565b6001600160e01b03198216600090815260208281526040808320546001600160a01b03871684526001850190925290912054600160a01b90910461ffff16906000190180821462000b27576001600160a01b0385166000908152600184016020526040812080548390811062000a7557fe5b600091825260208083206008830401546001600160a01b038a168452600188019091526040909220805460079092166004026101000a90920460e01b92508291908590811062000ac157fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b031992909216825284905260409020805461ffff60a01b1916600160a01b61ffff8516021790555b6001600160a01b0385166000908152600184016020526040902080548062000b4b57fe5b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319861682528490526040902080546001600160b01b031916905580620005475760028301546001600160a01b03861660009081526001858101602052604090912001546000199091019061ffff1680821462000c6357600085600201838154811062000bec57fe5b6000918252602090912001546002870180546001600160a01b03909216925082918490811062000c1857fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018781019092526040902001805461ffff191661ffff83161790555b8460020180548062000c7157fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03891682526001878101909152604090912001805461ffff1916905550505050505050565b80516001600160a01b038116811462000cdb57600080fd5b919050565b600082601f83011262000cf1578081fd5b8151602062000d0a62000d0483620013f5565b620013d1565b828152818101908583018385028701840188101562000d27578586fd5b855b8581101562000d5d5781516001600160e01b03198116811462000d4a578788fd5b8452928401929084019060010162000d29565b5090979650505050505050565b60006020828403121562000d7c578081fd5b604051602081016001600160401b038111828210171562000d9957fe5b60405290508062000daa8362000cc3565b905292915050565b6000806040838503121562000dc5578182fd5b82516001600160401b038082111562000ddc578384fd5b818501915085601f83011262000df0578384fd5b8151602062000e0362000d0483620013f5565b82815281810190858301885b8581101562000eaa57815188016060818e03601f1901121562000e30578a8bfd5b604051606081018181108a8211171562000e4657fe5b60405262000e5682880162000cc3565b815260408201516003811062000e6a578c8dfd5b8188015260608201518981111562000e80578c8dfd5b62000e908f898386010162000ce0565b604083015250855250928401929084019060010162000e0f565b5050809750505062000ebf8882890162000d6a565b9450505050509250929050565b6001600160a01b03169052565b6000815180845262000ef381602086016020860162001413565b601f01601f19169290920160200192915050565b6000825162000f1b81846020870162001413565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101562000fe257898303607f19018652815180516001600160a01b0316845284810151898501906003811062000f7f57fe5b858701526040918201519185018a9052815190819052908501908a90898601905b8083101562000fcc5783516001600160e01b031916825292870192600192909201919087019062000fa0565b5097860197945050509083019060010162000f4b565b505062000ff28289018b62000ecc565b878103604089015262001006818a62000ed9565b9b9a5050505050505050505050565b6000602082526200102a602083018462000ed9565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656040820152651d995c9d195960d21b606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756040820152663a20b1ba34b7b760c91b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201526d3a30b1363290333ab731ba34b7b760911b606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b6040518181016001600160401b0381118282101715620013ed57fe5b604052919050565b60006001600160401b038211156200140957fe5b5060209081020190565b60005b838110156200143057818101518382015260200162001416565b83811115620008395750506000910152565b6118a780620014526000396000f3fe60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c634300070600334c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465",
              "deployedBytecode": "0x60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c63430007060033",
              "facets": [
                {
                  "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
                  "functionSelectors": [
                    "0x00fdd58e",
                    "0x4e1273f4",
                    "0x6787d449",
                    "0x0b885ac3",
                    "0xe985e9c5",
                    "0x572b6c05",
                    "0x481c6a75",
                    "0xdcf2cad4",
                    "0x05322b74",
                    "0x1b023947",
                    "0xbc01188e",
                    "0x2eb2c2d6",
                    "0xf242432a",
                    "0xa22cb465",
                    "0x01ffc9a7",
                    "0x18160ddd",
                    "0x0e89341c"
                  ]
                }
              ],
              "diamondCut": [
                {
                  "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
                  "functionSelectors": [
                    "0x00fdd58e",
                    "0x4e1273f4",
                    "0x6787d449",
                    "0x0b885ac3",
                    "0xe985e9c5",
                    "0x572b6c05",
                    "0x481c6a75",
                    "0xdcf2cad4",
                    "0x05322b74",
                    "0x1b023947",
                    "0xbc01188e",
                    "0x2eb2c2d6",
                    "0xf242432a",
                    "0xa22cb465",
                    "0x18160ddd",
                    "0x0e89341c"
                  ],
                  "action": 0
                }
              ],
              "execute": {
                "methodName": "initialize",
                "args": [
                  "ipfs://",
                  "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
                  "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
                  "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
                  "0xD52b58d3a0B9d19FBABC9a9Cf98ffCDcC9a8161E"
                ]
              },
              "devdoc": {
                "kind": "dev",
                "methods": {},
                "version": 1
              },
              "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
              },
              "storageLayout": {
                "storage": [],
                "types": null
              }
            },
            {
              "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
              "abi": [
                {
                  "inputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "enum IDiamondCut.FacetCutAction",
                          "name": "action",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "internalType": "struct IDiamondCut.FacetCut[]",
                      "name": "_diamondCut",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "owner",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct Diamond.DiamondArgs",
                      "name": "_args",
                      "type": "tuple"
                    }
                  ],
                  "stateMutability": "payable",
                  "type": "constructor"
                },
                {
                  "stateMutability": "payable",
                  "type": "fallback"
                },
                {
                  "stateMutability": "payable",
                  "type": "receive"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "enum IDiamondCut.FacetCutAction",
                          "name": "action",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "indexed": false,
                      "internalType": "struct IDiamondCut.FacetCut[]",
                      "name": "_diamondCut",
                      "type": "tuple[]"
                    },
                    {
                      "indexed": false,
                      "internalType": "address",
                      "name": "_init",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "bytes",
                      "name": "_calldata",
                      "type": "bytes"
                    }
                  ],
                  "name": "DiamondCut",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "enum IDiamondCut.FacetCutAction",
                          "name": "action",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "internalType": "struct IDiamondCut.FacetCut[]",
                      "name": "_diamondCut",
                      "type": "tuple[]"
                    },
                    {
                      "internalType": "address",
                      "name": "_init",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "_calldata",
                      "type": "bytes"
                    }
                  ],
                  "name": "diamondCut",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "bytes4",
                      "name": "_functionSelector",
                      "type": "bytes4"
                    }
                  ],
                  "name": "facetAddress",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "facetAddress_",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "facetAddresses",
                  "outputs": [
                    {
                      "internalType": "address[]",
                      "name": "facetAddresses_",
                      "type": "address[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "_facet",
                      "type": "address"
                    }
                  ],
                  "name": "facetFunctionSelectors",
                  "outputs": [
                    {
                      "internalType": "bytes4[]",
                      "name": "facetFunctionSelectors_",
                      "type": "bytes4[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "facets",
                  "outputs": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "facetAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes4[]",
                          "name": "functionSelectors",
                          "type": "bytes4[]"
                        }
                      ],
                      "internalType": "struct IDiamondLoupe.Facet[]",
                      "name": "facets_",
                      "type": "tuple[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "bytes4",
                      "name": "_interfaceId",
                      "type": "bytes4"
                    }
                  ],
                  "name": "supportsInterface",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "previousOwner",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "newOwner",
                      "type": "address"
                    }
                  ],
                  "name": "OwnershipTransferred",
                  "type": "event"
                },
                {
                  "inputs": [],
                  "name": "owner",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "owner_",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "_newOwner",
                      "type": "address"
                    }
                  ],
                  "name": "transferOwnership",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "bool",
                      "name": "approved",
                      "type": "bool"
                    }
                  ],
                  "name": "ApprovalForAll",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "DropCreated",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "name": "Minted",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256[]",
                      "name": "values",
                      "type": "uint256[]"
                    }
                  ],
                  "name": "TransferBatch",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "indexed": true,
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "indexed": false,
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ],
                  "name": "TransferSingle",
                  "type": "event"
                },
                {
                  "anonymous": false,
                  "inputs": [
                    {
                      "indexed": false,
                      "internalType": "string",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "indexed": true,
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "URI",
                  "type": "event"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "accountsByToken",
                  "outputs": [
                    {
                      "internalType": "address[]",
                      "name": "",
                      "type": "address[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "balanceOf",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address[]",
                      "name": "accounts",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    }
                  ],
                  "name": "balanceOfBatch",
                  "outputs": [
                    {
                      "internalType": "uint256[]",
                      "name": "",
                      "type": "uint256[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "string",
                      "name": "_uri",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_timeStart",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_timeEnd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_priceStart",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_priceEnd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_stepDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_amountCap",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_shareCyber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "_signature",
                      "type": "bytes"
                    }
                  ],
                  "name": "createDrop",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "_minter",
                      "type": "address"
                    }
                  ],
                  "name": "dropMintCounter",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "getDrop",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "timeStart",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timeEnd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "priceStart",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "priceEnd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "stepDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountCap",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shareCyber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "creator",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minted",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "getMintPriceForToken",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "mintPrice",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_timeSpent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_priceStart",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_priceEnd",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_stepDuration",
                      "type": "uint256"
                    }
                  ],
                  "name": "getPriceFor",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "pure",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "string",
                      "name": "_uri",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "_manager",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_trustedForwarder",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_opensea",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_oncyber",
                      "type": "address"
                    }
                  ],
                  "name": "initialize",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    }
                  ],
                  "name": "isApprovedForAll",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "forwarder",
                      "type": "address"
                    }
                  ],
                  "name": "isTrustedForwarder",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "manager",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "_signature",
                      "type": "bytes"
                    }
                  ],
                  "name": "mint",
                  "outputs": [
                    {
                      "internalType": "bool",
                      "name": "success",
                      "type": "bool"
                    }
                  ],
                  "stateMutability": "payable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "_minter",
                      "type": "address"
                    }
                  ],
                  "name": "minterNonce",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "oncyber",
                  "outputs": [
                    {
                      "internalType": "address",
                      "name": "",
                      "type": "address"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "name": "safeBatchTransferFrom",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "name": "safeTransferFrom",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "operator",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "status",
                      "type": "bool"
                    }
                  ],
                  "name": "setApprovalForAll",
                  "outputs": [],
                  "stateMutability": "nonpayable",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    }
                  ],
                  "name": "tokensByAccount",
                  "outputs": [
                    {
                      "internalType": "uint256[]",
                      "name": "",
                      "type": "uint256[]"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "totalHolders",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [],
                  "name": "totalSupply",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "totalSupply",
                  "outputs": [
                    {
                      "internalType": "uint256",
                      "name": "",
                      "type": "uint256"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                },
                {
                  "inputs": [
                    {
                      "internalType": "uint256",
                      "name": "_tokenId",
                      "type": "uint256"
                    }
                  ],
                  "name": "uri",
                  "outputs": [
                    {
                      "internalType": "string",
                      "name": "",
                      "type": "string"
                    }
                  ],
                  "stateMutability": "view",
                  "type": "function"
                }
              ],
              "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
              "receipt": {
                "to": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
                "contractAddress": null,
                "transactionIndex": 0,
                "gasUsed": "555152",
                "logsBloom": "0x
                "blockHash": "0x6bc28c4fe5c4caa2fcc5200304edbd60a8935f6cc2958b1ce4dacb7aa688ac83",
                "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
                "logs": [
                  {
                    "transactionIndex": 0,
                    "blockNumber": 9822632,
                    "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                    ],
                    "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185bdcf2cad40000000000000000000000000000000000000000000000000000000005322b7400000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000e00fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a75000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c00000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000096dcfd84100000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000005c5ed16d00000000000000000000000000000000000000000000000000000000d61b0c8200000000000000000000000000000000000000000000000000000000db7fd4080000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df00000000000000000000000000000000000000000000000000000000bd85b0390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                    "logIndex": 0,
                    "blockHash": "0x6bc28c4fe5c4caa2fcc5200304edbd60a8935f6cc2958b1ce4dacb7aa688ac83"
                  }
                ],
                "events": [
                  {
                    "transactionIndex": 0,
                    "blockNumber": 9822632,
                    "transactionHash": "0xaeeab36c5a29d06c632ea5dbee93343e7ae09eaf87c5e9917f9a03cee7737400",
                    "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                    "topics": [
                      "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                    ],
                    "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185bdcf2cad40000000000000000000000000000000000000000000000000000000005322b7400000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000e00fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a75000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c00000000000000000000000000000000000000000000000000000000000000000000000000000000481a220d69c31e114bf3ac69094f3abf895d123d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000096dcfd84100000000000000000000000000000000000000000000000000000000081cdf1200000000000000000000000000000000000000000000000000000000b3a721d1000000000000000000000000000000000000000000000000000000005c5ed16d00000000000000000000000000000000000000000000000000000000d61b0c8200000000000000000000000000000000000000000000000000000000db7fd4080000000000000000000000000000000000000000000000000000000085bff2e70000000000000000000000000000000000000000000000000000000013ba55df00000000000000000000000000000000000000000000000000000000bd85b0390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                    "logIndex": 0,
                    "blockHash": "0x6bc28c4fe5c4caa2fcc5200304edbd60a8935f6cc2958b1ce4dacb7aa688ac83",
                    "args": [
                      [
                        [
                          "0x0000000000000000000000000000000000000000",
                          2,
                          [
                            "0xdcf2cad4",
                            "0x05322b74"
                          ]
                        ],
                        [
                          "0x481A220d69c31E114Bf3Ac69094f3Abf895D123d",
                          1,
                          [
                            "0x00fdd58e",
                            "0x4e1273f4",
                            "0x6787d449",
                            "0x0b885ac3",
                            "0xe985e9c5",
                            "0x572b6c05",
                            "0x481c6a75",
                            "0x1b023947",
                            "0xbc01188e",
                            "0x2eb2c2d6",
                            "0xf242432a",
                            "0xa22cb465",
                            "0x18160ddd",
                            "0x0e89341c"
                          ]
                        ],
                        [
                          "0x481A220d69c31E114Bf3Ac69094f3Abf895D123d",
                          0,
                          [
                            "0x6dcfd841",
                            "0x081cdf12",
                            "0xb3a721d1",
                            "0x5c5ed16d",
                            "0xd61b0c82",
                            "0xdb7fd408",
                            "0x85bff2e7",
                            "0x13ba55df",
                            "0xbd85b039"
                          ]
                        ]
                      ],
                      "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                      "0x0b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f00000000000000000000000000000000000000000000000000"
                    ],
                    "event": "DiamondCut",
                    "eventSignature": "DiamondCut((address,uint8,bytes4[])[],address,bytes)"
                  }
                ],
                "blockNumber": 9822632,
                "cumulativeGasUsed": "555152",
                "status": 1,
                "byzantium": true
              },
              "facets": [
                [
                  "0x35D80A53F7be635f75152221d4D71CD4DCB07e5C",
                  [
                    "0x1f931c1c"
                  ]
                ],
                [
                  "0xC1bbdF9f8c0b6aE0B4d35E9A778080B691A72a3E",
                  [
                    "0xadfca15e",
                    "0x7a0ed627",
                    "0xcdffacc6",
                    "0x52ef6b2c",
                    "0x01ffc9a7"
                  ]
                ],
                [
                  "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                  [
                    "0xf2fde38b",
                    "0x8da5cb5b"
                  ]
                ],
                {
                  "facetAddress": "0x481a220d69c31e114bf3ac69094f3abf895d123d",
                  "functionSelectors": [
                    "0x6dcfd841",
                    "0x00fdd58e",
                    "0x4e1273f4",
                    "0x081cdf12",
                    "0xb3a721d1",
                    "0x6787d449",
                    "0x5c5ed16d",
                    "0xd61b0c82",
                    "0x0b885ac3",
                    "0xe985e9c5",
                    "0x572b6c05",
                    "0x481c6a75",
                    "0xdb7fd408",
                    "0x1b023947",
                    "0xbc01188e",
                    "0x2eb2c2d6",
                    "0xf242432a",
                    "0xa22cb465",
                    "0x01ffc9a7",
                    "0x85bff2e7",
                    "0x13ba55df",
                    "0x18160ddd",
                    "0xbd85b039",
                    "0x0e89341c"
                  ]
                }
              ],
              "diamondCut": [
                {
                  "facetAddress": "0x0000000000000000000000000000000000000000",
                  "functionSelectors": [
                    "0xdcf2cad4",
                    "0x05322b74"
                  ],
                  "action": 2
                },
                {
                  "facetAddress": "0x481a220d69c31e114bf3ac69094f3abf895d123d",
                  "functionSelectors": [
                    "0x00fdd58e",
                    "0x4e1273f4",
                    "0x6787d449",
                    "0x0b885ac3",
                    "0xe985e9c5",
                    "0x572b6c05",
                    "0x481c6a75",
                    "0x1b023947",
                    "0xbc01188e",
                    "0x2eb2c2d6",
                    "0xf242432a",
                    "0xa22cb465",
                    "0x18160ddd",
                    "0x0e89341c"
                  ],
                  "action": 1
                },
                {
                  "facetAddress": "0x481a220d69c31e114bf3ac69094f3abf895d123d",
                  "functionSelectors": [
                    "0x6dcfd841",
                    "0x081cdf12",
                    "0xb3a721d1",
                    "0x5c5ed16d",
                    "0xd61b0c82",
                    "0xdb7fd408",
                    "0x85bff2e7",
                    "0x13ba55df",
                    "0xbd85b039"
                  ],
                  "action": 0
                }
              ],
              "execute": {
                "methodName": "initialize",
                "args": [
                  "ipfs://",
                  "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
                  "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
                  "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
                  "0xD52b58d3a0B9d19FBABC9a9Cf98ffCDcC9a8161E"
                ]
              },
              "history": [
                {
                  "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                  "abi": [
                    {
                      "inputs": [
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "facetAddress",
                              "type": "address"
                            },
                            {
                              "internalType": "enum IDiamondCut.FacetCutAction",
                              "name": "action",
                              "type": "uint8"
                            },
                            {
                              "internalType": "bytes4[]",
                              "name": "functionSelectors",
                              "type": "bytes4[]"
                            }
                          ],
                          "internalType": "struct IDiamondCut.FacetCut[]",
                          "name": "_diamondCut",
                          "type": "tuple[]"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "owner",
                              "type": "address"
                            }
                          ],
                          "internalType": "struct Diamond.DiamondArgs",
                          "name": "_args",
                          "type": "tuple"
                        }
                      ],
                      "stateMutability": "payable",
                      "type": "constructor"
                    },
                    {
                      "stateMutability": "payable",
                      "type": "fallback"
                    },
                    {
                      "stateMutability": "payable",
                      "type": "receive"
                    },
                    {
                      "anonymous": false,
                      "inputs": [
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "facetAddress",
                              "type": "address"
                            },
                            {
                              "internalType": "enum IDiamondCut.FacetCutAction",
                              "name": "action",
                              "type": "uint8"
                            },
                            {
                              "internalType": "bytes4[]",
                              "name": "functionSelectors",
                              "type": "bytes4[]"
                            }
                          ],
                          "indexed": false,
                          "internalType": "struct IDiamondCut.FacetCut[]",
                          "name": "_diamondCut",
                          "type": "tuple[]"
                        },
                        {
                          "indexed": false,
                          "internalType": "address",
                          "name": "_init",
                          "type": "address"
                        },
                        {
                          "indexed": false,
                          "internalType": "bytes",
                          "name": "_calldata",
                          "type": "bytes"
                        }
                      ],
                      "name": "DiamondCut",
                      "type": "event"
                    },
                    {
                      "inputs": [
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "facetAddress",
                              "type": "address"
                            },
                            {
                              "internalType": "enum IDiamondCut.FacetCutAction",
                              "name": "action",
                              "type": "uint8"
                            },
                            {
                              "internalType": "bytes4[]",
                              "name": "functionSelectors",
                              "type": "bytes4[]"
                            }
                          ],
                          "internalType": "struct IDiamondCut.FacetCut[]",
                          "name": "_diamondCut",
                          "type": "tuple[]"
                        },
                        {
                          "internalType": "address",
                          "name": "_init",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "_calldata",
                          "type": "bytes"
                        }
                      ],
                      "name": "diamondCut",
                      "outputs": [],
                      "stateMutability": "nonpayable",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "bytes4",
                          "name": "_functionSelector",
                          "type": "bytes4"
                        }
                      ],
                      "name": "facetAddress",
                      "outputs": [
                        {
                          "internalType": "address",
                          "name": "facetAddress_",
                          "type": "address"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "inputs": [],
                      "name": "facetAddresses",
                      "outputs": [
                        {
                          "internalType": "address[]",
                          "name": "facetAddresses_",
                          "type": "address[]"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "address",
                          "name": "_facet",
                          "type": "address"
                        }
                      ],
                      "name": "facetFunctionSelectors",
                      "outputs": [
                        {
                          "internalType": "bytes4[]",
                          "name": "facetFunctionSelectors_",
                          "type": "bytes4[]"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "inputs": [],
                      "name": "facets",
                      "outputs": [
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "facetAddress",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes4[]",
                              "name": "functionSelectors",
                              "type": "bytes4[]"
                            }
                          ],
                          "internalType": "struct IDiamondLoupe.Facet[]",
                          "name": "facets_",
                          "type": "tuple[]"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "bytes4",
                          "name": "_interfaceId",
                          "type": "bytes4"
                        }
                      ],
                      "name": "supportsInterface",
                      "outputs": [
                        {
                          "internalType": "bool",
                          "name": "",
                          "type": "bool"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "anonymous": false,
                      "inputs": [
                        {
                          "indexed": true,
                          "internalType": "address",
                          "name": "previousOwner",
                          "type": "address"
                        },
                        {
                          "indexed": true,
                          "internalType": "address",
                          "name": "newOwner",
                          "type": "address"
                        }
                      ],
                      "name": "OwnershipTransferred",
                      "type": "event"
                    },
                    {
                      "inputs": [],
                      "name": "owner",
                      "outputs": [
                        {
                          "internalType": "address",
                          "name": "owner_",
                          "type": "address"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "address",
                          "name": "_newOwner",
                          "type": "address"
                        }
                      ],
                      "name": "transferOwnership",
                      "outputs": [],
                      "stateMutability": "nonpayable",
                      "type": "function"
                    },
                    {
                      "anonymous": false,
                      "inputs": [
                        {
                          "indexed": true,
                          "internalType": "address",
                          "name": "account",
                          "type": "address"
                        },
                        {
                          "indexed": true,
                          "internalType": "address",
                          "name": "operator",
                          "type": "address"
                        },
                        {
                          "indexed": false,
                          "internalType": "bool",
                          "name": "approved",
                          "type": "bool"
                        }
                      ],
                      "name": "ApprovalForAll",
                      "type": "event"
                    },
                    {
                      "anonymous": false,
                      "inputs": [
                        {
                          "indexed": true,
                          "internalType": "address",
                          "name": "account",
                          "type": "address"
                        },
                        {
                          "indexed": true,
                          "internalType": "uint256",
                          "name": "tokenId",
                          "type": "uint256"
                        }
                      ],
                      "name": "DestinationMinted",
                      "type": "event"
                    },
                    {
                      "anonymous": false,
                      "inputs": [
                        {
                          "indexed": true,
                          "internalType": "address",
                          "name": "account",
                          "type": "address"
                        },
                        {
                          "indexed": true,
                          "internalType": "uint256",
                          "name": "tokenId",
                          "type": "uint256"
                        },
                        {
                          "indexed": true,
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "name": "Minted",
                      "type": "event"
                    },
                    {
                      "anonymous": false,
                      "inputs": [
                        {
                          "indexed": true,
                          "internalType": "address",
                          "name": "operator",
                          "type": "address"
                        },
                        {
                          "indexed": true,
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "indexed": true,
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "indexed": false,
                          "internalType": "uint256[]",
                          "name": "ids",
                          "type": "uint256[]"
                        },
                        {
                          "indexed": false,
                          "internalType": "uint256[]",
                          "name": "values",
                          "type": "uint256[]"
                        }
                      ],
                      "name": "TransferBatch",
                      "type": "event"
                    },
                    {
                      "anonymous": false,
                      "inputs": [
                        {
                          "indexed": true,
                          "internalType": "address",
                          "name": "operator",
                          "type": "address"
                        },
                        {
                          "indexed": true,
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "indexed": true,
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "indexed": false,
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        },
                        {
                          "indexed": false,
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        }
                      ],
                      "name": "TransferSingle",
                      "type": "event"
                    },
                    {
                      "anonymous": false,
                      "inputs": [
                        {
                          "indexed": false,
                          "internalType": "string",
                          "name": "value",
                          "type": "string"
                        },
                        {
                          "indexed": true,
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ],
                      "name": "URI",
                      "type": "event"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "address",
                          "name": "account",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ],
                      "name": "balanceOf",
                      "outputs": [
                        {
                          "internalType": "uint256",
                          "name": "",
                          "type": "uint256"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "address[]",
                          "name": "accounts",
                          "type": "address[]"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "ids",
                          "type": "uint256[]"
                        }
                      ],
                      "name": "balanceOfBatch",
                      "outputs": [
                        {
                          "internalType": "uint256[]",
                          "name": "",
                          "type": "uint256[]"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "uint256",
                          "name": "_tokenId",
                          "type": "uint256"
                        }
                      ],
                      "name": "getDrop",
                      "outputs": [
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "timeStart",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "timeEnd",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shareCyber",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "price",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "amountCap",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "minted",
                              "type": "uint256"
                            },
                            {
                              "internalType": "address payable",
                              "name": "creator",
                              "type": "address"
                            }
                          ],
                          "internalType": "struct LibUtilityStorage.Drop",
                          "name": "",
                          "type": "tuple"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "string",
                          "name": "_uri",
                          "type": "string"
                        },
                        {
                          "internalType": "address",
                          "name": "_manager",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "_trustedForwarder",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "_opensea",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "_oncyber",
                          "type": "address"
                        }
                      ],
                      "name": "initialize",
                      "outputs": [],
                      "stateMutability": "nonpayable",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "address",
                          "name": "account",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "operator",
                          "type": "address"
                        }
                      ],
                      "name": "isApprovedForAll",
                      "outputs": [
                        {
                          "internalType": "bool",
                          "name": "",
                          "type": "bool"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "address",
                          "name": "forwarder",
                          "type": "address"
                        }
                      ],
                      "name": "isTrustedForwarder",
                      "outputs": [
                        {
                          "internalType": "bool",
                          "name": "",
                          "type": "bool"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "inputs": [],
                      "name": "manager",
                      "outputs": [
                        {
                          "internalType": "address",
                          "name": "",
                          "type": "address"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "string",
                          "name": "_uri",
                          "type": "string"
                        },
                        {
                          "internalType": "uint256",
                          "name": "_timeStart",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "_timeEnd",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "_price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "_amountCap",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "_shareCyber",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "_signature",
                          "type": "bytes"
                        }
                      ],
                      "name": "mint",
                      "outputs": [
                        {
                          "internalType": "uint256",
                          "name": "_tokenId",
                          "type": "uint256"
                        }
                      ],
                      "stateMutability": "nonpayable",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "uint256",
                          "name": "_tokenId",
                          "type": "uint256"
                        }
                      ],
                      "name": "mintEdition",
                      "outputs": [
                        {
                          "internalType": "bool",
                          "name": "",
                          "type": "bool"
                        }
                      ],
                      "stateMutability": "payable",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "address",
                          "name": "_minter",
                          "type": "address"
                        }
                      ],
                      "name": "minterNonce",
                      "outputs": [
                        {
                          "internalType": "uint256",
                          "name": "",
                          "type": "uint256"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "inputs": [],
                      "name": "oncyber",
                      "outputs": [
                        {
                          "internalType": "address",
                          "name": "",
                          "type": "address"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "ids",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "amounts",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        }
                      ],
                      "name": "safeBatchTransferFrom",
                      "outputs": [],
                      "stateMutability": "nonpayable",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "address",
                          "name": "from",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        }
                      ],
                      "name": "safeTransferFrom",
                      "outputs": [],
                      "stateMutability": "nonpayable",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "address",
                          "name": "operator",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "status",
                          "type": "bool"
                        }
                      ],
                      "name": "setApprovalForAll",
                      "outputs": [],
                      "stateMutability": "nonpayable",
                      "type": "function"
                    },
                    {
                      "inputs": [],
                      "name": "totalSupply",
                      "outputs": [
                        {
                          "internalType": "uint256",
                          "name": "",
                          "type": "uint256"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    },
                    {
                      "inputs": [
                        {
                          "internalType": "uint256",
                          "name": "_tokenId",
                          "type": "uint256"
                        }
                      ],
                      "name": "uri",
                      "outputs": [
                        {
                          "internalType": "string",
                          "name": "",
                          "type": "string"
                        }
                      ],
                      "stateMutability": "view",
                      "type": "function"
                    }
                  ],
                  "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                  "receipt": {
                    "to": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                    "from": "0x422226357641B8Daf8FC23E2cc306c282e87817C",
                    "contractAddress": null,
                    "transactionIndex": 84,
                    "gasUsed": "2591193",
                    "logsBloom": "0x
                    "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
                    "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                    "logs": [
                      {
                        "transactionIndex": 84,
                        "blockNumber": 9284533,
                        "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                        "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                        "topics": [
                          "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                        ],
                        "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                        "logIndex": 97,
                        "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                      },
                      {
                        "transactionIndex": 84,
                        "blockNumber": 9284533,
                        "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                        "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                        "topics": [
                          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
                        ],
                        "data": "0x",
                        "logIndex": 98,
                        "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                      },
                      {
                        "transactionIndex": 84,
                        "blockNumber": 9284533,
                        "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                        "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                        "topics": [
                          "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
                        ],
                        "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
                        "logIndex": 99,
                        "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                      },
                      {
                        "transactionIndex": 84,
                        "blockNumber": 9284533,
                        "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                        "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                        "topics": [
                          "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                        ],
                        "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                        "logIndex": 100,
                        "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                      },
                      {
                        "transactionIndex": 84,
                        "blockNumber": 9284533,
                        "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                        "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                        "topics": [
                          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                          "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
                          "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
                        ],
                        "data": "0x",
                        "logIndex": 101,
                        "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                      }
                    ],
                    "events": [
                      {
                        "transactionIndex": 84,
                        "blockNumber": 9284533,
                        "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                        "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                        "topics": [
                          "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                        ],
                        "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000035d80a53f7be635f75152221d4d71cd4dcb07e5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000011f931c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000c1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000005adfca15e000000000000000000000000000000000000000000000000000000007a0ed62700000000000000000000000000000000000000000000000000000000cdffacc60000000000000000000000000000000000000000000000000000000052ef6b2c0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000000000000000000000000000000000000000000000cfee10af6c7a91863c2bbdbcca3bcb5064a447be000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                        "logIndex": 97,
                        "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                      },
                      {
                        "transactionIndex": 84,
                        "blockNumber": 9284533,
                        "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                        "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                        "topics": [
                          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492"
                        ],
                        "data": "0x",
                        "logIndex": 98,
                        "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                      },
                      {
                        "transactionIndex": 84,
                        "blockNumber": 9284533,
                        "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                        "address": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492",
                        "topics": [
                          "0x644ca5b0a8b0418e9faf3880659eeb84eaad45ad838b0173808e5ca72f5efc49"
                        ],
                        "data": "0x000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33",
                        "logIndex": 99,
                        "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554",
                        "args": [
                          [
                            {
                              "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                              "action": 0,
                              "functionSelectors": [
                                "0x1f931c1c"
                              ]
                            },
                            {
                              "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                              "action": 0,
                              "functionSelectors": [
                                "0xcdffacc6",
                                "0x52ef6b2c",
                                "0xadfca15e",
                                "0x7a0ed627",
                                "0x01ffc9a7"
                              ]
                            },
                            {
                              "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                              "action": 0,
                              "functionSelectors": [
                                "0xf2fde38b",
                                "0x8da5cb5b"
                              ]
                            }
                          ],
                          {
                            "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
                          }
                        ],
                        "event": "DiamondCreated",
                        "eventSignature": "DiamondCreated(address)"
                      },
                      {
                        "transactionIndex": 84,
                        "blockNumber": 9284533,
                        "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                        "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                        "topics": [
                          "0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673"
                        ],
                        "data": "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000defb45f660166b3fe43ec110acafebcfc5185b33000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000aef4e2f292ebeba4996a4b011977c5444b3281fd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000fdd58e000000000000000000000000000000000000000000000000000000004e1273f4000000000000000000000000000000000000000000000000000000006787d449000000000000000000000000000000000000000000000000000000000b885ac300000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000572b6c0500000000000000000000000000000000000000000000000000000000481c6a7500000000000000000000000000000000000000000000000000000000dcf2cad40000000000000000000000000000000000000000000000000000000005322b74000000000000000000000000000000000000000000000000000000001b02394700000000000000000000000000000000000000000000000000000000bc01188e000000000000000000000000000000000000000000000000000000002eb2c2d600000000000000000000000000000000000000000000000000000000f242432a00000000000000000000000000000000000000000000000000000000a22cb4650000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000000000000000000000000000000000000000e89341c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e40b885ac300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dd6243aa1226994a0fa54e3cb076c641f25b746d0000000000000000000000009399bb24dbb5c4b782c70c2969f58716ebbd6a3b00000000000000000000000053d791f18155c211ff8b58671d0f7e9b50e596ad000000000000000000000000d52b58d3a0b9d19fbabc9a9cf98ffcdcc9a8161e0000000000000000000000000000000000000000000000000000000000000007697066733a2f2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                        "logIndex": 100,
                        "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                      },
                      {
                        "transactionIndex": 84,
                        "blockNumber": 9284533,
                        "transactionHash": "0xc8f40127920eebde703661a7caacbc159df1778397d18c4b95e11f7d5eeccf83",
                        "address": "0xDeFB45F660166B3FE43Ec110AcaFEBcFC5185b33",
                        "topics": [
                          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                          "0x000000000000000000000000b812f503607ee2259e9607cb5e5836b550ac6492",
                          "0x000000000000000000000000422226357641b8daf8fc23e2cc306c282e87817c"
                        ],
                        "data": "0x",
                        "logIndex": 101,
                        "blockHash": "0x5adb7615c4f38a9009c3cd80ca934a3c0a7c385e58318b0b711933096607d554"
                      }
                    ],
                    "blockNumber": 9284533,
                    "cumulativeGasUsed": "20695988",
                    "status": 1,
                    "byzantium": true
                  },
                  "args": [
                    [
                      {
                        "facetAddress": "0x35d80a53f7be635f75152221d4d71cd4dcb07e5c",
                        "action": 0,
                        "functionSelectors": [
                          "0x1f931c1c"
                        ]
                      },
                      {
                        "facetAddress": "0xc1bbdf9f8c0b6ae0b4d35e9a778080b691a72a3e",
                        "action": 0,
                        "functionSelectors": [
                          "0xcdffacc6",
                          "0x52ef6b2c",
                          "0xadfca15e",
                          "0x7a0ed627",
                          "0x01ffc9a7"
                        ]
                      },
                      {
                        "facetAddress": "0xcfEe10af6C7A91863c2bbDbCCA3bCB5064A447BE",
                        "action": 0,
                        "functionSelectors": [
                          "0xf2fde38b",
                          "0x8da5cb5b"
                        ]
                      }
                    ],
                    {
                      "owner": "0xB812f503607Ee2259E9607Cb5E5836B550ac6492"
                    }
                  ],
                  "solcInputHash": "1d060b65b8264d57d416f20cb1fe798a",
                  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct Diamond.DiamondArgs\",\"name\":\"_args\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solc_0.7/diamond/Diamond.sol\":\"Diamond\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solc_0.7/diamond/Diamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n* \\n* Implementation of a diamond.\\n/******************************************************************************/\\n\\nimport \\\"./libraries/LibDiamond.sol\\\";\\nimport \\\"./interfaces/IDiamondLoupe.sol\\\";\\nimport \\\"./interfaces/IDiamondCut.sol\\\";\\nimport \\\"./interfaces/IERC173.sol\\\";\\nimport \\\"./interfaces/IERC165.sol\\\";\\n\\ncontract Diamond {\\n    // more arguments are added to this struct\\n    // this avoids stack too deep errors\\n    struct DiamondArgs {\\n        address owner;\\n    }\\n\\n    constructor(IDiamondCut.FacetCut[] memory _diamondCut, DiamondArgs memory _args) payable {\\n        LibDiamond.diamondCut(_diamondCut, address(0), new bytes(0));\\n        LibDiamond.setContractOwner(_args.owner);\\n\\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\\n\\n        // adding ERC165 data\\n        ds.supportedInterfaces[type(IERC165).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondCut).interfaceId] = true;\\n        ds.supportedInterfaces[type(IDiamondLoupe).interfaceId] = true;\\n        ds.supportedInterfaces[type(IERC173).interfaceId] = true;\\n    }\\n\\n    // Find facet for function that is called and execute the\\n    // function if a facet is found and return any value.\\n    fallback() external payable {\\n        LibDiamond.DiamondStorage storage ds;\\n        bytes32 position = LibDiamond.DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n        address facet = ds.selectorToFacetAndPosition[msg.sig].facetAddress;\\n        require(facet != address(0), \\\"Diamond: Function does not exist\\\");\\n        assembly {\\n            calldatacopy(0, 0, calldatasize())\\n            let result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\\n            returndatacopy(0, 0, returndatasize())\\n            switch result\\n                case 0 {\\n                    revert(0, returndatasize())\\n                }\\n                default {\\n                    return(0, returndatasize())\\n                }\\n        }\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x968d41f1fbb08e012a0617f3a8b865c06f60d783e043b675280741b791216202\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xfb3c1af58cd19e1e49f065e33c7c68045ce451c3e16920614979624c44faf892\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\n// A loupe is a small magnifying glass used to look at diamonds.\\n// These functions look at diamonds\\ninterface IDiamondLoupe {\\n    /// These functions are expected to be called frequently\\n    /// by tools.\\n\\n    struct Facet {\\n        address facetAddress;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\n    /// @return facets_ Facet\\n    function facets() external view returns (Facet[] memory facets_);\\n\\n    /// @notice Gets all the function selectors supported by a specific facet.\\n    /// @param _facet The facet address.\\n    /// @return facetFunctionSelectors_\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\n\\n    /// @notice Get all the facet addresses used by a diamond.\\n    /// @return facetAddresses_\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\n\\n    /// @notice Gets the facet that supports the given selector.\\n    /// @dev If facet is not found return address(0).\\n    /// @param _functionSelector The function selector.\\n    /// @return facetAddress_ The facet address.\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\n}\\n\",\"keccak256\":\"0xf4bc76153335588e7cb5fe1c9701857fd2ae0340ad94976adbf1c49054f82dfe\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\ninterface IERC165 {\\n    /// @notice Query if a contract implements an interface\\n    /// @param interfaceId The interface identifier, as specified in ERC-165\\n    /// @dev Interface identification is specified in ERC-165. This function\\n    ///  uses less than 30,000 gas.\\n    /// @return `true` if the contract implements `interfaceID` and\\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xe3ccc62939f8e880bdd4d5a34b05ccb9576810b8e999df6d16124e51019a0603\",\"license\":\"MIT\"},\"solc_0.7/diamond/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0xa4023156092d7cb99c69e21bc95b910e13c54e582d6814601579bc2fb594ecf8\",\"license\":\"MIT\"},\"solc_0.7/diamond/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma experimental ABIEncoderV2;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint16 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint16 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // uint16 selectorCount = uint16(diamondStorage().selectors.length);\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\\n            ds.facetAddresses.push(_facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(oldFacetAddress, selector);\\n            // add function\\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function removeFunction(address _facetAddress, bytes4 _selector) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint16(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = uint16(facetAddressPosition);\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n}\\n\",\"keccak256\":\"0x4eac03abb9864ad822b50481746c975a8e3e3278e179032cfc1b4b9c8e2320bc\",\"license\":\"MIT\"}},\"version\":1}",
                  "bytecode": "0x608060405260405162002d4538038062002d45833981016040819052620000269162000db2565b604080516000808252602082019092526200004e918491620000f560201b620000db1760201c565b620000688160000151620002b560201b6200027d1760201c565b60006200007f6200031760201b620003021760201c565b6301ffc9a760e01b600090815260039091016020526040808220805460ff1990811660019081179092556307e4c70760e21b845282842080548216831790556348e2b09360e01b845282842080548216831790556307f5828d60e41b845291909220805490911690911790555062001442915050565b60005b8351811015620002665760008482815181106200011157fe5b6020026020010151602001519050600060028111156200012d57fe5b8160028111156200013a57fe5b14156200018957620001838583815181106200015257fe5b6020026020010151600001518684815181106200016b57fe5b6020026020010151604001516200033b60201b60201c565b6200025c565b60018160028111156200019857fe5b1415620001e15762000183858381518110620001b057fe5b602002602001015160000151868481518110620001c957fe5b6020026020010151604001516200054e60201b60201c565b6002816002811115620001f057fe5b14156200023957620001838583815181106200020857fe5b6020026020010151600001518684815181106200022157fe5b6020026020010151604001516200077860201b60201c565b60405162461bcd60e51b815260040162000253906200117c565b60405180910390fd5b50600101620000f8565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516200029c9392919062000f25565b60405180910390a1620002b082826200083f565b505050565b6000620002c162000317565b6004810180546001600160a01b038581166001600160a01b031983168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b60008151116200035f5760405162461bcd60e51b81526004016200025390620010d4565b60006200036b62000317565b90506001600160a01b038316620003965760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200043c57620003e08460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200045857fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620004ab5760405162461bcd60e51b81526004016200025390620012ba565b506001600160a01b0386166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790556001600160e01b0319909516835287905292902080546001600160a01b03191690911761ffff60a01b1916600160a01b61ffff86160217905591820191016200043f565b5050505050565b6000815111620005725760405162461bcd60e51b81526004016200025390620010d4565b60006200057e62000317565b90506001600160a01b038316620005a95760405162461bcd60e51b81526004016200025390620011c3565b6001600160a01b038316600090815260018201602052604090205461ffff81166200064f57620005f38460405180606001604052806024815260200162002d21602491396200097c565b6002820180546001600160a01b038616600081815260018087016020908152604083208201805461ffff191661ffff90961695909517909455845490810185559381529190912090910180546001600160a01b03191690911790555b60005b8351811015620005475760008482815181106200066b57fe5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03908116908716811415620006c45760405162461bcd60e51b8152600401620002539062001317565b620006d08183620009a0565b506001600160e01b03198116600081815260208681526040808320805461ffff60a01b1916600160a01b61ffff8a16021781556001600160a01b038b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281546001600160a01b0319169092179055918201910162000652565b60008151116200079c5760405162461bcd60e51b81526004016200025390620010d4565b6000620007a862000317565b90506001600160a01b03831615620007d45760405162461bcd60e51b8152600401620002539062001374565b60005b825181101562000839576000838281518110620007f057fe5b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166200082e8183620009a0565b5050600101620007d7565b50505050565b6001600160a01b0382166200087657805115620008705760405162461bcd60e51b8152600401620002539062001031565b62000978565b60008151116200089a5760405162461bcd60e51b815260040162000253906200120f565b6001600160a01b0382163014620008d057620008d08260405180606001604052806028815260200162002cf9602891396200097c565b600080836001600160a01b031683604051620008ed919062000f07565b600060405180830381855af49150503d80600081146200092a576040519150601f19603f3d011682016040523d82523d6000602084013e6200092f565b606091505b50915091508162000839578051156200095e578060405162461bcd60e51b815260040162000253919062001015565b60405162461bcd60e51b815260040162000253906200108e565b5050565b813b8181620008395760405162461bcd60e51b815260040162000253919062001015565b6000620009ac62000317565b90506001600160a01b038316620009d75760405162461bcd60e51b815260040162000253906200111f565b6001600160a01b03831630141562000a035760405162461bcd60e51b815260040162000253906200126c565b6001600160e01b03198216600090815260208281526040808320546001600160a01b03871684526001850190925290912054600160a01b90910461ffff16906000190180821462000b27576001600160a01b0385166000908152600184016020526040812080548390811062000a7557fe5b600091825260208083206008830401546001600160a01b038a168452600188019091526040909220805460079092166004026101000a90920460e01b92508291908590811062000ac157fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b031992909216825284905260409020805461ffff60a01b1916600160a01b61ffff8516021790555b6001600160a01b0385166000908152600184016020526040902080548062000b4b57fe5b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319861682528490526040902080546001600160b01b031916905580620005475760028301546001600160a01b03861660009081526001858101602052604090912001546000199091019061ffff1680821462000c6357600085600201838154811062000bec57fe5b6000918252602090912001546002870180546001600160a01b03909216925082918490811062000c1857fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018781019092526040902001805461ffff191661ffff83161790555b8460020180548062000c7157fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03891682526001878101909152604090912001805461ffff1916905550505050505050565b80516001600160a01b038116811462000cdb57600080fd5b919050565b600082601f83011262000cf1578081fd5b8151602062000d0a62000d0483620013f5565b620013d1565b828152818101908583018385028701840188101562000d27578586fd5b855b8581101562000d5d5781516001600160e01b03198116811462000d4a578788fd5b8452928401929084019060010162000d29565b5090979650505050505050565b60006020828403121562000d7c578081fd5b604051602081016001600160401b038111828210171562000d9957fe5b60405290508062000daa8362000cc3565b905292915050565b6000806040838503121562000dc5578182fd5b82516001600160401b038082111562000ddc578384fd5b818501915085601f83011262000df0578384fd5b8151602062000e0362000d0483620013f5565b82815281810190858301885b8581101562000eaa57815188016060818e03601f1901121562000e30578a8bfd5b604051606081018181108a8211171562000e4657fe5b60405262000e5682880162000cc3565b815260408201516003811062000e6a578c8dfd5b8188015260608201518981111562000e80578c8dfd5b62000e908f898386010162000ce0565b604083015250855250928401929084019060010162000e0f565b5050809750505062000ebf8882890162000d6a565b9450505050509250929050565b6001600160a01b03169052565b6000815180845262000ef381602086016020860162001413565b601f01601f19169290920160200192915050565b6000825162000f1b81846020870162001413565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101562000fe257898303607f19018652815180516001600160a01b0316845284810151898501906003811062000f7f57fe5b858701526040918201519185018a9052815190819052908501908a90898601905b8083101562000fcc5783516001600160e01b031916825292870192600192909201919087019062000fa0565b5097860197945050509083019060010162000f4b565b505062000ff28289018b62000ecc565b878103604089015262001006818a62000ed9565b9b9a5050505050505050505050565b6000602082526200102a602083018462000ed9565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656040820152651d995c9d195960d21b606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756040820152663a20b1ba34b7b760c91b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201526d3a30b1363290333ab731ba34b7b760911b606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b6040518181016001600160401b0381118282101715620013ed57fe5b604052919050565b60006001600160401b038211156200140957fe5b5060209081020190565b60005b838110156200143057818101518382015260200162001416565b83811115620008395750506000910152565b6118a780620014526000396000f3fe60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c634300070600334c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465",
                  "deployedBytecode": "0x60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906115f3565b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100d6573d6000f35b3d6000fd5b60005b83518110156102325760008482815181106100f557fe5b60200260200101516020015190506000600281111561011057fe5b81600281111561011c57fe5b141561015f5761015a85838151811061013157fe5b60200260200101516000015186848151811061014957fe5b602002602001015160400151610326565b610229565b600181600281111561016d57fe5b14156101ab5761015a85838151811061018257fe5b60200260200101516000015186848151811061019a57fe5b60200260200101516040015161065e565b60028160028111156101b957fe5b14156101f75761015a8583815181106101ce57fe5b6020026020010151600001518684815181106101e657fe5b6020026020010151604001516109ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611539565b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161026693929190611282565b60405180910390a16102788282610acb565b505050565b6000610287610302565b60048101805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b6000815111610361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b600061036b610302565b905073ffffffffffffffffffffffffffffffffffffffff83166103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166104ab5761040d8460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106104c557fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906116e2565b5073ffffffffffffffffffffffffffffffffffffffff86166000818152600186810160209081526040808420805480850182559085528285206008820401805463ffffffff60079093166004026101000a928302191660e089901c929092029190911790557fffffffff00000000000000000000000000000000000000000000000000000000909516835287905292902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091177fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff86160217905591820191016104ae565b5050505050565b6000815111610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006106a3610302565b905073ffffffffffffffffffffffffffffffffffffffff83166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611596565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260018201602052604090205461ffff81166107e3576107458460405180606001604052806024815260200161184e60249139610c81565b60028201805473ffffffffffffffffffffffffffffffffffffffff861660008181526001808701602090815260408320820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff90961695909517909455845490810185559381529190912090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b60005b83518110156106575760008482815181106107fd57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061173f565b61089c8183610cbc565b507fffffffff00000000000000000000000000000000000000000000000000000000811660008181526020868152604080832080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8a160217815573ffffffffffffffffffffffffffffffffffffffff8b168085526001808b018552928520805480850182559086528486206008820401805463ffffffff60079093166004026101000a928302191660e09990991c91909102979097179096559390925286905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016909217905591820191016107e6565b60008151116109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061147f565b60006109f0610302565b905073ffffffffffffffffffffffffffffffffffffffff831615610a40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061179c565b60005b8251811015610ac5576000838281518110610a5a57fe5b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610abb8183610cbc565b5050600101610a43565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b2457805115610b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906113c5565b610c7d565b6000815111610b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611628565b73ffffffffffffffffffffffffffffffffffffffff82163014610b9e57610b9e8260405180606001604052806028815260200161182660289139610c81565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610bc69190611266565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509150915081610ac557805115610c4b57806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611422565b5050565b813b8181610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae91906113ab565b6000610cc6610302565b905073ffffffffffffffffffffffffffffffffffffffff8316610d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae906114dc565b73ffffffffffffffffffffffffffffffffffffffff8316301415610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae90611685565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152602082815260408083205473ffffffffffffffffffffffffffffffffffffffff8716845260018501909252909120547401000000000000000000000000000000000000000090910461ffff16907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808214610f375773ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260408120805483908110610e3657fe5b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8a168452600188019091526040909220805460079092166004026101000a90920460e01b925082919085908110610e8e57fe5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528490526040902080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff851660009081526001840160205260409020805480610f6757fe5b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff00000000000000000000000000000000000000000000000000000000861682528490526040902080547fffffffffffffffffffff000000000000000000000000000000000000000000001690558061065757600283015473ffffffffffffffffffffffffffffffffffffffff861660009081526001858101602052604090912001547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019061ffff1680821461114357600085600201838154811061107e57fe5b60009182526020909120015460028701805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106110b657fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526001878101909252604090200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83161790555b8460020180548061115057fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff89168252600187810190915260409091200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905550505050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600081518084526112348160208601602086016117f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082516112788184602087016117f9565b9190910192915050565b606080825284518282018190526000919060809081850190602080820287018401818b01875b8481101561137c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8403018652815188840173ffffffffffffffffffffffffffffffffffffffff8251168552858201516003811061130457fe5b858701526040918201519185018a9052815190819052908501908a90898601905b808310156113675783517fffffffff00000000000000000000000000000000000000000000000000000000168252928701926001929092019190870190611325565b509786019794505050908301906001016112a8565b505061138a8289018b611202565b878103604089015261139c818a61121c565b9b9a5050505050505050505050565b6000602082526113be602083018461121c565b9392505050565b6020808252603c908201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860408201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606082015260800190565b60208082526026908201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560408201527f7665727465640000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201527f6163657420746f20637574000000000000000000000000000000000000000000606082015260800190565b60208082526037908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360408201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606082015260800190565b60208082526027908201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560408201527f74416374696f6e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201527f6520616464726573732830290000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604082015260600190565b6020808252603d908201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460408201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606082015260800190565b6020808252602e908201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560408201527f7461626c652066756e6374696f6e000000000000000000000000000000000000606082015260800190565b60208082526035908201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60408201527f6e207468617420616c7265616479206578697374730000000000000000000000606082015260800190565b60208082526038908201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60408201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606082015260800190565b60208082526036908201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260408201527f657373206d757374206265206164647265737328302900000000000000000000606082015260800190565b60005b838110156118145781810151838201526020016117fc565b83811115610ac5575050600091015256fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a264697066735822122054a3c3a118803545231f43700030cb5e290869be0182196a4a05e7d4a1b71d7e64736f6c63430007060033",
                  "facets": [
                    {
                      "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
                      "functionSelectors": [
                        "0x00fdd58e",
                        "0x4e1273f4",
                        "0x6787d449",
                        "0x0b885ac3",
                        "0xe985e9c5",
                        "0x572b6c05",
                        "0x481c6a75",
                        "0xdcf2cad4",
                        "0x05322b74",
                        "0x1b023947",
                        "0xbc01188e",
                        "0x2eb2c2d6",
                        "0xf242432a",
                        "0xa22cb465",
                        "0x01ffc9a7",
                        "0x18160ddd",
                        "0x0e89341c"
                      ]
                    }
                  ],
                  "diamondCut": [
                    {
                      "facetAddress": "0xAEf4E2F292eBEBA4996a4B011977C5444b3281FD",
                      "functionSelectors": [
                        "0x00fdd58e",
                        "0x4e1273f4",
                        "0x6787d449",
                        "0x0b885ac3",
                        "0xe985e9c5",
                        "0x572b6c05",
                        "0x481c6a75",
                        "0xdcf2cad4",
                        "0x05322b74",
                        "0x1b023947",
                        "0xbc01188e",
                        "0x2eb2c2d6",
                        "0xf242432a",
                        "0xa22cb465",
                        "0x18160ddd",
                        "0x0e89341c"
                      ],
                      "action": 0
                    }
                  ],
                  "execute": {
                    "methodName": "initialize",
                    "args": [
                      "ipfs://",
                      "0xDd6243aA1226994A0fA54E3Cb076c641f25b746d",
                      "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
                      "0x53d791f18155C211FF8b58671d0f7E9b50E596ad",
                      "0xD52b58d3a0B9d19FBABC9a9Cf98ffCDcC9a8161E"
                    ]
                  },
                  "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                  },
                  "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                  },
                  "storageLayout": {
                    "storage": [],
                    "types": null
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}